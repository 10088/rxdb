{"version":3,"sources":["../../src/util.ts"],"names":["default","deepClone","pluginMissing","pluginKey","keyParts","split","pluginName","forEach","part","ucfirst","Error","fastUnsecureHash","obj","JSON","stringify","hashValue","i","chr","len","length","charCodeAt","Md5","RXDB_HASH_SALT","hash","msg","_lastNow","now","ret","Date","getTime","nextTick","Promise","res","setTimeout","promiseWait","ms","toPromise","maybePromise","then","resolve","PROMISE_RESOLVE_TRUE","PROMISE_RESOLVE_FALSE","PROMISE_RESOLVE_NULL","PROMISE_RESOLVE_VOID","requestIdlePromise","timeout","window","promiseSeries","tasks","initial","reduce","current","next","requestIdleCallbackIfAvailable","fun","str","f","charAt","toUpperCase","substr","trimDots","slice","runXTimes","xTimes","fn","Array","fill","_v","idx","ensureNotFalsy","sortObject","noArraySort","isArray","sort","a","b","localeCompare","map","RegExp","out","Object","keys","key","stringifyFilter","value","toString","randomCouchString","text","possible","Math","floor","random","RANDOM_STRING","lastOfArray","ar","shuffleArray","arr","batchArray","array","batchSize","batch","splice","push","removeOneFromArrayIfMatches","condition","done","adapterObject","adapter","adapterObj","db","undefined","recursiveDeepCopy","o","clone","flatClone","assign","firstPropertyNameOfObject","firstPropertyValueOfObject","isElectron","isElectronRenderer","flattenObject","ob","toReturn","hasOwnProperty","flatObject","x","parseRevision","revision","height","parseInt","getHeightOfRevision","createRevision","docData","docWithoutRev","_rev_tree","diggestString","overwriteGetterForCaching","getterName","defineProperty","get","isFolderPath","name","includes","getFromMapOrThrow","val","getFromObjectOrThrow","blobBufferUtil","createBlobBuffer","data","type","blobBuffer","Buffer","from","Blob","e","isBlobBuffer","isBuffer","reader","FileReader","addEventListener","target","result","blobBufferType","prototype","call","readAsText","size","byteLength","RXJS_SHARE_REPLAY_DEFAULTS","bufferSize","refCount"],"mappings":"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","sourcesContent":["import type { BlobBuffer, DeepReadonlyObject } from './types';\nimport {\n    default as deepClone\n} from 'clone';\n\n/**\n * Returns an error that indicates that a plugin is missing\n * We do not throw a RxError because this should not be handled\n * programmatically but by using the correct import\n */\nexport function pluginMissing(\n    pluginKey: string\n): Error {\n    const keyParts = pluginKey.split('-');\n    let pluginName = 'RxDB';\n    keyParts.forEach(part => {\n        pluginName += ucfirst(part);\n    });\n    pluginName += 'Plugin';\n    return new Error(\n        `You are using a function which must be overwritten by a plugin.\n        You should either prevent the usage of this function or add the plugin via:\n            import { ${pluginName} } from 'rxdb/plugins/${pluginKey}';\n            addRxPlugin(${pluginName});\n        `\n    );\n}\n\n/**\n * this is a very fast hashing but its unsecure\n * @link http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n * @return a number as hash-result\n */\nexport function fastUnsecureHash(obj: any): number {\n    if (typeof obj !== 'string') obj = JSON.stringify(obj);\n    let hashValue = 0,\n        i, chr, len;\n    if (obj.length === 0) return hashValue;\n    for (i = 0, len = obj.length; i < len; i++) {\n        chr = obj.charCodeAt(i);\n        // tslint:disable-next-line\n        hashValue = ((hashValue << 5) - hashValue) + chr;\n        // tslint:disable-next-line\n        hashValue |= 0; // Convert to 32bit integer\n    }\n    if (hashValue < 0) hashValue = hashValue * -1;\n    return hashValue;\n}\n\n/**\n * Does a RxDB-specific hashing of the given data.\n * We use a static salt so using a rainbow-table\n * or google-ing the hash will not work.\n *\n * spark-md5 is used here\n * because pouchdb uses the same\n * and build-size could be reduced by 9kb\n * \n * TODO instead of using md5 we should use the hash method from the given RxStorage\n * this change would require some rewrites because the RxStorage hash is async.\n * So maybe it is even better to use non-cryptographic hashing like we do at fastUnsecureHash()\n * which would even be faster.\n */\nimport Md5 from 'spark-md5';\nexport const RXDB_HASH_SALT = 'rxdb-specific-hash-salt';\nexport function hash(msg: string | any): string {\n    if (typeof msg !== 'string') {\n        msg = JSON.stringify(msg);\n    }\n    return Md5.hash(RXDB_HASH_SALT + msg);\n}\n\n/**\n * Returns the current unix time in milliseconds\n * Because the accuracy of getTime() in javascript is bad,\n * and we cannot rely on performance.now() on all plattforms,\n * this method implements a way to never return the same value twice.\n * This ensures that when now() is called often, we do not loose the information\n * about which call came first and which came after.\n * Caution: Do not call this too often in a short timespan\n * because it might return 'the future'\n */\nlet _lastNow: number = 0;\n/**\n * Returns the current time in milliseconds,\n * also ensures to not return the same value twice.\n */\nexport function now(): number {\n    let ret = new Date().getTime();\n    if (ret <= _lastNow) {\n        ret = _lastNow + 1;\n    }\n    _lastNow = ret;\n    return ret;\n}\n\n/**\n * returns a promise that resolves on the next tick\n */\nexport function nextTick(): Promise<void> {\n    return new Promise(res => setTimeout(res, 0));\n}\n\nexport function promiseWait(ms: number = 0): Promise<void> {\n    return new Promise(res => setTimeout(res, ms));\n}\n\nexport function toPromise<T>(maybePromise: Promise<T> | T): Promise<T> {\n    if (maybePromise && typeof (maybePromise as any).then === 'function') {\n        // is promise\n        return maybePromise as any;\n    } else {\n        return Promise.resolve(maybePromise);\n    }\n}\n\nexport const PROMISE_RESOLVE_TRUE: Promise<true> = Promise.resolve(true);\nexport const PROMISE_RESOLVE_FALSE: Promise<false> = Promise.resolve(false);\nexport const PROMISE_RESOLVE_NULL: Promise<null> = Promise.resolve(null);\nexport const PROMISE_RESOLVE_VOID: Promise<void> = Promise.resolve();\n\nexport function requestIdlePromise(timeout: number | null = null) {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) {\n        return new Promise(\n            res => (window as any)['requestIdleCallback'](res, {\n                timeout\n            })\n        );\n    } else {\n        return promiseWait(0);\n    }\n}\n\n\n/**\n * like Promise.all() but runs in series instead of parallel\n * @link https://github.com/egoist/promise.series/blob/master/index.js\n * @param tasks array with functions that return a promise\n */\nexport function promiseSeries(\n    tasks: Function[],\n    initial?: any\n): Promise<any[]> {\n    return tasks\n        .reduce(\n            (current, next) => (current as any).then(next),\n            Promise.resolve(initial)\n        );\n}\n\n/**\n * run the callback if requestIdleCallback available\n * do nothing if not\n * @link https://developer.mozilla.org/de/docs/Web/API/Window/requestIdleCallback\n */\nexport function requestIdleCallbackIfAvailable(fun: Function): void {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) (window as any)['requestIdleCallback'](fun);\n}\n\n/**\n * uppercase first char\n */\nexport function ucfirst(str: string): string {\n    str += '';\n    const f = str.charAt(0)\n        .toUpperCase();\n    return f + str.substr(1);\n}\n\n/**\n * removes trailing and ending dots from the string\n */\nexport function trimDots(str: string): string {\n    // start\n    while (str.charAt(0) === '.')\n        str = str.substr(1);\n\n    // end\n    while (str.slice(-1) === '.')\n        str = str.slice(0, -1);\n\n    return str;\n}\n\n\nexport function runXTimes(xTimes: number, fn: (idx: number) => void) {\n    new Array(xTimes).fill(0).forEach((_v, idx) => fn(idx));\n}\n\nexport function ensureNotFalsy<T>(obj: T | false | undefined | null): T {\n    if (!obj) {\n        throw new Error('ensureNotFalsy() is falsy');\n    }\n    return obj;\n}\n\n/**\n * deep-sort an object so its attributes are in lexical order.\n * Also sorts the arrays inside of the object if no-array-sort not set\n */\nexport function sortObject(obj: any, noArraySort = false): any {\n    if (!obj) return obj; // do not sort null, false or undefined\n\n    // array\n    if (!noArraySort && Array.isArray(obj)) {\n        return obj\n            .sort((a, b) => {\n                if (typeof a === 'string' && typeof b === 'string')\n                    return a.localeCompare(b);\n\n                if (typeof a === 'object') return 1;\n                else return -1;\n            })\n            .map(i => sortObject(i, noArraySort));\n    }\n\n    // object\n    // array is also of type object\n    if (typeof obj === 'object' && !Array.isArray(obj)) {\n        if (obj instanceof RegExp)\n            return obj;\n\n        const out: any = {};\n        Object.keys(obj)\n            .sort((a, b) => a.localeCompare(b))\n            .forEach(key => {\n                out[key] = sortObject(obj[key], noArraySort);\n            });\n        return out;\n    }\n\n    // everything else\n    return obj;\n}\n\n\n/**\n * used to JSON.stringify() objects that contain a regex\n * @link https://stackoverflow.com/a/33416684 thank you Fabian Jakobs!\n */\nexport function stringifyFilter(key: string, value: any) {\n    if (value instanceof RegExp) {\n        return value.toString();\n    }\n    return value;\n}\n\n/**\n * get a random string which can be used with couchdb\n * @link http://stackoverflow.com/a/1349426/3443137\n */\nexport function randomCouchString(length: number = 10): string {\n    let text = '';\n    const possible = 'abcdefghijklmnopqrstuvwxyz';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n}\n\n/**\n * A random string that is never inside of any storage\n */\nexport const RANDOM_STRING = 'Fz7SZXPmYJujkzjY1rpXWvlWBqoGAfAX';\n\n\nexport function lastOfArray<T>(ar: T[]): T {\n    return ar[ar.length - 1];\n}\n\n/**\n * shuffle the given array\n */\nexport function shuffleArray<T>(arr: T[]): T[] {\n    return arr.sort(() => (Math.random() - 0.5));\n}\n\n/**\n * Split array with items into smaller arrays with items\n * @link https://stackoverflow.com/a/7273794/3443137\n */\nexport function batchArray<T>(array: T[], batchSize: number): T[][] {\n    array = array.slice(0);\n    const ret: T[][] = [];\n    while (array.length) {\n        const batch = array.splice(0, batchSize);\n        ret.push(batch);\n    }\n    return ret;\n}\n\n\n/**\n * @link https://stackoverflow.com/a/15996017\n */\nexport function removeOneFromArrayIfMatches<T>(ar: T[], condition: (x: T) => boolean): T[] {\n    ar = ar.slice();\n    let i = ar.length;\n    let done = false;\n    while (i-- && !done) {\n        if (condition(ar[i])) {\n            done = true;\n            ar.splice(i, 1);\n        }\n    }\n    return ar;\n}\n\n\n/**\n * transforms the given adapter into a pouch-compatible object\n */\nexport function adapterObject(adapter: any): any {\n    let adapterObj: any = {\n        db: adapter\n    };\n    if (typeof adapter === 'string') {\n        adapterObj = {\n            adapter,\n            db: undefined,\n        };\n    }\n    return adapterObj;\n}\n\n\nfunction recursiveDeepCopy<T>(o: T | DeepReadonlyObject<T>): T {\n    if (!o) return o;\n    return deepClone(o, false) as any;\n}\nexport const clone = recursiveDeepCopy;\n\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone<T>(obj: T | DeepReadonlyObject<T>): T {\n    return Object.assign({}, obj) as any;\n}\n\n/**\n * @link https://stackoverflow.com/a/11509718/3443137\n */\nexport function firstPropertyNameOfObject(obj: any): string {\n    return Object.keys(obj)[0];\n}\nexport function firstPropertyValueOfObject<T>(obj: { [k: string]: T }): T {\n    const key = Object.keys(obj)[0];\n    return obj[key];\n}\n\n\nimport isElectron from 'is-electron';\nexport const isElectronRenderer = isElectron();\n\n\n/**\n * returns a flattened object\n * @link https://gist.github.com/penguinboy/762197\n */\nexport function flattenObject(ob: any) {\n    const toReturn: any = {};\n\n    for (const i in ob) {\n        if (!ob.hasOwnProperty(i)) continue;\n\n        if ((typeof ob[i]) === 'object') {\n            const flatObject = flattenObject(ob[i]);\n            for (const x in flatObject) {\n                if (!flatObject.hasOwnProperty(x)) continue;\n\n                toReturn[i + '.' + x] = flatObject[x];\n            }\n        } else {\n            toReturn[i] = ob[i];\n        }\n    }\n    return toReturn;\n}\n\n\nexport function parseRevision(revision: string): { height: number; hash: string } {\n    const split = revision.split('-');\n    return {\n        height: parseInt(split[0], 10),\n        hash: split[1]\n    }\n}\n\nexport function getHeightOfRevision(revision: string): number {\n    return parseRevision(revision).height;\n}\n\n/**\n * Creates a revision string that does NOT include the revision height\n * Copied and adapted from pouchdb-utils/src/rev.js\n * \n * We use our own function so RxDB usage without pouchdb RxStorage\n * does not include pouchdb code in the bundle.\n */\nexport function createRevision(docData: any): string {\n    const docWithoutRev = Object.assign({}, docData, {\n        _rev_tree: undefined\n    });\n\n    const diggestString = JSON.stringify(docWithoutRev);\n    return Md5.hash(diggestString);\n}\n\n/**\n * overwrites the getter with the actual value\n * Mostly used for caching stuff on the first run\n */\nexport function overwriteGetterForCaching<ValueType = any>(\n    obj: any,\n    getterName: string,\n    value: ValueType\n): ValueType {\n    Object.defineProperty(obj, getterName, {\n        get: function () { return value; }\n    });\n    return value;\n}\n\n/**\n * returns true if the given name is likely a folder path\n */\nexport function isFolderPath(name: string) {\n    // do not check, if foldername is given\n    if (\n        name.includes('/') || // unix\n        name.includes('\\\\') // windows\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function getFromMapOrThrow<K, V>(map: Map<K, V> | WeakMap<any, V>, key: K): V {\n    const val = map.get(key);\n    if (!val) {\n        throw new Error('missing value from map ' + key);\n    }\n    return val;\n}\n\nexport function getFromObjectOrThrow<V>(\n    obj: { [k: string]: V },\n    key: string\n): V {\n    const val = obj[key];\n    if (!val) {\n        throw new Error('missing value from object ' + key);\n    }\n    return val;\n}\n\nexport const blobBufferUtil = {\n    /**\n     * depending if we are on node or browser,\n     * we have to use Buffer(node) or Blob(browser)\n     */\n    createBlobBuffer(\n        data: string,\n        type: string\n    ): BlobBuffer {\n        let blobBuffer: any;\n        if (isElectronRenderer) {\n            // if we are inside of electron-renderer, always use the node-buffer\n            return Buffer.from(data, {\n                type\n            } as any);\n        }\n\n        try {\n            // for browsers\n            blobBuffer = new Blob([data], {\n                type\n            } as any);\n        } catch (e) {\n            // for node\n            blobBuffer = Buffer.from(data, {\n                type\n            } as any);\n        }\n\n        return blobBuffer;\n    },\n    isBlobBuffer(data: any): boolean {\n        if ((typeof Buffer !== 'undefined' && Buffer.isBuffer(data)) || data instanceof Blob) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n    toString(blobBuffer: BlobBuffer | string): Promise<string> {\n        if (typeof blobBuffer === 'string') {\n            return Promise.resolve(blobBuffer);\n        }\n        if (typeof Buffer !== 'undefined' && blobBuffer instanceof Buffer) {\n            // node\n            return nextTick()\n                .then(() => blobBuffer.toString());\n        }\n        return new Promise(res => {\n            // browser\n            const reader = new FileReader();\n            reader.addEventListener('loadend', e => {\n                const text = (e.target as any).result;\n                res(text);\n            });\n\n            const blobBufferType = Object.prototype.toString.call(blobBuffer);\n\n            /**\n             * in the electron-renderer we have a typed array insteaf of a blob\n             * so we have to transform it.\n             * @link https://github.com/pubkey/rxdb/issues/1371\n             */\n            if (blobBufferType === '[object Uint8Array]') {\n                blobBuffer = new Blob([blobBuffer]);\n            }\n\n            reader.readAsText(blobBuffer as any);\n        });\n    },\n    size(blobBuffer: BlobBuffer): number {\n        if (typeof Buffer !== 'undefined' && blobBuffer instanceof Buffer) {\n            // node\n            return Buffer.byteLength(blobBuffer);\n        } else {\n            // browser\n            return (blobBuffer as Blob).size;\n        }\n    }\n};\n\n/**\n * Using shareReplay() without settings will not unsubscribe\n * if there are no more subscribers.\n * So we use these defaults.\n * @link https://cartant.medium.com/rxjs-whats-changed-with-sharereplay-65c098843e95\n */\nexport const RXJS_SHARE_REPLAY_DEFAULTS = {\n    bufferSize: 1,\n    refCount: true\n}\n"],"file":"util.js"}