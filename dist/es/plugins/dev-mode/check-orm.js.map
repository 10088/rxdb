{"version":3,"file":"check-orm.js","names":["newRxError","newRxTypeError","rxCollectionProperties","rxDocumentProperties","checkOrmMethods","statics","Object","entries","forEach","k","v","name","startsWith","type","includes","checkOrmDocumentMethods","schema","methods","topLevelFields","keys","properties","filter","funName"],"sources":["../../../../src/plugins/dev-mode/check-orm.ts"],"sourcesContent":["import {\n    newRxError,\n    newRxTypeError\n} from '../../rx-error';\nimport type { KeyFunctionMap, RxJsonSchema } from '../../types';\nimport { rxCollectionProperties, rxDocumentProperties } from './entity-properties';\n\n/**\n * checks if the given static methods are allowed\n * @throws if not allowed\n */\nexport function checkOrmMethods(statics?: KeyFunctionMap) {\n    if (!statics) {\n        return;\n    }\n    Object\n        .entries(statics)\n        .forEach(([k, v]) => {\n            if (typeof k !== 'string') {\n                throw newRxTypeError('COL14', {\n                    name: k\n                });\n            }\n\n            if (k.startsWith('_')) {\n                throw newRxTypeError('COL15', {\n                    name: k\n                });\n            }\n\n            if (typeof v !== 'function') {\n                throw newRxTypeError('COL16', {\n                    name: k,\n                    type: typeof k\n                });\n            }\n\n            if (\n                rxCollectionProperties().includes(k) ||\n                rxDocumentProperties().includes(k)\n            ) {\n                throw newRxError('COL17', {\n                    name: k\n                });\n            }\n        });\n}\n\n\nexport function checkOrmDocumentMethods<RxDocType>(\n    schema: RxJsonSchema<RxDocType>,\n    methods?: any,\n) {\n    const topLevelFields = Object.keys(schema.properties) as (keyof RxDocType)[];\n    if (!methods) {\n        return;\n    }\n    Object.keys(methods)\n        .filter(funName => topLevelFields.includes(funName as any))\n        .forEach(funName => {\n            throw newRxError('COL18', {\n                funName\n            });\n        });\n}\n"],"mappings":"AAAA,SACIA,UADJ,EAEIC,cAFJ,QAGO,gBAHP;AAKA,SAASC,sBAAT,EAAiCC,oBAAjC,QAA6D,qBAA7D;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAmD;EACtD,IAAI,CAACA,OAAL,EAAc;IACV;EACH;;EACDC,MAAM,CACDC,OADL,CACaF,OADb,EAEKG,OAFL,CAEa,gBAAY;IAAA,IAAVC,CAAU;IAAA,IAAPC,CAAO;;IACjB,IAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2B;MACvB,MAAMR,cAAc,CAAC,OAAD,EAAU;QAC1BU,IAAI,EAAEF;MADoB,CAAV,CAApB;IAGH;;IAED,IAAIA,CAAC,CAACG,UAAF,CAAa,GAAb,CAAJ,EAAuB;MACnB,MAAMX,cAAc,CAAC,OAAD,EAAU;QAC1BU,IAAI,EAAEF;MADoB,CAAV,CAApB;IAGH;;IAED,IAAI,OAAOC,CAAP,KAAa,UAAjB,EAA6B;MACzB,MAAMT,cAAc,CAAC,OAAD,EAAU;QAC1BU,IAAI,EAAEF,CADoB;QAE1BI,IAAI,EAAE,OAAOJ;MAFa,CAAV,CAApB;IAIH;;IAED,IACIP,sBAAsB,GAAGY,QAAzB,CAAkCL,CAAlC,KACAN,oBAAoB,GAAGW,QAAvB,CAAgCL,CAAhC,CAFJ,EAGE;MACE,MAAMT,UAAU,CAAC,OAAD,EAAU;QACtBW,IAAI,EAAEF;MADgB,CAAV,CAAhB;IAGH;EACJ,CA9BL;AA+BH;AAGD,OAAO,SAASM,uBAAT,CACHC,MADG,EAEHC,OAFG,EAGL;EACE,IAAMC,cAAc,GAAGZ,MAAM,CAACa,IAAP,CAAYH,MAAM,CAACI,UAAnB,CAAvB;;EACA,IAAI,CAACH,OAAL,EAAc;IACV;EACH;;EACDX,MAAM,CAACa,IAAP,CAAYF,OAAZ,EACKI,MADL,CACY,UAAAC,OAAO;IAAA,OAAIJ,cAAc,CAACJ,QAAf,CAAwBQ,OAAxB,CAAJ;EAAA,CADnB,EAEKd,OAFL,CAEa,UAAAc,OAAO,EAAI;IAChB,MAAMtB,UAAU,CAAC,OAAD,EAAU;MACtBsB,OAAO,EAAPA;IADsB,CAAV,CAAhB;EAGH,CANL;AAOH"}