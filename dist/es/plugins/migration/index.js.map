{"version":3,"sources":["../../../../src/plugins/migration/index.ts"],"names":["combineLatest","shareReplay","switchMap","PROMISE_RESOLVE_FALSE","mustMigrate","DataMigrator","getMigrationStateByDatabase","onDatabaseDestroy","DATA_MIGRATOR_BY_COLLECTION","WeakMap","RxDBMigrationPlugin","name","rxdb","hooks","preDestroyRxDatabase","prototypes","RxDatabase","proto","migrationStates","pipe","list","bufferSize","refCount","RxCollection","getDataMigrator","has","set","asRxCollection","migrationStrategies","get","migrationNeeded","schema","version","_getOldCollections","getBatchOfOldCollection","migrateDocumentData","_migrateDocuments","deleteOldCollection","migrateOldCollection","migratePromise"],"mappings":"AAAA,SACIA,aADJ,QAGO,MAHP;AAIA,SACIC,WADJ,EAEIC,SAFJ,QAGO,gBAHP;AAUA,SAASC,qBAAT,QAAsC,YAAtC;AACA,SACIC,WADJ,EAEIC,YAFJ,QAGO,iBAHP;AAIA,SACIC,2BADJ,EAEIC,iBAFJ,QAGO,mBAHP;AAKA,OAAO,IAAMC,2BAAgE,GAAG,IAAIC,OAAJ,EAAzE;AAEP,OAAO,IAAMC,mBAA6B,GAAG;AACzCC,EAAAA,IAAI,EAAE,WADmC;AAEzCC,EAAAA,IAAI,EAAE,IAFmC;AAGzCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,oBAAoB,EAAEP;AADnB,GAHkC;AAMzCQ,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAE,oBAACC,KAAD,EAAgB;AACxBA,MAAAA,KAAK,CAACC,eAAN,GAAwB,YAA4D;AAChF,eAAOZ,2BAA2B,CAAC,IAAD,CAA3B,CAAkCa,IAAlC,CACHjB,SAAS,CAAC,UAAAkB,IAAI;AAAA,iBAAIpB,aAAa,CAACoB,IAAD,CAAjB;AAAA,SAAL,CADN,EAEHnB,WAAW,CAAC;AACRoB,UAAAA,UAAU,EAAE,CADJ;AAERC,UAAAA,QAAQ,EAAE;AAFF,SAAD,CAFR,CAAP;AAOH,OARD;AASH,KAXO;AAYRC,IAAAA,YAAY,EAAE,sBAACN,KAAD,EAAgB;AAC1BA,MAAAA,KAAK,CAACO,eAAN,GAAwB,YAA4C;AAChE,YAAI,CAAChB,2BAA2B,CAACiB,GAA5B,CAAgC,IAAhC,CAAL,EAA4C;AACxCjB,UAAAA,2BAA2B,CAACkB,GAA5B,CACI,IADJ,EAEI,IAAIrB,YAAJ,CACI,KAAKsB,cADT,EAEI,KAAKC,mBAFT,CAFJ;AAQH;;AACD,eAAOpB,2BAA2B,CAACqB,GAA5B,CAAgC,IAAhC,CAAP;AACH,OAZD;;AAaAZ,MAAAA,KAAK,CAACa,eAAN,GAAwB,YAA8B;AAClD,YAAI,KAAKC,MAAL,CAAYC,OAAZ,KAAwB,CAA5B,EAA+B;AAC3B,iBAAO7B,qBAAP;AACH;;AACD,eAAOC,WAAW,CAAC,KAAKoB,eAAL,EAAD,CAAlB;AACH,OALD;AAMH;AAhCO;AAN6B,CAAtC,C,CA2CP;;AACA,SACIS,kBADJ,EAEIC,uBAFJ,EAGIC,mBAHJ,EAIIC,iBAJJ,EAKIC,mBALJ,EAMIC,oBANJ,EAOIC,cAPJ,EAQIlC,YARJ,QASO,iBATP","sourcesContent":["import {\n    combineLatest,\n    Observable\n} from 'rxjs';\nimport {\n    shareReplay,\n    switchMap\n} from 'rxjs/operators';\nimport type {\n    RxPlugin,\n    RxCollection,\n    RxDatabase,\n    AllMigrationStates\n} from '../../types';\nimport { PROMISE_RESOLVE_FALSE } from '../../util';\nimport {\n    mustMigrate,\n    DataMigrator\n} from './data-migrator';\nimport {\n    getMigrationStateByDatabase,\n    onDatabaseDestroy\n} from './migration-state';\n\nexport const DATA_MIGRATOR_BY_COLLECTION: WeakMap<RxCollection, DataMigrator> = new WeakMap();\n\nexport const RxDBMigrationPlugin: RxPlugin = {\n    name: 'migration',\n    rxdb: true,\n    hooks: {\n        preDestroyRxDatabase: onDatabaseDestroy\n    },\n    prototypes: {\n        RxDatabase: (proto: any) => {\n            proto.migrationStates = function (this: RxDatabase): Observable<AllMigrationStates> {\n                return getMigrationStateByDatabase(this).pipe(\n                    switchMap(list => combineLatest(list)),\n                    shareReplay({\n                        bufferSize: 1,\n                        refCount: true\n                    })\n                );\n            };\n        },\n        RxCollection: (proto: any) => {\n            proto.getDataMigrator = function (this: RxCollection): DataMigrator {\n                if (!DATA_MIGRATOR_BY_COLLECTION.has(this)) {\n                    DATA_MIGRATOR_BY_COLLECTION.set(\n                        this,\n                        new DataMigrator(\n                            this.asRxCollection,\n                            this.migrationStrategies\n                        )\n                    );\n\n                }\n                return DATA_MIGRATOR_BY_COLLECTION.get(this) as any;\n            };\n            proto.migrationNeeded = function (this: RxCollection) {\n                if (this.schema.version === 0) {\n                    return PROMISE_RESOLVE_FALSE;\n                }        \n                return mustMigrate(this.getDataMigrator());\n            };\n        }\n    }\n};\n\n\n// used in tests\nexport {\n    _getOldCollections,\n    getBatchOfOldCollection,\n    migrateDocumentData,\n    _migrateDocuments,\n    deleteOldCollection,\n    migrateOldCollection,\n    migratePromise,\n    DataMigrator\n} from './data-migrator';\n"],"file":"index.js"}