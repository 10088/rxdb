{"version":3,"file":"index.js","names":["GraphQLClient","objectPath","ensureNotFalsy","fastUnsecureHash","GRAPHQL_REPLICATION_PLUGIN_IDENTITY_PREFIX","RxDBLeaderElectionPlugin","RxReplicationState","startReplicationOnLeaderShip","addRxPlugin","removeGraphQLWebSocketRef","getGraphQLWebSocket","Subject","RxGraphQLReplicationState","url","clientState","replicationIdentifierHash","collection","deletedField","pull","push","live","retryTime","autoStart","setHeaders","headers","client","http","credentials","setCredentials","syncGraphQL","waitForLeadership","mutateableClientState","pullStream$","replicationPrimitivesPull","pullBatchSize","batchSize","handler","lastPulledCheckpoint","queryBuilder","pullGraphQL","query","variables","result","errors","dataPath","Object","keys","data","get","docsData","documents","newCheckpoint","checkpoint","modifier","stream$","asObservable","replicationPrimitivesPush","rows","pushObj","graphqlReplicationState","ws","mustUseSocket","streamQueryBuilder","startBefore","start","bind","wsClient","on","next","subscribe","firstField","error","complete","cancelBefore","cancel","RxDBReplicationGraphQLPlugin","name","init","rxdb","prototypes","RxCollection","proto"],"sources":["../../../../src/plugins/replication-graphql/index.ts"],"sourcesContent":["/**\n * this plugin adds the RxCollection.syncGraphQl()-function to rxdb\n * you can use it to sync collections with remote graphql endpoint\n */\n\nimport GraphQLClient from 'graphql-client';\nimport objectPath from 'object-path';\nimport {\n    ensureNotFalsy,\n    fastUnsecureHash\n} from '../../util';\n\nimport {\n    GRAPHQL_REPLICATION_PLUGIN_IDENTITY_PREFIX\n} from './helper';\n\nimport { RxDBLeaderElectionPlugin } from '../leader-election';\nimport type {\n    RxCollection,\n    RxPlugin,\n    ReplicationPullOptions,\n    ReplicationPushOptions,\n    RxReplicationWriteToMasterRow,\n    GraphQLServerUrl,\n    RxReplicationPullStreamItem\n} from '../../types';\nimport {\n    RxReplicationState,\n    startReplicationOnLeaderShip\n} from '../replication';\nimport {\n    addRxPlugin,\n    SyncOptionsGraphQL,\n    WithDeleted\n} from '../../index';\n\nimport {\n    removeGraphQLWebSocketRef,\n    getGraphQLWebSocket\n} from './graphql-websocket';\nimport { Subject } from 'rxjs';\n\nexport class RxGraphQLReplicationState<RxDocType, CheckpointType> extends RxReplicationState<RxDocType, CheckpointType> {\n    constructor(\n        public readonly url: GraphQLServerUrl,\n        public readonly clientState: { headers: any; client: any, credentials: string | undefined },\n        public readonly replicationIdentifierHash: string,\n        public readonly collection: RxCollection<RxDocType>,\n        public readonly deletedField: string,\n        public readonly pull?: ReplicationPullOptions<RxDocType, CheckpointType>,\n        public readonly push?: ReplicationPushOptions<RxDocType>,\n        public readonly live?: boolean,\n        public retryTime?: number,\n        public autoStart?: boolean\n    ) {\n        super(\n            replicationIdentifierHash,\n            collection,\n            deletedField,\n            pull,\n            push,\n            live,\n            retryTime,\n            autoStart\n        );\n    }\n\n    setHeaders(headers: { [k: string]: string }): void {\n        this.clientState.headers = headers;\n        this.clientState.client = GraphQLClient({\n            url: this.url.http,\n            headers,\n            credentials: this.clientState.credentials\n        });\n    }\n\n    setCredentials(credentials: string | undefined) {\n        this.clientState.credentials = credentials\n        this.clientState.client = GraphQLClient({\n            url: this.url.http,\n            headers: this.clientState.headers,\n            credentials\n        });\n    }\n}\n\nexport function syncGraphQL<RxDocType, CheckpointType>(\n    this: RxCollection,\n    {\n        url,\n        headers = {},\n        credentials,\n        deletedField = '_deleted',\n        waitForLeadership = true,\n        pull,\n        push,\n        live = true,\n        retryTime = 1000 * 5, // in ms\n        autoStart = true,\n    }: SyncOptionsGraphQL<RxDocType, CheckpointType>\n): RxGraphQLReplicationState<RxDocType, CheckpointType> {\n    const collection = this;\n\n    /**\n     * We use this object to store the GraphQL client\n     * so we can later swap out the client inside of the replication handlers.\n     */\n    const mutateableClientState = {\n        headers,\n        credentials,\n        client: GraphQLClient({\n            url: url.http,\n            headers,\n            credentials\n        })\n    };\n\n\n    const pullStream$: Subject<RxReplicationPullStreamItem<RxDocType, CheckpointType>> = new Subject();\n\n    let replicationPrimitivesPull: ReplicationPullOptions<RxDocType, CheckpointType> | undefined;\n    if (pull) {\n        const pullBatchSize = pull.batchSize ? pull.batchSize : 20;\n        replicationPrimitivesPull = {\n            async handler(\n                lastPulledCheckpoint: CheckpointType\n            ) {\n                const pullGraphQL = await pull.queryBuilder(lastPulledCheckpoint, pullBatchSize);\n                const result = await mutateableClientState.client.query(pullGraphQL.query, pullGraphQL.variables);\n                if (result.errors) {\n                    throw result.errors;\n                }\n\n                const dataPath = pull.dataPath || ['data', Object.keys(result.data)[0]];\n                const data: any = objectPath.get(result, dataPath);\n\n                const docsData: WithDeleted<RxDocType>[] = data.documents;\n                const newCheckpoint = data.checkpoint;\n\n                return {\n                    documents: docsData,\n                    checkpoint: newCheckpoint\n                }\n            },\n            batchSize: pull.batchSize,\n            modifier: pull.modifier,\n            stream$: pullStream$.asObservable()\n        }\n    }\n    let replicationPrimitivesPush: ReplicationPushOptions<RxDocType> | undefined;\n    if (push) {\n        replicationPrimitivesPush = {\n            async handler(\n                rows: RxReplicationWriteToMasterRow<RxDocType>[]\n            ) {\n                const pushObj = await push.queryBuilder(rows);\n                const result = await mutateableClientState.client.query(pushObj.query, pushObj.variables);\n\n                if (result.errors) {\n                    throw result.errors;\n                }\n                const dataPath = Object.keys(result.data)[0];\n                const data: any = objectPath.get(result.data, dataPath);\n                return data;\n            },\n            batchSize: push.batchSize,\n            modifier: push.modifier\n        };\n    }\n\n    const graphqlReplicationState = new RxGraphQLReplicationState(\n        url,\n        mutateableClientState,\n        GRAPHQL_REPLICATION_PLUGIN_IDENTITY_PREFIX + fastUnsecureHash(url.http ? url.http : url.ws as any),\n        collection,\n        deletedField,\n        replicationPrimitivesPull,\n        replicationPrimitivesPush,\n        live,\n        retryTime,\n        autoStart\n    );\n\n    const mustUseSocket = url.ws &&\n        pull &&\n        pull.streamQueryBuilder &&\n        live;\n\n    const startBefore = graphqlReplicationState.start.bind(graphqlReplicationState);\n    graphqlReplicationState.start = () => {\n        if (mustUseSocket) {\n            const wsClient = getGraphQLWebSocket(ensureNotFalsy(url.ws));\n\n            wsClient.on('connected', () => {\n                pullStream$.next('RESYNC');\n            });\n\n            const query: any = ensureNotFalsy(pull.streamQueryBuilder)(mutateableClientState.headers);\n\n            wsClient.subscribe(\n                query,\n                {\n                    next: (data: any) => {\n                        const firstField = Object.keys(data.data)[0];\n                        pullStream$.next(data.data[firstField]);\n                    },\n                    error: (error: any) => {\n                        pullStream$.error(error);\n                    },\n                    complete: () => {\n                        pullStream$.complete();\n                    }\n                });\n        }\n        return startBefore();\n    }\n\n    const cancelBefore = graphqlReplicationState.cancel.bind(graphqlReplicationState);\n    graphqlReplicationState.cancel = () => {\n        pullStream$.complete();\n        if (mustUseSocket) {\n            removeGraphQLWebSocketRef(ensureNotFalsy(url.ws));\n        }\n        return cancelBefore();\n    }\n\n    startReplicationOnLeaderShip(waitForLeadership, graphqlReplicationState);\n    return graphqlReplicationState;\n}\n\nexport * from './helper';\nexport * from './graphql-schema-from-rx-schema';\nexport * from './query-builder-from-rx-schema';\nexport * from './graphql-websocket';\n\nexport const RxDBReplicationGraphQLPlugin: RxPlugin = {\n    name: 'replication-graphql',\n    init() {\n        addRxPlugin(RxDBLeaderElectionPlugin);\n    },\n    rxdb: true,\n    prototypes: {\n        RxCollection: (proto: any) => {\n            proto.syncGraphQL = syncGraphQL;\n        }\n    }\n};\n"],"mappings":"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"}