{"version":3,"sources":["../../../../../src/plugins/query-builder/mquery/mquery-utils.ts"],"names":["SPECIAL_PROPERTIES","merge","to","from","Object","keys","forEach","key","includes","isObject","arg","toString"],"mappings":"AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA,IAAMA,kBAAkB,GAAG,CAAC,WAAD,EAAc,aAAd,EAA6B,WAA7B,CAA3B;AAEA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAeC,EAAf,EAAwBC,IAAxB,EAAwC;AAC3CC,EAAAA,MAAM,CAACC,IAAP,CAAYF,IAAZ,EACKG,OADL,CACa,UAAAC,GAAG,EAAI;AACZ,QAAIP,kBAAkB,CAACQ,QAAnB,CAA4BD,GAA5B,CAAJ,EAAsC;AAClC;AACH;;AACD,QAAI,OAAOL,EAAE,CAACK,GAAD,CAAT,KAAmB,WAAvB,EAAoC;AAChCL,MAAAA,EAAE,CAACK,GAAD,CAAF,GAAUJ,IAAI,CAACI,GAAD,CAAd;AACH,KAFD,MAEO;AACH,UAAIE,QAAQ,CAACN,IAAI,CAACI,GAAD,CAAL,CAAZ,EACIN,KAAK,CAACC,EAAE,CAACK,GAAD,CAAH,EAAUJ,IAAI,CAACI,GAAD,CAAd,CAAL,CADJ,KAGIL,EAAE,CAACK,GAAD,CAAF,GAAUJ,IAAI,CAACI,GAAD,CAAd;AACP;AACJ,GAbL;AAcH;AAED;AACA;AACA;;AACA,OAAO,SAASE,QAAT,CAAkBC,GAAlB,EAAmF;AACtF,SAAO,sBAAsBA,GAAG,CAACC,QAAJ,EAA7B;AACH","sourcesContent":["/**\n * this is copied from\n * @link https://github.com/aheckmann/mquery/blob/master/lib/utils.js\n */\n\n\n/**\n * @link https://github.com/aheckmann/mquery/commit/792e69fd0a7281a0300be5cade5a6d7c1d468ad4\n */\nconst SPECIAL_PROPERTIES = ['__proto__', 'constructor', 'prototype'];\n\n/**\n * Merges 'from' into 'to' without overwriting existing properties.\n */\nexport function merge(to: any, from: any): any {\n    Object.keys(from)\n        .forEach(key => {\n            if (SPECIAL_PROPERTIES.includes(key)) {\n                return;\n            }\n            if (typeof to[key] === 'undefined') {\n                to[key] = from[key];\n            } else {\n                if (isObject(from[key]))\n                    merge(to[key], from[key]);\n                else\n                    to[key] = from[key];\n            }\n        });\n}\n\n/**\n * Determines if `arg` is an object.\n */\nexport function isObject(arg: Object | any[] | String | Function | RegExp | any): boolean {\n    return '[object Object]' === arg.toString();\n}\n"],"file":"mquery-utils.js"}