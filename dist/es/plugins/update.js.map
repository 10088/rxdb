{"version":3,"sources":["../../../src/plugins/update.ts"],"names":["modifyjs","update","updateObj","oldDocData","_data","newDocData","_saveData","RxQueryUpdate","exec","then","docs","Array","isArray","Promise","all","map","doc","rxdb","prototypes","RxDocument","proto","RxQuery","RxDBUpdatePlugin","name"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,UAArB;AAOA,OAAO,SAASC,MAAT,CAAkCC,SAAlC,EAAkD;AACrD,MAAMC,UAAU,GAAG,KAAKC,KAAxB;AACA,MAAMC,UAAU,GAAGL,QAAQ,CAACG,UAAD,EAAaD,SAAb,CAA3B;AAEA,SAAO,KAAKI,SAAL,CAAeD,UAAf,EAA2BF,UAA3B,CAAP;AACH;AAED,OAAO,SAASI,aAAT,CAEHL,SAFG,EAGa;AAChB,SAAO,KAAKM,IAAL,GACFC,IADE,CACG,UAAAC,IAAI,EAAI;AACV,QAAI,CAACA,IAAL,EAAW;AACP,aAAO,IAAP;AACH;;AACD,QAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;AACrB,aAAOG,OAAO,CAACC,GAAR,CACHJ,IAAI,CAACK,GAAL,CAAS,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACf,MAAJ,CAAWC,SAAX,CAAJ;AAAA,OAAZ,CADG,EAELO,IAFK,CAEA;AAAA,eAAMC,IAAN;AAAA,OAFA,CAAP;AAGH,KAJD,MAIO;AACH;AACA,aAAOA,IAAI,CAACT,MAAL,CAAYC,SAAZ,EAAuBO,IAAvB,CAA4B;AAAA,eAAMC,IAAN;AAAA,OAA5B,CAAP;AACH;AACJ,GAbE,CAAP;AAcH;AAGD,OAAO,IAAMO,IAAI,GAAG,IAAb;AACP,OAAO,IAAMC,UAAU,GAAG;AACtBC,EAAAA,UAAU,EAAE,oBAACC,KAAD,EAAgB;AACxBA,IAAAA,KAAK,CAACnB,MAAN,GAAeA,MAAf;AACH,GAHqB;AAItBoB,EAAAA,OAAO,EAAE,iBAACD,KAAD,EAAgB;AACrBA,IAAAA,KAAK,CAACnB,MAAN,GAAeM,aAAf;AACH;AANqB,CAAnB;AASP,OAAO,IAAMe,gBAA0B,GAAG;AACtCC,EAAAA,IAAI,EAAE,QADgC;AAEtCN,EAAAA,IAAI,EAAJA,IAFsC;AAGtCC,EAAAA,UAAU,EAAVA;AAHsC,CAAnC","sourcesContent":["/**\n * this plugin allows delta-updates with mongo-like-syntax\n * It's using modifyjs internally\n * @link https://github.com/lgandecki/modifyjs\n */\nimport modifyjs from 'modifyjs';\nimport type {\n    RxDocument,\n    RxQuery,\n    RxPlugin\n} from '../types';\n\nexport function update(this: RxDocument, updateObj: any) {\n    const oldDocData = this._data;\n    const newDocData = modifyjs(oldDocData, updateObj);\n\n    return this._saveData(newDocData, oldDocData);\n}\n\nexport function RxQueryUpdate(\n    this: RxQuery,\n    updateObj: any\n    ): Promise<any> {\n    return this.exec()\n        .then(docs => {\n            if (!docs) {\n                return null;\n            }\n            if (Array.isArray(docs)) {\n                return Promise.all(\n                    docs.map(doc => doc.update(updateObj))\n                ).then(() => docs);\n            } else {\n                // via findOne()\n                return docs.update(updateObj).then(() => docs);\n            }\n        });\n}\n\n\nexport const rxdb = true;\nexport const prototypes = {\n    RxDocument: (proto: any) => {\n        proto.update = update;\n    },\n    RxQuery: (proto: any) => {\n        proto.update = RxQueryUpdate;\n    }\n};\n\nexport const RxDBUpdatePlugin: RxPlugin = {\n    name: 'update',\n    rxdb,\n    prototypes\n};\n"],"file":"update.js"}