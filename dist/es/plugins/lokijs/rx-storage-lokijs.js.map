{"version":3,"file":"rx-storage-lokijs.js","names":["lokijs","ensureNotFalsy","flatClone","createLokiStorageInstance","getLokiSortComparator","binaryMd5","RxStorageLokiStatics","hash","data","Promise","res","digest","hashKey","prepareQuery","_schema","mutateableQuery","Object","keys","selector","length","$and","_deleted","getSortComparator","schema","query","getQueryMatcher","fun","doc","docWithResetDeleted","fakeCollection","binaryIndices","setPrototypeOf","Collection","prototype","fakeResultSet","collection","Resultset","find","ret","filteredrows","RxStorageLoki","databaseSettings","name","statics","leaderElectorByLokiDbName","Map","createStorageInstance","params","getRxStorageLoki","storage"],"sources":["../../../../src/plugins/lokijs/rx-storage-lokijs.ts"],"sourcesContent":["import type {\n    DeterministicSortComparator,\n    QueryMatcher\n} from 'event-reduce-js';\nimport lokijs from 'lokijs';\nimport type {\n    LokiDatabaseSettings,\n    LokiSettings,\n    LokiStorageInternals,\n    MangoQuery,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxJsonSchema,\n    RxStorage,\n    RxStorageInstanceCreationParams,\n    RxStorageStatics\n} from '../../types';\nimport {\n    ensureNotFalsy,\n    flatClone\n} from '../../util';\nimport {\n    createLokiStorageInstance,\n    RxStorageInstanceLoki\n} from './rx-storage-instance-loki';\nimport { getLokiSortComparator } from './lokijs-helper';\nimport type { LeaderElector } from 'broadcast-channel';\n\nimport { binaryMd5 } from 'pouchdb-md5';\n\nexport const RxStorageLokiStatics: RxStorageStatics = {\n\n    hash(data: Buffer | Blob | string): Promise<string> {\n        return new Promise(res => {\n            binaryMd5(data, (digest: string) => {\n                res(digest);\n            });\n        });\n    },\n    hashKey: 'md5',\n    prepareQuery<RxDocType>(\n        _schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        mutateableQuery: MangoQuery<RxDocType>\n    ) {\n        if (Object.keys(ensureNotFalsy(mutateableQuery.selector)).length > 0) {\n            mutateableQuery.selector = {\n                $and: [\n                    {\n                        _deleted: false\n                    },\n                    mutateableQuery.selector\n                ]\n            };\n        } else {\n            mutateableQuery.selector = {\n                _deleted: false\n            };\n        }\n\n        return mutateableQuery;\n    },\n\n\n    getSortComparator<RxDocType>(\n        schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        query: MangoQuery<RxDocType>\n    ): DeterministicSortComparator<RxDocType> {\n        return getLokiSortComparator(schema, query);\n    },\n\n    /**\n     * Returns a function that determines if a document matches a query selector.\n     * It is important to have the exact same logix as lokijs uses, to be sure\n     * that the event-reduce algorithm works correct.\n     * But LokisJS does not export such a function, the query logic is deep inside of\n     * the Resultset prototype.\n     * Because I am lazy, I do not copy paste and maintain that code.\n     * Instead we create a fake Resultset and apply the prototype method Resultset.prototype.find(),\n     * same with Collection.\n     */\n    getQueryMatcher<RxDocType>(\n        _schema: RxJsonSchema<RxDocType>,\n        query: MangoQuery<RxDocType>\n    ): QueryMatcher<RxDocumentWriteData<RxDocType>> {\n        const fun: QueryMatcher<RxDocumentWriteData<RxDocType>> = (doc: RxDocumentWriteData<RxDocType>) => {\n            if (doc._deleted) {\n                return false;\n            }\n            const docWithResetDeleted = flatClone(doc);\n            docWithResetDeleted._deleted = !!docWithResetDeleted._deleted;\n\n            const fakeCollection = {\n                data: [docWithResetDeleted],\n                binaryIndices: {}\n            };\n            Object.setPrototypeOf(fakeCollection, (lokijs as any).Collection.prototype);\n            const fakeResultSet: any = {\n                collection: fakeCollection\n            };\n            Object.setPrototypeOf(fakeResultSet, (lokijs as any).Resultset.prototype);\n            fakeResultSet.find(query.selector, true);\n\n            const ret = fakeResultSet.filteredrows.length > 0;\n            return ret;\n        }\n        return fun;\n    }\n\n}\n\nexport class RxStorageLoki implements RxStorage<LokiStorageInternals, LokiSettings> {\n    public name = 'lokijs';\n    public statics = RxStorageLokiStatics;\n\n    /**\n     * Create one leader elector by db name.\n     * This is done inside of the storage, not globally\n     * to make it easier to test multi-tab behavior.\n     */\n    public leaderElectorByLokiDbName: Map<string, {\n        leaderElector: LeaderElector,\n        /**\n         * Count the instances that currently use the elector.\n         * If is goes to zero again, the elector can be closed.\n         */\n        intancesCount: number;\n    }> = new Map();\n\n    constructor(\n        public databaseSettings: LokiDatabaseSettings\n    ) { }\n\n    public createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<RxDocType, LokiSettings>\n    ): Promise<RxStorageInstanceLoki<RxDocType>> {\n        return createLokiStorageInstance(this, params, this.databaseSettings);\n    }\n}\n\nexport function getRxStorageLoki(\n    databaseSettings: LokiDatabaseSettings = {}\n): RxStorageLoki {\n    const storage = new RxStorageLoki(databaseSettings);\n    return storage;\n}\n"],"mappings":"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"}