{"version":3,"file":"rx-local-document.js","names":["objectPath","distinctUntilChanged","map","overwritable","basePrototype","createRxDocumentConstructor","isBulkWriteConflictError","newRxError","newRxTypeError","writeSingle","clone","flatClone","getDefaultRevision","getDefaultRxDocumentMeta","getFromObjectOrThrow","getLocalDocStateByParent","_catch","body","recover","result","e","then","RxDocumentParent","_settle","pact","state","value","s","_Pact","v","o","bind","observer","RxLocalDocumentClass","id","jsonData","parent","prototype","onFulfilled","onRejected","callback","_this","_isSettledPact","thenable","_for","test","update","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","RxLocalDocumentPrototype","isLocal","_handleChangeEvent","changeEvent","documentId","primary","operation","_dataSync$","next","documentData","docCache","allAttachments$","document","primaryPath","$","asObservable","$emit","get","objPath","_data","undefined","valueObj","deepFreezeWhenDevMode","get$","includes","pipe","data","atomicUpdate","mutationFunction","Promise","res","rej","_atomicQueue","done","oldDocData","getValue","newData","newDocData","_saveData","err","isConflict","atomicPatch","patch","docData","Object","entries","forEach","k","oldData","storageInstance","bulkWrite","previous","docResult","success","error","_rev","remove","writeData","_deleted","_meta","_attachments","INIT_DONE","_init","docBaseProto","props","getOwnPropertyNames","key","exists","getOwnPropertyDescriptor","desc","defineProperty","getThrowingFun","functionName","createRxLocalDocument","newDoc","__proto__","set"],"sources":["../../../../src/plugins/local-documents/rx-local-document.ts"],"sourcesContent":["import objectPath from 'object-path';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { overwritable } from '../../overwritable';\nimport { basePrototype, createRxDocumentConstructor } from '../../rx-document';\nimport { isBulkWriteConflictError, newRxError, newRxTypeError } from '../../rx-error';\nimport { writeSingle } from '../../rx-storage-helper';\nimport type {\n    LocalDocumentAtomicUpdateFunction,\n    LocalDocumentState,\n    RxChangeEvent,\n    RxCollection,\n    RxDatabase,\n    RxDocument,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxLocalDocument,\n    RxLocalDocumentData\n} from '../../types';\nimport {\n    clone,\n    flatClone,\n    getDefaultRevision,\n    getDefaultRxDocumentMeta,\n    getFromObjectOrThrow\n} from '../../util';\nimport { getLocalDocStateByParent } from './local-documents-helper';\n\nconst RxDocumentParent = createRxDocumentConstructor() as any;\n\nclass RxLocalDocumentClass<DocData = any> extends RxDocumentParent {\n    constructor(\n        public readonly id: string,\n        jsonData: DocData,\n        public readonly parent: RxCollection | RxDatabase,\n        public readonly state: LocalDocumentState\n    ) {\n        super(null, jsonData);\n    }\n}\n\n\n\nconst RxLocalDocumentPrototype: any = {\n    get isLocal() {\n        return true;\n    },\n\n    //\n    // overwrites\n    //\n\n    _handleChangeEvent(\n        this: any,\n        changeEvent: RxChangeEvent<RxLocalDocumentData>\n    ) {\n        if (changeEvent.documentId !== this.primary) {\n            return;\n        }\n        switch (changeEvent.operation) {\n            case 'UPDATE':\n                this._dataSync$.next(changeEvent.documentData);\n                break;\n            case 'DELETE':\n                // remove from docCache to assure new upserted RxDocuments will be a new instance\n                const docCache = this.state.docCache;\n                docCache.delete(this.primary);\n                this._dataSync$.next(changeEvent.documentData);\n                break;\n        }\n    },\n\n    get allAttachments$() {\n        // this is overwritten here because we cannot re-set getters on the prototype\n        throw newRxError('LD1', {\n            document: this\n        });\n    },\n    get primaryPath() {\n        return 'id';\n    },\n    get primary() {\n        return this.id;\n    },\n    get $() {\n        return (this as RxDocument)._dataSync$.asObservable();\n    },\n    $emit(this: any, changeEvent: RxChangeEvent<RxLocalDocumentData>) {\n        return this.parent.$emit(changeEvent);\n    },\n    get(this: RxDocument, objPath: string) {\n        objPath = 'data.' + objPath;\n\n        if (!this._data) {\n            return undefined;\n        }\n        if (typeof objPath !== 'string') {\n            throw newRxTypeError('LD2', {\n                objPath\n            });\n        }\n\n        let valueObj = objectPath.get(this._data, objPath);\n        valueObj = overwritable.deepFreezeWhenDevMode(valueObj);\n        return valueObj;\n    },\n    get$(this: RxDocument, objPath: string) {\n        objPath = 'data.' + objPath;\n\n        if (objPath.includes('.item.')) {\n            throw newRxError('LD3', {\n                objPath\n            });\n        }\n        if (objPath === this.primaryPath) {\n            throw newRxError('LD4');\n        }\n\n        return this._dataSync$\n            .pipe(\n                map(data => objectPath.get(data, objPath)),\n                distinctUntilChanged()\n            );\n    },\n    atomicUpdate(mutationFunction: LocalDocumentAtomicUpdateFunction<any>) {\n        return new Promise((res, rej) => {\n            this._atomicQueue = this._atomicQueue\n                .then(async () => {\n                    let done = false;\n                    // we need a hacky while loop to stay incide the chain-link of _atomicQueue\n                    // while still having the option to run a retry on conflicts\n                    while (!done) {\n                        const oldDocData = this._dataSync$.getValue();\n                        const newData = await mutationFunction(clone(oldDocData.data), this);\n                        try {\n                            // always await because mutationFunction might be async\n\n                            const newDocData = flatClone(oldDocData);\n                            newDocData.data = newData;\n\n                            await this._saveData(newDocData, oldDocData);\n                            done = true;\n                        } catch (err) {\n                            /**\n                             * conflicts cannot happen by just using RxDB in one process\n                             * There are two ways they still can appear which is\n                             * replication and multi-tab usage\n                             * Because atomicUpdate has a mutation function,\n                             * we can just re-run the mutation until there is no conflict\n                             */\n                            const isConflict = isBulkWriteConflictError(err as any);\n                            if (isConflict) {\n                                // conflict error -> retrying\n                            } else {\n                                rej(err);\n                                return;\n                            }\n                        }\n                    }\n                    res(this);\n                });\n        });\n    },\n    atomicPatch(patch: Partial<any>) {\n        return this.atomicUpdate((docData: any) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    docData[k] = v;\n                });\n            return docData;\n        });\n    },\n    async _saveData(this: RxLocalDocument<any>, newData: RxDocumentData<RxLocalDocumentData>) {\n        const state = await getLocalDocStateByParent(this.parent);\n        const oldData: RxDocumentData<RxLocalDocumentData> = this._dataSync$.getValue() as any;\n        newData.id = (this as any).id;\n        return state.storageInstance.bulkWrite([{\n            previous: oldData,\n            document: newData\n        }], 'local-document-save-data')\n            .then((res) => {\n                const docResult = res.success[newData.id];\n                if (!docResult) {\n                    throw getFromObjectOrThrow(res.error, newData.id);\n                }\n                newData = flatClone(newData);\n                newData._rev = docResult._rev;\n            });\n    },\n\n    async remove(this: any): Promise<void> {\n        const state = await getLocalDocStateByParent(this.parent);\n        const writeData: RxDocumentWriteData<RxLocalDocumentData> = {\n            id: this.id,\n            data: {},\n            _deleted: true,\n            _meta: getDefaultRxDocumentMeta(),\n            _rev: getDefaultRevision(),\n            _attachments: {}\n        };\n        return writeSingle(state.storageInstance, {\n            previous: this._data,\n            document: writeData\n        }, 'local-document-remove')\n            .then(() => {\n                this.state.docCache.delete(this.id);\n            });\n    }\n};\n\n\n\nlet INIT_DONE = false;\nconst _init = () => {\n    if (INIT_DONE) return;\n    else INIT_DONE = true;\n\n    // add functions of RxDocument\n    const docBaseProto = basePrototype;\n    const props = Object.getOwnPropertyNames(docBaseProto);\n    props.forEach(key => {\n        const exists = Object.getOwnPropertyDescriptor(RxLocalDocumentPrototype, key);\n        if (exists) return;\n        const desc: any = Object.getOwnPropertyDescriptor(docBaseProto, key);\n        Object.defineProperty(RxLocalDocumentPrototype, key, desc);\n    });\n\n\n    /**\n     * Overwrite things that do not work on local documents\n     * with a throwing function.\n     */\n    const getThrowingFun = (k: string) => () => {\n        throw newRxError('LD6', {\n            functionName: k\n        });\n    };\n    [\n        'populate',\n        'update',\n        'putAttachment',\n        'getAttachment',\n        'allAttachments'\n    ].forEach((k: string) => RxLocalDocumentPrototype[k] = getThrowingFun(k));\n};\n\n\n\nexport function createRxLocalDocument<DocData>(\n    id: string,\n    data: RxDocumentData<RxLocalDocumentData<DocData>>,\n    parent: any,\n    state: LocalDocumentState\n): RxLocalDocument<DocData> {\n    _init();\n    const newDoc = new RxLocalDocumentClass(id, data, parent, state);\n    newDoc.__proto__ = RxLocalDocumentPrototype;\n    state.docCache.set(id, newDoc as any);\n    return newDoc as any;\n}\n"],"mappings":"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"}