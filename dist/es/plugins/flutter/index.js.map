{"version":3,"file":"index.js","names":["setFlutterRxDatabaseConnector","createDB","process","init","databaseName","db","eventBulks$","subscribe","eventBulk","sendRxDBEvent","JSON","stringify","collections","Object","entries","forEach","collectionName","collection","push","name","primaryKey","schema","primaryPath","getLokijsAdapterFlutter","ret","loadDatabase","callback","readKeyValue","serializedDb","success","Error","saveDatabase","dbstring","persistKeyValue"],"sources":["../../../../src/plugins/flutter/index.ts"],"sourcesContent":["import type {\n    RxDatabase\n} from '../../types';\n\nexport type CreateRxDatabaseFunctionType = (databaseName: string) => Promise<RxDatabase>;\n\nexport function setFlutterRxDatabaseConnector(\n    createDB: CreateRxDatabaseFunctionType\n) {\n    (process as any).init = async (databaseName: string) => {\n        const db = await createDB(databaseName);\n        db.eventBulks$.subscribe(eventBulk => {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sendRxDBEvent(JSON.stringify(eventBulk));\n        });\n        (process as any).db = db;\n        const collections: { name: string; primaryKey: string; }[] = [];\n        Object.entries(db.collections).forEach(([collectionName, collection]) => {\n            collections.push({\n                name: collectionName,\n                primaryKey: collection.schema.primaryPath\n            });\n        });\n        return {\n            databaseName,\n            collections\n        };\n    };\n}\n\n/**\n * Create a simple lokijs adapter so that we can persist string via flutter\n * @link https://github.com/techfort/LokiJS/blob/master/tutorials/Persistence%20Adapters.md#creating-your-own-basic-persistence-adapter\n */\nexport function getLokijsAdapterFlutter() {\n    const ret = {\n        async loadDatabase(databaseName: string, callback: (v: string | Error) => {}) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            const serializedDb: string = await readKeyValue(databaseName);\n\n            const success = true;\n            if (success) {\n                callback(serializedDb);\n            } else {\n                callback(new Error('There was a problem loading the database'));\n            }\n        },\n        async saveDatabase(databaseName: string, dbstring: string, callback: (v: string | Error | null) => {}) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            await persistKeyValue(databaseName, dbstring);\n\n            const success = true;  // make your own determinations\n            if (success) {\n                callback(null);\n            } else {\n                callback(new Error('An error was encountered loading \" + dbname + \" database.'));\n            }\n        }\n    };\n    return ret;\n}\n"],"mappings":";;AAMA,OAAO,SAASA,6BAA6B,CACzCC,QAAsC,EACxC;EACGC,OAAO,CAASC,IAAI;IAAA,oEAAG,iBAAOC,YAAoB;MAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAC9BH,QAAQ,CAACG,YAAY,CAAC;UAAA;YAAjCC,EAAE;YACRA,EAAE,CAACC,WAAW,CAACC,SAAS,CAAC,UAAAC,SAAS,EAAI;cAClC;cACA;cACAC,aAAa,CAACC,IAAI,CAACC,SAAS,CAACH,SAAS,CAAC,CAAC;YAC5C,CAAC,CAAC;YACDN,OAAO,CAASG,EAAE,GAAGA,EAAE;YAClBO,WAAoD,GAAG,EAAE;YAC/DC,MAAM,CAACC,OAAO,CAACT,EAAE,CAACO,WAAW,CAAC,CAACG,OAAO,CAAC,iBAAkC;cAAA,IAAhCC,cAAc;gBAAEC,UAAU;cAC/DL,WAAW,CAACM,IAAI,CAAC;gBACbC,IAAI,EAAEH,cAAc;gBACpBI,UAAU,EAAEH,UAAU,CAACI,MAAM,CAACC;cAClC,CAAC,CAAC;YACN,CAAC,CAAC;YAAC,iCACI;cACHlB,YAAY,EAAZA,YAAY;cACZQ,WAAW,EAAXA;YACJ,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACJ;IAAA;MAAA;IAAA;EAAA;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASW,uBAAuB,GAAG;EACtC,IAAMC,GAAG,GAAG;IACFC,YAAY;MAAA,+FAACrB,YAAoB,EAAEsB,QAAmC;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAGrCC,YAAY,CAACvB,YAAY,CAAC;YAAA;cAAvDwB,YAAoB;cAEpBC,OAAO,GAAG,IAAI;cACpB,IAAIA,OAAO,EAAE;gBACTH,QAAQ,CAACE,YAAY,CAAC;cAC1B,CAAC,MAAM;gBACHF,QAAQ,CAAC,IAAII,KAAK,CAAC,0CAA0C,CAAC,CAAC;cACnE;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAECC,YAAY;MAAA,+FAAC3B,YAAoB,EAAE4B,QAAgB,EAAEN,QAA0C;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAG3FO,eAAe,CAAC7B,YAAY,EAAE4B,QAAQ,CAAC;YAAA;cAEvCH,OAAO,GAAG,IAAI,EAAG;cACvB,IAAIA,OAAO,EAAE;gBACTH,QAAQ,CAAC,IAAI,CAAC;cAClB,CAAC,MAAM;gBACHA,QAAQ,CAAC,IAAII,KAAK,CAAC,2DAA2D,CAAC,CAAC;cACpF;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;EAET,CAAC;EACD,OAAON,GAAG;AACd"}