{"version":3,"file":"file-util.js","names":["fs","path","now","ensureFolderExists","folderPath","existsSync","mkdirSync","recursive","clearFolder","deleteFolder","rmdirSync","prepareFolders","database","options","directory","metaLoc","metaFileLocation","currentTime","metaData","createdAt","updatedAt","collectionStates","writeFileSync","JSON","stringify","Object","keys","collections","forEach","collectionName","join","writeToFile","location","data","Promise","res","rej","writeFile","err","writeJsonToFile","getMeta","loc","readFile","metaContent","parse","setMeta","meta","documentFolder","docId"],"sources":["../../../../src/plugins/backup/file-util.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport {\n    BackupMetaFileContent,\n    BackupOptions,\n    RxDatabase\n} from '../../types';\nimport { now } from '../../util';\n\n/**\n * ensure that the given folder exists\n */\nexport function ensureFolderExists(folderPath: string): void {\n    if (!fs.existsSync(folderPath)) {\n        fs.mkdirSync(folderPath, { recursive: true });\n    }\n}\n\n/**\n * deletes and recreates the folder\n */\nexport function clearFolder(folderPath: string): void {\n    deleteFolder(folderPath);\n    ensureFolderExists(folderPath);\n}\n\nexport function deleteFolder(folderPath: string): void {\n    // only remove if exists to not raise warning\n    if (fs.existsSync(folderPath)) {\n        fs.rmdirSync(folderPath, { recursive: true });\n    }\n}\n\nexport function prepareFolders(\n    database: RxDatabase,\n    options: BackupOptions\n) {\n    ensureFolderExists(options.directory);\n\n    const metaLoc = metaFileLocation(options);\n\n    if (!fs.existsSync(metaLoc)) {\n        const currentTime = now();\n        const metaData: BackupMetaFileContent = {\n            createdAt: currentTime,\n            updatedAt: currentTime,\n            collectionStates: {}\n        };\n        fs.writeFileSync(metaLoc, JSON.stringify(metaData), 'utf-8');\n    }\n\n    Object.keys(database.collections).forEach(collectionName => {\n        ensureFolderExists(\n            path.join(\n                options.directory,\n                collectionName\n            )\n        );\n    });\n}\n\nexport function writeToFile(\n    location: string,\n    data: string | Buffer\n): Promise<void> {\n    return new Promise(function (res, rej) {\n        fs.writeFile(\n            location,\n            data,\n            'utf-8',\n            (err) => {\n                if (err) {\n                    rej(err);\n                } else {\n                    res();\n                }\n            }\n        );\n    });\n}\n\nexport function writeJsonToFile(\n    location: string,\n    data: any\n): Promise<void> {\n    return writeToFile(\n        location,\n        JSON.stringify(data)\n    );\n}\n\nexport function metaFileLocation(options: BackupOptions): string {\n    return path.join(\n        options.directory,\n        'backup_meta.json'\n    );\n}\n\nexport function getMeta(options: BackupOptions): Promise<BackupMetaFileContent> {\n    const loc = metaFileLocation(options);\n    return new Promise((res, rej) => {\n        fs.readFile(loc, 'utf-8', (err, data) => {\n            if (err) {\n                rej(err);\n            } else {\n                const metaContent = JSON.parse(data);\n                res(metaContent);\n            }\n        });\n    });\n}\n\nexport function setMeta(\n    options: BackupOptions,\n    meta: BackupMetaFileContent\n): Promise<void> {\n    const loc = metaFileLocation(options);\n    return writeJsonToFile(loc, meta);\n}\n\nexport function documentFolder(\n    options: BackupOptions,\n    docId: string\n): string {\n    return path.join(\n        options.directory,\n        docId\n    );\n}\n"],"mappings":"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"}