{"version":3,"file":"index.js","names":["path","BehaviorSubject","firstValueFrom","Subject","filter","map","newRxError","getFromMapOrThrow","PROMISE_RESOLVE_FALSE","PROMISE_RESOLVE_TRUE","PROMISE_RESOLVE_VOID","clearFolder","deleteFolder","documentFolder","ensureFolderExists","getMeta","prepareFolders","setMeta","writeJsonToFile","writeToFile","pact","state","value","s","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","callback","e","_this","thenable","test","update","body","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","backupSingleDocument","rxDocument","options","data","toJSON","writtenFiles","docFolder","primary","fileLocation","join","push","attachments","attachmentsFolder","allAttachments","Promise","all","attachment","getData","content","attachmentFileLocation","id","BACKUP_STATES_BY_DB","WeakMap","addToBackupStates","db","has","set","ar","RxBackupState","database","isStopped","subs","persistRunning","initialReplicationDone$","internalWriteEvents$","writeEvents$","asObservable","batchSize","persistOnce","_persistOnce","meta","Object","entries","collections","collectionName","collection","primaryKey","schema","primaryPath","processedDocuments","Set","requestIdlePromise","collectionStates","checkpoint","lastCheckpoint","hasMore","storageInstance","getChangedDocumentsSince","changesResult","documents","length","docIds","doc","add","elem","pos","arr","indexOf","findByIds","docs","size","Array","from","values","next","name","documentId","files","deleted","docId","getValue","watchForChanges","forEach","changes$","changeStream","sub","subscribe","awaitInitialBackup","pipe","cancel","unsubscribe","backup","backupState","live","RxDBBackupPlugin","rxdb","prototypes","RxDatabase","proto","hooks","preDestroyRxDatabase","after","states","get"],"sources":["../../../../src/plugins/backup/index.ts"],"sourcesContent":["import * as path from 'path';\nimport {\n    BehaviorSubject,\n    firstValueFrom,\n    Observable,\n    Subject,\n    Subscription\n} from 'rxjs';\nimport {\n    filter,\n    map\n} from 'rxjs/operators';\nimport { newRxError } from '../../rx-error';\nimport type {\n    BackupOptions,\n    RxBackupWriteEvent,\n    RxCollection,\n    RxDatabase,\n    RxDocument,\n    RxPlugin\n} from '../../types';\nimport {\n    getFromMapOrThrow,\n    PROMISE_RESOLVE_FALSE,\n    PROMISE_RESOLVE_TRUE,\n    PROMISE_RESOLVE_VOID\n} from '../../util';\nimport {\n    clearFolder,\n    deleteFolder,\n    documentFolder,\n    ensureFolderExists,\n    getMeta,\n    prepareFolders,\n    setMeta,\n    writeJsonToFile,\n    writeToFile\n} from './file-util';\n\n\n/**\n * Backups a single documents,\n * returns the paths to all written files\n */\nexport async function backupSingleDocument(\n    rxDocument: RxDocument<any, any>,\n    options: BackupOptions\n): Promise<string[]> {\n    const data = rxDocument.toJSON(true);\n    const writtenFiles: string[] = [];\n\n    const docFolder = documentFolder(options, rxDocument.primary);\n    await clearFolder(docFolder);\n\n    const fileLocation = path.join(\n        docFolder,\n        'document.json'\n    );\n    await writeJsonToFile(fileLocation, data);\n    writtenFiles.push(fileLocation);\n\n    if (options.attachments) {\n        const attachmentsFolder = path.join(\n            docFolder,\n            'attachments'\n        );\n        ensureFolderExists(attachmentsFolder);\n        const attachments = (rxDocument as RxDocument).allAttachments();\n        await Promise.all(\n            attachments\n                .map(async (attachment) => {\n                    const content = await attachment.getData();\n                    const attachmentFileLocation = path.join(\n                        attachmentsFolder,\n                        attachment.id\n                    );\n                    await writeToFile(attachmentFileLocation, content);\n                    writtenFiles.push(attachmentFileLocation);\n                })\n        );\n    }\n\n    return writtenFiles;\n}\n\nconst BACKUP_STATES_BY_DB: WeakMap<RxDatabase, RxBackupState[]> = new WeakMap();\nfunction addToBackupStates(db: RxDatabase, state: RxBackupState) {\n    if (!BACKUP_STATES_BY_DB.has(db)) {\n        BACKUP_STATES_BY_DB.set(db, []);\n    }\n    const ar = getFromMapOrThrow(BACKUP_STATES_BY_DB, db);\n    if (!ar) {\n        throw newRxError('SNH');\n    }\n    ar.push(state);\n}\n\nexport class RxBackupState {\n    public isStopped: boolean = false;\n    private subs: Subscription[] = [];\n    private persistRunning: Promise<void> = PROMISE_RESOLVE_VOID;\n    private initialReplicationDone$: BehaviorSubject<boolean> = new BehaviorSubject(false as any);\n\n    private readonly internalWriteEvents$: Subject<RxBackupWriteEvent> = new Subject();\n    public readonly writeEvents$: Observable<RxBackupWriteEvent> = this.internalWriteEvents$.asObservable();\n\n    constructor(\n        public readonly database: RxDatabase,\n        public readonly options: BackupOptions\n    ) {\n        if (!this.options.batchSize) {\n            this.options.batchSize = 10;\n        }\n        addToBackupStates(database, this);\n        prepareFolders(database, options);\n    }\n\n    /**\n     * Persists all data from all collections,\n     * beginning from the oldest sequence checkpoint\n     * to the newest one.\n     * Do not call this while it is already running.\n     * Returns true if there are more documents to process\n     */\n    public persistOnce() {\n        return this.persistRunning = this.persistRunning.then(() => this._persistOnce());\n    }\n\n    public async _persistOnce() {\n        const meta = await getMeta(this.options);\n\n        await Promise.all(\n            Object\n                .entries(this.database.collections)\n                .map(async ([collectionName, collection]) => {\n                    const primaryKey = collection.schema.primaryPath;\n                    const processedDocuments: Set<string> = new Set();\n\n                    await this.database.requestIdlePromise();\n\n                    if (!meta.collectionStates[collectionName]) {\n                        meta.collectionStates[collectionName] = {};\n                    }\n                    let lastCheckpoint = meta.collectionStates[collectionName].checkpoint;\n\n                    let hasMore = true;\n                    while (hasMore && !this.isStopped) {\n                        await this.database.requestIdlePromise();\n                        const changesResult = await collection.storageInstance.getChangedDocumentsSince(\n                            this.options.batchSize ? this.options.batchSize : 0,\n                            lastCheckpoint\n                        );\n                        lastCheckpoint = changesResult.documents.length > 0 ? changesResult.checkpoint : lastCheckpoint;\n                        meta.collectionStates[collectionName].checkpoint = lastCheckpoint;\n\n                        const docIds: string[] = changesResult.documents\n                            .map(doc => doc[primaryKey])\n                            .filter(id => {\n                                if (\n                                    processedDocuments.has(id)\n                                ) {\n                                    return false;\n                                } else {\n                                    processedDocuments.add(id);\n                                    return true;\n                                }\n                            })\n                            .filter((elem, pos, arr) => arr.indexOf(elem) === pos); // unique\n                        await this.database.requestIdlePromise();\n\n                        const docs: Map<string, RxDocument> = await collection.findByIds(docIds);\n                        if (docs.size === 0) {\n                            hasMore = false;\n                            continue;\n                        }\n                        await Promise.all(\n                            Array\n                                .from(docs.values())\n                                .map(async (doc) => {\n                                    const writtenFiles = await backupSingleDocument(doc, this.options);\n                                    this.internalWriteEvents$.next({\n                                        collectionName: collection.name,\n                                        documentId: doc.primary,\n                                        files: writtenFiles,\n                                        deleted: false\n                                    });\n                                })\n                        );\n                        // handle deleted documents\n                        await Promise.all(\n                            docIds\n                                .filter(docId => !docs.has(docId))\n                                .map(async (docId) => {\n                                    await deleteFolder(documentFolder(this.options, docId));\n                                    this.internalWriteEvents$.next({\n                                        collectionName: collection.name,\n                                        documentId: docId,\n                                        files: [],\n                                        deleted: true\n                                    });\n                                })\n                        );\n                    }\n                    meta.collectionStates[collectionName].checkpoint = lastCheckpoint;\n                    await setMeta(this.options, meta);\n                })\n        );\n\n        if (!this.initialReplicationDone$.getValue()) {\n            this.initialReplicationDone$.next(true);\n        }\n    }\n\n    public watchForChanges() {\n        const collections: RxCollection[] = Object.values(this.database.collections);\n        collections.forEach(collection => {\n            const changes$ = collection.storageInstance.changeStream();\n            const sub = changes$.subscribe(() => {\n                this.persistOnce();\n            });\n            this.subs.push(sub);\n        });\n    }\n\n    /**\n     * Returns a promise that resolves when the initial backup is done\n     * and the filesystem is in sync with the database state\n     */\n    public awaitInitialBackup(): Promise<boolean> {\n        return firstValueFrom(\n            this.initialReplicationDone$.pipe(\n                filter(v => !!v),\n                map(() => true)\n            )\n        );\n    }\n\n    cancel(): Promise<boolean> {\n        if (this.isStopped) {\n            return PROMISE_RESOLVE_FALSE;\n        }\n        this.isStopped = true;\n        this.subs.forEach(sub => sub.unsubscribe());\n        return PROMISE_RESOLVE_TRUE;\n    }\n}\n\n\nexport function backup(\n    this: RxDatabase,\n    options: BackupOptions\n): RxBackupState {\n    const backupState = new RxBackupState(this, options);\n    backupState.persistOnce();\n\n    if (options.live) {\n        backupState.watchForChanges();\n    }\n\n    return backupState;\n}\n\nexport * from './file-util';\nexport const RxDBBackupPlugin: RxPlugin = {\n    name: 'backup',\n    rxdb: true,\n    prototypes: {\n        RxDatabase(proto: any) {\n            proto.backup = backup;\n        }\n    },\n    hooks: {\n        preDestroyRxDatabase: {\n            after: function preDestroyRxDatabase(db: RxDatabase) {\n                const states = BACKUP_STATES_BY_DB.get(db);\n                if (states) {\n                    states.forEach(state => state.cancel());\n                }\n            }\n        }\n    }\n};\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,MAAM;AAC5B,SACIC,eAAe,EACfC,cAAc,EAEdC,OAAO,QAEJ,MAAM;AACb,SACIC,MAAM,EACNC,GAAG,QACA,gBAAgB;AACvB,SAASC,UAAU,QAAQ,gBAAgB;AAS3C,SACIC,iBAAiB,EACjBC,qBAAqB,EACrBC,oBAAoB,EACpBC,oBAAoB,QACjB,YAAY;AACnB,SACIC,WAAW,EACXC,YAAY,EACZC,cAAc,EACdC,kBAAkB,EAClBC,OAAO,EACPC,cAAc,EACdC,OAAO,EACPC,eAAe,EACfC,WAAW,QACR,aAAa;;AAGpB;AACA;AACA;AACA;AAJO,iBAAiBC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;EAC3C,IAAI,CAACF,IAAI,CAACG,CAAC,EAAE;IACZ,IAAID,KAAK,iBAAiB,EAAE;MAC3B,IAAIA,KAAK,CAACC,CAAC,EAAE;QACZ,IAAIF,KAAK,GAAG,CAAC,EAAE;UACdA,KAAK,GAAGC,KAAK,CAACC,CAAC;QAChB;QACAD,KAAK,GAAGA,KAAK,CAACE,CAAC;MAChB,CAAC,MAAM;QACNF,KAAK,CAACG,CAAC,GAAG,QAAQC,IAAI,CAAC,IAAI,EAAEN,IAAI,EAAEC,KAAK,CAAC;QACzC;MACD;IACD;IACA,IAAIC,KAAK,IAAIA,KAAK,CAACK,IAAI,EAAE;MACxBL,KAAK,CAACK,IAAI,CAAC,QAAQD,IAAI,CAAC,IAAI,EAAEN,IAAI,EAAEC,KAAK,CAAC,EAAE,QAAQK,IAAI,CAAC,IAAI,EAAEN,IAAI,EAAE,CAAC,CAAC,CAAC;MACxE;IACD;IACAA,IAAI,CAACG,CAAC,GAAGF,KAAK;IACdD,IAAI,CAACI,CAAC,GAAGF,KAAK;IACd,MAAMM,QAAQ,GAAGR,IAAI,CAACK,CAAC;IACvB,IAAIG,QAAQ,EAAE;MACbA,QAAQ,CAACR,IAAI,CAAC;IACf;EACD;AACD;AA9DO,IAAM,QAAQ,aAAc,YAAW;EAC7C,iBAAiB,CAAC;EAClB,MAAMS,SAAS,CAACF,IAAI,GAAG,UAASG,WAAW,EAAEC,UAAU,EAAE;IACxD,IAAMC,MAAM,GAAG,WAAW;IAC1B,IAAMX,KAAK,GAAG,IAAI,CAACE,CAAC;IACpB,IAAIF,KAAK,EAAE;MACV,IAAMY,QAAQ,GAAGZ,KAAK,GAAG,CAAC,GAAGS,WAAW,GAAGC,UAAU;MACrD,IAAIE,QAAQ,EAAE;QACb,IAAI;UACH,QAAQD,MAAM,EAAE,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACT,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,OAAOU,CAAC,EAAE;UACX,QAAQF,MAAM,EAAE,CAAC,EAAEE,CAAC,CAAC;QACtB;QACA,OAAOF,MAAM;MACd,CAAC,MAAM;QACN,OAAO,IAAI;MACZ;IACD;IACA,IAAI,CAACP,CAAC,GAAG,UAASU,KAAK,EAAE;MACxB,IAAI;QACH,IAAMb,KAAK,GAAGa,KAAK,CAACX,CAAC;QACrB,IAAIW,KAAK,CAACZ,CAAC,GAAG,CAAC,EAAE;UAChB,QAAQS,MAAM,EAAE,CAAC,EAAEF,WAAW,GAAGA,WAAW,CAACR,KAAK,CAAC,GAAGA,KAAK,CAAC;QAC7D,CAAC,MAAM,IAAIS,UAAU,EAAE;UACtB,QAAQC,MAAM,EAAE,CAAC,EAAED,UAAU,CAACT,KAAK,CAAC,CAAC;QACtC,CAAC,MAAM;UACN,QAAQU,MAAM,EAAE,CAAC,EAAEV,KAAK,CAAC;QAC1B;MACD,CAAC,CAAC,OAAOY,CAAC,EAAE;QACX,QAAQF,MAAM,EAAE,CAAC,EAAEE,CAAC,CAAC;MACtB;IACD,CAAC;IACD,OAAOF,MAAM;EACd,CAAC;EACD;AACD,CAAC,EAAG;AA6BG,wBAAwBI,QAAQ,EAAE;EACxC,OAAOA,QAAQ,iBAAiB,IAAIA,QAAQ,CAACb,CAAC,GAAG,CAAC;AACnD;AA4LO,cAAcc,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAE;EACxC,IAAIC,KAAK;EACT,SAAS;IACR,IAAIC,cAAc,GAAGJ,IAAI,EAAE;IAC3B,IAAI,eAAeI,cAAc,CAAC,EAAE;MACnCA,cAAc,GAAGA,cAAc,CAACjB,CAAC;IAClC;IACA,IAAI,CAACiB,cAAc,EAAE;MACpB,OAAOT,MAAM;IACd;IACA,IAAIS,cAAc,CAACd,IAAI,EAAE;MACxBa,KAAK,GAAG,CAAC;MACT;IACD;IACA,IAAIR,MAAM,GAAGO,IAAI,EAAE;IACnB,IAAIP,MAAM,IAAIA,MAAM,CAACL,IAAI,EAAE;MAC1B,IAAI,eAAeK,MAAM,CAAC,EAAE;QAC3BA,MAAM,GAAGA,MAAM,CAACT,CAAC;MAClB,CAAC,MAAM;QACNiB,KAAK,GAAG,CAAC;QACT;MACD;IACD;IACA,IAAIF,MAAM,EAAE;MACX,IAAII,WAAW,GAAGJ,MAAM,EAAE;MAC1B,IAAII,WAAW,IAAIA,WAAW,CAACf,IAAI,IAAI,CAAC,eAAee,WAAW,CAAC,EAAE;QACpEF,KAAK,GAAG,CAAC;QACT;MACD;IACD;EACD;EACA,IAAIpB,IAAI,GAAG,WAAW;EACtB,IAAIuB,MAAM,GAAG,QAAQjB,IAAI,CAAC,IAAI,EAAEN,IAAI,EAAE,CAAC,CAAC;EACxC,CAACoB,KAAK,KAAK,CAAC,GAAGC,cAAc,CAACd,IAAI,CAACiB,gBAAgB,CAAC,GAAGJ,KAAK,KAAK,CAAC,GAAGR,MAAM,CAACL,IAAI,CAACkB,gBAAgB,CAAC,GAAGH,WAAW,CAACf,IAAI,CAACmB,kBAAkB,CAAC,EAAEnB,IAAI,CAAC,KAAK,CAAC,EAAEgB,MAAM,CAAC;EAC/J,OAAOvB,IAAI;EACX,SAASyB,gBAAgB,CAACvB,KAAK,EAAE;IAChCU,MAAM,GAAGV,KAAK;IACd,GAAG;MACF,IAAIgB,MAAM,EAAE;QACXI,WAAW,GAAGJ,MAAM,EAAE;QACtB,IAAII,WAAW,IAAIA,WAAW,CAACf,IAAI,IAAI,CAAC,eAAee,WAAW,CAAC,EAAE;UACpEA,WAAW,CAACf,IAAI,CAACmB,kBAAkB,CAAC,CAACnB,IAAI,CAAC,KAAK,CAAC,EAAEgB,MAAM,CAAC;UACzD;QACD;MACD;MACAF,cAAc,GAAGJ,IAAI,EAAE;MACvB,IAAI,CAACI,cAAc,IAAK,eAAeA,cAAc,CAAC,IAAI,CAACA,cAAc,CAACjB,CAAE,EAAE;QAC7E,QAAQJ,IAAI,EAAE,CAAC,EAAEY,MAAM,CAAC;QACxB;MACD;MACA,IAAIS,cAAc,CAACd,IAAI,EAAE;QACxBc,cAAc,CAACd,IAAI,CAACiB,gBAAgB,CAAC,CAACjB,IAAI,CAAC,KAAK,CAAC,EAAEgB,MAAM,CAAC;QAC1D;MACD;MACAX,MAAM,GAAGO,IAAI,EAAE;MACf,IAAI,eAAeP,MAAM,CAAC,EAAE;QAC3BA,MAAM,GAAGA,MAAM,CAACR,CAAC;MAClB;IACD,CAAC,QAAQ,CAACQ,MAAM,IAAI,CAACA,MAAM,CAACL,IAAI;IAChCK,MAAM,CAACL,IAAI,CAACkB,gBAAgB,CAAC,CAAClB,IAAI,CAAC,KAAK,CAAC,EAAEgB,MAAM,CAAC;EACnD;EACA,SAASC,gBAAgB,CAACH,cAAc,EAAE;IACzC,IAAIA,cAAc,EAAE;MACnBT,MAAM,GAAGO,IAAI,EAAE;MACf,IAAIP,MAAM,IAAIA,MAAM,CAACL,IAAI,EAAE;QAC1BK,MAAM,CAACL,IAAI,CAACkB,gBAAgB,CAAC,CAAClB,IAAI,CAAC,KAAK,CAAC,EAAEgB,MAAM,CAAC;MACnD,CAAC,MAAM;QACNE,gBAAgB,CAACb,MAAM,CAAC;MACzB;IACD,CAAC,MAAM;MACN,QAAQZ,IAAI,EAAE,CAAC,EAAEY,MAAM,CAAC;IACzB;EACD;EACA,SAASc,kBAAkB,GAAG;IAC7B,IAAIL,cAAc,GAAGJ,IAAI,EAAE,EAAE;MAC5B,IAAII,cAAc,CAACd,IAAI,EAAE;QACxBc,cAAc,CAACd,IAAI,CAACiB,gBAAgB,CAAC,CAACjB,IAAI,CAAC,KAAK,CAAC,EAAEgB,MAAM,CAAC;MAC3D,CAAC,MAAM;QACNC,gBAAgB,CAACH,cAAc,CAAC;MACjC;IACD,CAAC,MAAM;MACN,QAAQrB,IAAI,EAAE,CAAC,EAAEY,MAAM,CAAC;IACzB;EACD;AACD;AAvSA,WAAsBe,oBAAoB,YAApBA,oBAAoB,CACtCC,UAAgC,EAChCC,OAAsB;EAAA,IACL;IACjB,IAAMC,IAAI,GAAGF,UAAU,CAACG,MAAM,CAAC,IAAI,CAAC;IACpC,IAAMC,YAAsB,GAAG,EAAE;IAEjC,IAAMC,SAAS,GAAGxC,cAAc,CAACoC,OAAO,EAAED,UAAU,CAACM,OAAO,CAAC;IAAC,uBACxD3C,WAAW,CAAC0C,SAAS,CAAC;MAE5B,IAAME,YAAY,GAAGvD,IAAI,CAACwD,IAAI,CAC1BH,SAAS,EACT,eAAe,CAClB;MAAC,uBACInC,eAAe,CAACqC,YAAY,EAAEL,IAAI,CAAC;QACzCE,YAAY,CAACK,IAAI,CAACF,YAAY,CAAC;QAAC;UAAA,IAE5BN,OAAO,CAACS,WAAW;YACnB,IAAMC,iBAAiB,GAAG3D,IAAI,CAACwD,IAAI,CAC/BH,SAAS,EACT,aAAa,CAChB;YACDvC,kBAAkB,CAAC6C,iBAAiB,CAAC;YACrC,IAAMD,WAAW,GAAIV,UAAU,CAAgBY,cAAc,EAAE;YAAC,uBAC1DC,OAAO,CAACC,GAAG,CACbJ,WAAW,CACNrD,GAAG,WAAQ0D,UAAU;cAAA,IAAK;gBAAA,uBACDA,UAAU,CAACC,OAAO,EAAE,iBAApCC,OAAO;kBACb,IAAMC,sBAAsB,GAAGlE,IAAI,CAACwD,IAAI,CACpCG,iBAAiB,EACjBI,UAAU,CAACI,EAAE,CAChB;kBAAC,uBACIhD,WAAW,CAAC+C,sBAAsB,EAAED,OAAO,CAAC;oBAClDb,YAAY,CAACK,IAAI,CAACS,sBAAsB,CAAC;kBAAC;gBAAA;cAC9C,CAAC;gBAAA;cAAA;YAAA,EAAC,CACT;UAAA;QAAA;QAAA;UAGL,OAAOd,YAAY;QAAC,KAAbA,YAAY;MAAA;IAAA;EACvB,CAAC;IAAA;EAAA;AAAA;AAED,IAAMgB,mBAAyD,GAAG,IAAIC,OAAO,EAAE;AAC/E,SAASC,iBAAiB,CAACC,EAAc,EAAElD,KAAoB,EAAE;EAC7D,IAAI,CAAC+C,mBAAmB,CAACI,GAAG,CAACD,EAAE,CAAC,EAAE;IAC9BH,mBAAmB,CAACK,GAAG,CAACF,EAAE,EAAE,EAAE,CAAC;EACnC;EACA,IAAMG,EAAE,GAAGnE,iBAAiB,CAAC6D,mBAAmB,EAAEG,EAAE,CAAC;EACrD,IAAI,CAACG,EAAE,EAAE;IACL,MAAMpE,UAAU,CAAC,KAAK,CAAC;EAC3B;EACAoE,EAAE,CAACjB,IAAI,CAACpC,KAAK,CAAC;AAClB;AAEA,WAAasD,aAAa;EAStB,uBACoBC,QAAoB,EACpB3B,OAAsB,EACxC;IAAA,KAXK4B,SAAS,GAAY,KAAK;IAAA,KACzBC,IAAI,GAAmB,EAAE;IAAA,KACzBC,cAAc,GAAkBrE,oBAAoB;IAAA,KACpDsE,uBAAuB,GAA6B,IAAI/E,eAAe,CAAC,KAAK,CAAQ;IAAA,KAE5EgF,oBAAoB,GAAgC,IAAI9E,OAAO,EAAE;IAAA,KAClE+E,YAAY,GAAmC,IAAI,CAACD,oBAAoB,CAACE,YAAY,EAAE;IAAA,KAGnFP,QAAoB,GAApBA,QAAoB;IAAA,KACpB3B,OAAsB,GAAtBA,OAAsB;IAEtC,IAAI,CAAC,IAAI,CAACA,OAAO,CAACmC,SAAS,EAAE;MACzB,IAAI,CAACnC,OAAO,CAACmC,SAAS,GAAG,EAAE;IAC/B;IACAd,iBAAiB,CAACM,QAAQ,EAAE,IAAI,CAAC;IACjC5D,cAAc,CAAC4D,QAAQ,EAAE3B,OAAO,CAAC;EACrC;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;EAAA,OAOOoC,WAAW,GAAlB,uBAAqB;IAAA;IACjB,OAAO,IAAI,CAACN,cAAc,GAAG,IAAI,CAACA,cAAc,CAACpD,IAAI,CAAC;MAAA,OAAM,KAAI,CAAC2D,YAAY,EAAE;IAAA,EAAC;EACpF,CAAC;EAAA,OAEYA,YAAY;IAAA,IAAG;MAAA,aACG,IAAI;MAAA,uBAAZvE,OAAO,CAAC,OAAKkC,OAAO,CAAC,iBAAlCsC,IAAI;QAAA,uBAEJ1B,OAAO,CAACC,GAAG,CACb0B,MAAM,CACDC,OAAO,CAAC,OAAKb,QAAQ,CAACc,WAAW,CAAC,CAClCrF,GAAG;UAAA,IAAyC;YAAA,IAAhCsF,cAAc;cAAEC,UAAU;YACnC,IAAMC,UAAU,GAAGD,UAAU,CAACE,MAAM,CAACC,WAAW;YAChD,IAAMC,kBAA+B,GAAG,IAAIC,GAAG,EAAE;YAAC,uBAE5C,OAAKrB,QAAQ,CAACsB,kBAAkB,EAAE;cAAA;gBAiExCX,IAAI,CAACY,gBAAgB,CAACR,cAAc,CAAC,CAACS,UAAU,GAAGC,cAAc;gBAAC,uBAC5DpF,OAAO,CAAC,OAAKgC,OAAO,EAAEsC,IAAI,CAAC;cAAA;cAhEjC,IAAI,CAACA,IAAI,CAACY,gBAAgB,CAACR,cAAc,CAAC,EAAE;gBACxCJ,IAAI,CAACY,gBAAgB,CAACR,cAAc,CAAC,GAAG,CAAC,CAAC;cAC9C;cACA,IAAIU,cAAc,GAAGd,IAAI,CAACY,gBAAgB,CAACR,cAAc,CAAC,CAACS,UAAU;cAErE,IAAIE,OAAO,GAAG,IAAI;cAAC;gBAAA,OACZ,EAAAA,OAAO,IAAI,CAAC,OAAKzB,SAAS;cAAA,uBAAE;gBAAA,uBACzB,OAAKD,QAAQ,CAACsB,kBAAkB,EAAE;kBAAA,uBACZN,UAAU,CAACW,eAAe,CAACC,wBAAwB,CAC3E,OAAKvD,OAAO,CAACmC,SAAS,GAAG,OAAKnC,OAAO,CAACmC,SAAS,GAAG,CAAC,EACnDiB,cAAc,CACjB,iBAHKI,aAAa;oBAInBJ,cAAc,GAAGI,aAAa,CAACC,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGF,aAAa,CAACL,UAAU,GAAGC,cAAc;oBAC/Fd,IAAI,CAACY,gBAAgB,CAACR,cAAc,CAAC,CAACS,UAAU,GAAGC,cAAc;oBAEjE,IAAMO,MAAgB,GAAGH,aAAa,CAACC,SAAS,CAC3CrG,GAAG,CAAC,UAAAwG,GAAG;sBAAA,OAAIA,GAAG,CAAChB,UAAU,CAAC;oBAAA,EAAC,CAC3BzF,MAAM,CAAC,UAAA+D,EAAE,EAAI;sBACV,IACI6B,kBAAkB,CAACxB,GAAG,CAACL,EAAE,CAAC,EAC5B;wBACE,OAAO,KAAK;sBAChB,CAAC,MAAM;wBACH6B,kBAAkB,CAACc,GAAG,CAAC3C,EAAE,CAAC;wBAC1B,OAAO,IAAI;sBACf;oBACJ,CAAC,CAAC,CACD/D,MAAM,CAAC,UAAC2G,IAAI,EAAEC,GAAG,EAAEC,GAAG;sBAAA,OAAKA,GAAG,CAACC,OAAO,CAACH,IAAI,CAAC,KAAKC,GAAG;oBAAA,EAAC,CAAC,CAAC;oBAAA,uBACtD,OAAKpC,QAAQ,CAACsB,kBAAkB,EAAE;sBAAA,uBAEIN,UAAU,CAACuB,SAAS,CAACP,MAAM,CAAC,iBAAlEQ,IAA6B;wBACnC,IAAIA,IAAI,CAACC,IAAI,KAAK,CAAC,EAAE;0BACjBf,OAAO,GAAG,KAAK;0BAAC;wBAEpB;wBAAC,uBACKzC,OAAO,CAACC,GAAG,CACbwD,KAAK,CACAC,IAAI,CAACH,IAAI,CAACI,MAAM,EAAE,CAAC,CACnBnH,GAAG,WAAQwG,GAAG;0BAAA,IAAK;4BAAA,uBACW9D,oBAAoB,CAAC8D,GAAG,EAAE,OAAK5D,OAAO,CAAC,iBAA5DG,YAAY;8BAClB,OAAK6B,oBAAoB,CAACwC,IAAI,CAAC;gCAC3B9B,cAAc,EAAEC,UAAU,CAAC8B,IAAI;gCAC/BC,UAAU,EAAEd,GAAG,CAACvD,OAAO;gCACvBsE,KAAK,EAAExE,YAAY;gCACnByE,OAAO,EAAE;8BACb,CAAC,CAAC;4BAAC;0BACP,CAAC;4BAAA;0BAAA;wBAAA,EAAC,CACT;0BACD;0BAAA,uBACMhE,OAAO,CAACC,GAAG,CACb8C,MAAM,CACDxG,MAAM,CAAC,UAAA0H,KAAK;4BAAA,OAAI,CAACV,IAAI,CAAC5C,GAAG,CAACsD,KAAK,CAAC;0BAAA,EAAC,CACjCzH,GAAG,WAAQyH,KAAK;4BAAA,IAAK;8BAAA,uBACZlH,YAAY,CAACC,cAAc,CAAC,OAAKoC,OAAO,EAAE6E,KAAK,CAAC,CAAC;gCACvD,OAAK7C,oBAAoB,CAACwC,IAAI,CAAC;kCAC3B9B,cAAc,EAAEC,UAAU,CAAC8B,IAAI;kCAC/BC,UAAU,EAAEG,KAAK;kCACjBF,KAAK,EAAE,EAAE;kCACTC,OAAO,EAAE;gCACb,CAAC,CAAC;8BAAC;4BACP,CAAC;8BAAA;4BAAA;0BAAA,EAAC,CACT;wBAAA;sBAAA;oBAAA;kBAAA;gBAAA;cACL,CAAC;cAAA;YAAA;UAGL,CAAC;YAAA;UAAA;QAAA,EAAC,CACT;UAAA,IAEG,CAAC,OAAK7C,uBAAuB,CAAC+C,QAAQ,EAAE;YACxC,OAAK/C,uBAAuB,CAACyC,IAAI,CAAC,IAAI,CAAC;UAAC;QAAA;MAAA;IAEhD,CAAC;MAAA;IAAA;EAAA;EAAA,OAEMO,eAAe,GAAtB,2BAAyB;IAAA;IACrB,IAAMtC,WAA2B,GAAGF,MAAM,CAACgC,MAAM,CAAC,IAAI,CAAC5C,QAAQ,CAACc,WAAW,CAAC;IAC5EA,WAAW,CAACuC,OAAO,CAAC,UAAArC,UAAU,EAAI;MAC9B,IAAMsC,QAAQ,GAAGtC,UAAU,CAACW,eAAe,CAAC4B,YAAY,EAAE;MAC1D,IAAMC,GAAG,GAAGF,QAAQ,CAACG,SAAS,CAAC,YAAM;QACjC,MAAI,CAAChD,WAAW,EAAE;MACtB,CAAC,CAAC;MACF,MAAI,CAACP,IAAI,CAACrB,IAAI,CAAC2E,GAAG,CAAC;IACvB,CAAC,CAAC;EACN;;EAEA;AACJ;AACA;AACA,KAHI;EAAA,OAIOE,kBAAkB,GAAzB,8BAA8C;IAC1C,OAAOpI,cAAc,CACjB,IAAI,CAAC8E,uBAAuB,CAACuD,IAAI,CAC7BnI,MAAM,CAAC,UAAAoB,CAAC;MAAA,OAAI,CAAC,CAACA,CAAC;IAAA,EAAC,EAChBnB,GAAG,CAAC;MAAA,OAAM,IAAI;IAAA,EAAC,CAClB,CACJ;EACL,CAAC;EAAA,OAEDmI,MAAM,GAAN,kBAA2B;IACvB,IAAI,IAAI,CAAC3D,SAAS,EAAE;MAChB,OAAOrE,qBAAqB;IAChC;IACA,IAAI,CAACqE,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,IAAI,CAACmD,OAAO,CAAC,UAAAG,GAAG;MAAA,OAAIA,GAAG,CAACK,WAAW,EAAE;IAAA,EAAC;IAC3C,OAAOhI,oBAAoB;EAC/B,CAAC;EAAA;AAAA;AAIL,OAAO,SAASiI,MAAM,CAElBzF,OAAsB,EACT;EACb,IAAM0F,WAAW,GAAG,IAAIhE,aAAa,CAAC,IAAI,EAAE1B,OAAO,CAAC;EACpD0F,WAAW,CAACtD,WAAW,EAAE;EAEzB,IAAIpC,OAAO,CAAC2F,IAAI,EAAE;IACdD,WAAW,CAACX,eAAe,EAAE;EACjC;EAEA,OAAOW,WAAW;AACtB;AAEA,cAAc,aAAa;AAC3B,OAAO,IAAME,gBAA0B,GAAG;EACtCnB,IAAI,EAAE,QAAQ;EACdoB,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;IACRC,UAAU,sBAACC,KAAU,EAAE;MACnBA,KAAK,CAACP,MAAM,GAAGA,MAAM;IACzB;EACJ,CAAC;EACDQ,KAAK,EAAE;IACHC,oBAAoB,EAAE;MAClBC,KAAK,EAAE,SAASD,oBAAoB,CAAC5E,EAAc,EAAE;QACjD,IAAM8E,MAAM,GAAGjF,mBAAmB,CAACkF,GAAG,CAAC/E,EAAE,CAAC;QAC1C,IAAI8E,MAAM,EAAE;UACRA,MAAM,CAACpB,OAAO,CAAC,UAAA5G,KAAK;YAAA,OAAIA,KAAK,CAACmH,MAAM,EAAE;UAAA,EAAC;QAC3C;MACJ;IACJ;EACJ;AACJ,CAAC"}