{"version":3,"file":"replication-graphql.d.js","names":[],"sources":["../../../../src/types/plugins/replication-graphql.d.ts"],"sourcesContent":["import { RxDocumentData } from '../rx-storage';\n\nexport interface RxGraphQLReplicationQueryBuilderResponseObject {\n    query: string;\n    variables: any;\n}\n\nexport type RxGraphQLReplicationQueryBuilderResponse =\n    RxGraphQLReplicationQueryBuilderResponseObject |\n    Promise<RxGraphQLReplicationQueryBuilderResponseObject>;\n\nexport type RxGraphQLReplicationPushQueryBuilder = (\n    // typed 'any' because the data might be modified by the push.modifier.\n    docs: any[]\n    ) =>\n    RxGraphQLReplicationQueryBuilderResponse;\nexport type RxGraphQLReplicationPullQueryBuilder<RxDocType> = (latestPulledDocument: RxDocumentData<RxDocType> | null) =>\n    RxGraphQLReplicationQueryBuilderResponse;\n\nexport interface GraphQLSyncPullOptions<RxDocType> {\n    queryBuilder: RxGraphQLReplicationPullQueryBuilder<RxDocType>;\n    /**\n     * Amount of documents that the remote will send in one request.\n     * If the response contains less then [batchSize] documents,\n     * RxDB will assume there are no more changes on the backend\n     * that are not replicated.\n     */\n    batchSize: number;\n    modifier?: (doc: RxDocType | any) => Promise<any> | any;\n    dataPath?: string;\n}\nexport interface GraphQLSyncPushOptions<RxDocType> {\n    queryBuilder: RxGraphQLReplicationPushQueryBuilder;\n    modifier?: (doc: RxDocumentData<RxDocType>) => Promise<any> | any;\n    batchSize?: number;\n}\n\nexport type SyncOptionsGraphQL<RxDocType> = {\n    url: string;\n    headers?: { [k: string]: string }; // send with all requests to the endpoint\n    waitForLeadership?: boolean; // default=true\n    pull?: GraphQLSyncPullOptions<RxDocType>;\n    push?: GraphQLSyncPushOptions<RxDocType>;\n    deletedFlag?: string; // default='_deleted'\n    live?: boolean; // default=false\n    liveInterval?: number; // time in milliseconds\n    retryTime?: number; // time in milliseconds\n    autoStart?: boolean; // default=true\n};\n"],"mappings":""}