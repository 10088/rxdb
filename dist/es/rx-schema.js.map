{"version":3,"sources":["../../src/rx-schema.ts"],"names":["deepEqual","objectPath","clone","hash","sortObject","pluginMissing","overwriteGetterForCaching","flatClone","newRxError","runPluginHooks","defineGetterSetter","RxSchema","jsonSchema","indexes","getIndexes","primaryPath","getPrimaryFieldOfPrimaryKey","primaryKey","finalFields","getFinalFields","required","concat","filter","field","includes","elem","pos","arr","indexOf","validateChange","dataBefore","dataAfter","forEach","fieldName","schema","validate","_obj","_schemaPath","fillObjectWithDefaults","obj","Object","entries","defaultValues","k","hasOwnProperty","v","getDocumentPrototype","proto","getPrimaryOfDocumentData","documentData","getComposedPrimaryKeyOfDocumentData","fillPrimaryKey","cloned","newPrimary","existingPrimary","args","version","normalize","keys","normalized","properties","values","encrypted","length","attachments","map","index","Array","isArray","key","compositePrimary","fields","value","get","join","separator","getPreviousVersions","c","fill","ret","push","normalizedSchema","from","fillWithDefaultSettings","schemaObj","additionalProperties","keyCompression","_rev","type","minLength","_attachments","_deleted","createRxSchema","runPreCreateHooks","isInstanceOf"],"mappings":"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","sourcesContent":["import deepEqual from 'fast-deep-equal';\nimport objectPath from 'object-path';\n\nimport {\n    clone,\n    hash,\n    sortObject,\n    pluginMissing,\n    overwriteGetterForCaching,\n    flatClone\n} from './util';\nimport {\n    newRxError,\n} from './rx-error';\nimport {\n    runPluginHooks\n} from './hooks';\nimport {\n    defineGetterSetter\n} from './rx-document';\n\nimport type {\n    CompositePrimaryKey,\n    PrimaryKey,\n    RxJsonSchema\n} from './types';\n\nexport class RxSchema<T = any> {\n    public indexes: string[][];\n    public primaryPath: keyof T;\n    public finalFields: string[];\n\n    constructor(\n        public readonly jsonSchema: RxJsonSchema<T>\n    ) {\n        this.indexes = getIndexes(this.jsonSchema);\n\n        // primary is always required\n        this.primaryPath = getPrimaryFieldOfPrimaryKey(this.jsonSchema.primaryKey);\n\n        // final fields are always required\n        this.finalFields = getFinalFields(this.jsonSchema);\n\n        this.jsonSchema.required = (this.jsonSchema as any).required\n            .concat(this.finalFields)\n            .filter((field: string) => !field.includes('.'))\n            .filter((elem: any, pos: any, arr: any) => arr.indexOf(elem) === pos); // unique;\n    }\n\n    public get version(): number {\n        return this.jsonSchema.version;\n    }\n\n    get normalized(): RxJsonSchema<T> {\n        return overwriteGetterForCaching(\n            this,\n            'normalized',\n            normalize(this.jsonSchema)\n        );\n    }\n\n    public get topLevelFields(): (keyof T)[] {\n        return Object.keys(this.normalized.properties) as (keyof T)[];\n    }\n\n    public get defaultValues(): { [P in keyof T]: T[P] } {\n        const values = {} as { [P in keyof T]: T[P] };\n        Object\n            .entries(this.normalized.properties)\n            .filter(([, v]) => (v as any).hasOwnProperty('default'))\n            .forEach(([k, v]) => (values as any)[k] = (v as any).default);\n        return overwriteGetterForCaching(\n            this,\n            'defaultValues',\n            values\n        );\n    }\n\n    /**\n        * true if schema contains at least one encrypted path\n        */\n    get crypt(): boolean {\n        if (\n            !!this.jsonSchema.encrypted && this.jsonSchema.encrypted.length > 0 ||\n            this.jsonSchema.attachments && this.jsonSchema.attachments.encrypted\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * get all encrypted paths\n     */\n    get encryptedPaths(): string[] {\n        return this.jsonSchema.encrypted || [];\n    }\n\n    /**\n     * @overrides itself on the first call\n     */\n    public get hash(): string {\n        return overwriteGetterForCaching(\n            this,\n            'hash',\n            hash(this.normalized)\n        );\n    }\n\n    /**\n     * checks if a given change on a document is allowed\n     * Ensures that:\n     * - primary is not modified\n     * - final fields are not modified\n     * @throws {Error} if not valid\n     */\n    validateChange(dataBefore: any, dataAfter: any): void {\n        this.finalFields.forEach(fieldName => {\n            if (!deepEqual(dataBefore[fieldName], dataAfter[fieldName])) {\n                throw newRxError('DOC9', {\n                    dataBefore,\n                    dataAfter,\n                    fieldName,\n                    schema: this.jsonSchema\n                });\n            }\n        });\n    }\n\n    /**\n     * validate if the obj matches the schema\n     * @overwritten by plugin (required)\n     * @param schemaPath if given, validates agains deep-path of schema\n     * @throws {Error} if not valid\n     * @param obj equal to input-obj\n     */\n    public validate(_obj: any, _schemaPath?: string): void {\n        throw pluginMissing('validate');\n    }\n\n    /**\n     * fills all unset fields with default-values if set\n     */\n    fillObjectWithDefaults(obj: any): any {\n        obj = flatClone(obj);\n        Object\n            .entries(this.defaultValues)\n            .filter(([k]) => !obj.hasOwnProperty(k) || typeof obj[k] === 'undefined')\n            .forEach(([k, v]) => obj[k] = v);\n        return obj;\n    }\n\n    /**\n     * creates the schema-based document-prototype,\n     * see RxCollection.getDocumentPrototype()\n     */\n    public getDocumentPrototype(): any {\n        const proto = {};\n        defineGetterSetter(this, proto, '');\n        overwriteGetterForCaching(\n            this,\n            'getDocumentPrototype',\n            () => proto\n        );\n        return proto;\n    }\n\n\n    getPrimaryOfDocumentData(\n        documentData: Partial<T>\n    ): string {\n        return getComposedPrimaryKeyOfDocumentData(\n            this.jsonSchema,\n            documentData\n        );\n    }\n\n    fillPrimaryKey(\n        documentData: T\n    ): T {\n        const cloned = flatClone(documentData);\n        const newPrimary = getComposedPrimaryKeyOfDocumentData<T>(\n            this.jsonSchema,\n            documentData\n        );\n        const existingPrimary: string | undefined = documentData[this.primaryPath] as any;\n        if (\n            existingPrimary &&\n            existingPrimary !== newPrimary\n        ) {\n            throw newRxError(\n                'DOC19',\n                {\n                    args: {\n                        documentData,\n                        existingPrimary,\n                        newPrimary,\n                    },\n                    schema: this.jsonSchema\n                });\n        }\n\n        (cloned as any)[this.primaryPath] = newPrimary;\n        return cloned;\n    }\n\n}\n\nexport function getIndexes<T = any>(\n    jsonSchema: RxJsonSchema<T>\n): string[][] {\n    return (jsonSchema.indexes || []).map(index => Array.isArray(index) ? index : [index]);\n}\n\nexport function getPrimaryFieldOfPrimaryKey<RxDocType>(\n    primaryKey: PrimaryKey<RxDocType>\n): keyof RxDocType {\n    if (typeof primaryKey === 'string') {\n        return primaryKey as any;\n    } else {\n        return (primaryKey as CompositePrimaryKey<RxDocType>).key;\n    }\n}\n\n/**\n * Returns the composed primaryKey of a document by its data.\n */\nexport function getComposedPrimaryKeyOfDocumentData<RxDocType>(\n    jsonSchema: RxJsonSchema<RxDocType>,\n    documentData: Partial<RxDocType>\n): string {\n    if (typeof jsonSchema.primaryKey === 'string') {\n        return (documentData as any)[jsonSchema.primaryKey];\n    }\n\n    const compositePrimary: CompositePrimaryKey<RxDocType> = jsonSchema.primaryKey as any;\n    return compositePrimary.fields.map(field => {\n        const value = objectPath.get(documentData as any, field as string);\n        if (typeof value === 'undefined') {\n            throw newRxError('DOC18', { args: { field, documentData } });\n        }\n        return value;\n    }).join(compositePrimary.separator);\n}\n\n/**\n * array with previous version-numbers\n */\nexport function getPreviousVersions(schema: RxJsonSchema<any>): number[] {\n    const version = schema.version ? schema.version : 0;\n    let c = 0;\n    return new Array(version)\n        .fill(0)\n        .map(() => c++);\n}\n\n/**\n * returns the final-fields of the schema\n * @return field-names of the final-fields\n */\nexport function getFinalFields<T = any>(\n    jsonSchema: RxJsonSchema<T>\n): string[] {\n    const ret = Object.keys(jsonSchema.properties)\n        .filter(key => (jsonSchema as any).properties[key].final);\n\n    // primary is also final\n    const primaryPath = getPrimaryFieldOfPrimaryKey(jsonSchema.primaryKey);\n    ret.push(primaryPath as string);\n\n    // fields of composite primary are final\n    if (typeof jsonSchema.primaryKey !== 'string') {\n        (jsonSchema.primaryKey as CompositePrimaryKey<T>).fields\n            .forEach(field => ret.push(field as string));\n    }\n\n    return ret;\n}\n\n/**\n * orders the schemas attributes by alphabetical order\n * @return jsonSchema - ordered\n */\nexport function normalize<T>(jsonSchema: RxJsonSchema<T>): RxJsonSchema<T> {\n    const normalizedSchema: RxJsonSchema<T> = sortObject(clone(jsonSchema));\n    if (jsonSchema.indexes) {\n        normalizedSchema.indexes = Array.from(jsonSchema.indexes); // indexes should remain unsorted\n    }\n    // primaryKey.fields must NOT be sorted\n    if (\n        typeof normalizedSchema.primaryKey === 'object' &&\n        typeof jsonSchema.primaryKey === 'object'\n    ) {\n        normalizedSchema.primaryKey.fields = jsonSchema.primaryKey.fields;\n    }\n\n    return normalizedSchema;\n}\n\n/**\n * fills the schema-json with default-settings\n * @return cloned schemaObj\n */\nexport function fillWithDefaultSettings<T = any>(\n    schemaObj: RxJsonSchema<T>\n): RxJsonSchema<T> {\n    // TODO we should not have to deep clone here\n    // flat clone the nessescary parts instead.\n    schemaObj = clone(schemaObj);\n\n    // additionalProperties is always false\n    schemaObj.additionalProperties = false;\n\n    // fill with key-compression-state ()\n    if (!schemaObj.hasOwnProperty('keyCompression')) {\n        schemaObj.keyCompression = false;\n    }\n\n    // indexes must be array\n    schemaObj.indexes = schemaObj.indexes || [];\n\n    // required must be array\n    schemaObj.required = schemaObj.required || [];\n\n    // encrypted must be array\n    schemaObj.encrypted = schemaObj.encrypted || [];\n\n\n\n    /**\n     * TODO we should not need to added the internal fields to the schema.\n     * Better remove the before validation.\n     */\n    // add _rev\n    (schemaObj.properties as any)._rev = {\n        type: 'string',\n        minLength: 1\n    };\n\n    // add attachments\n    (schemaObj.properties as any)._attachments = {\n        type: 'object'\n    };\n\n    // add deleted flag\n    (schemaObj.properties as any)._deleted = {\n        type: 'boolean'\n    };\n\n\n    // version is 0 by default\n    schemaObj.version = schemaObj.version || 0;\n\n    return schemaObj;\n}\n\nexport function createRxSchema<T>(\n    jsonSchema: RxJsonSchema<T>,\n    runPreCreateHooks = true\n): RxSchema<T> {\n    if (runPreCreateHooks) {\n        runPluginHooks('preCreateRxSchema', jsonSchema);\n    }\n    const schema = new RxSchema(fillWithDefaultSettings(jsonSchema));\n    runPluginHooks('createRxSchema', schema);\n    return schema;\n}\n\nexport function isInstanceOf(obj: any): boolean {\n    return obj instanceof RxSchema;\n}\n"],"file":"rx-schema.js"}