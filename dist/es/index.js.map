{"version":3,"sources":["../../src/index.ts"],"names":["addRxPlugin","createRxDatabase","createRxDatabaseCore","RxDBDevModePlugin","RxDBValidatePlugin","RxDBKeyCompressionPlugin","RxDBMigrationPlugin","RxDBLeaderElectionPlugin","RxDBEncryptionPlugin","RxDBUpdatePlugin","RxDBReplicationCouchDBPlugin","RxDBJsonDumpPlugin","RxDBInMemoryPlugin","RxDBAttachmentsPlugin","RxDBLocalDocumentsPlugin","RxDBQueryBuilderPlugin","defaultPluginsAdded","addDefaultRxPlugins","params"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,SACIA,WADJ,EAEIC,gBAAgB,IAAIC,oBAFxB,QAGO,QAHP,C,CAKA;;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,wBAAT,QAAyC,2BAAzC;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,wBAAT,QAAyC,2BAAzC;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,4BAAT,QAA6C,+BAA7C;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AACA,SAASC,wBAAT,QAAyC,2BAAzC;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AAQA,IAAIC,mBAA4B,GAAG,KAAnC;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,mBAAT,GAA+B;AAClC,MAAID,mBAAJ,EAAyB;AACrB;AACH;;AACDA,EAAAA,mBAAmB,GAAG,IAAtB;AAEAhB,EAAAA,WAAW,CAACG,iBAAD,CAAX;AACAH,EAAAA,WAAW,CAACI,kBAAD,CAAX;AACAJ,EAAAA,WAAW,CAACK,wBAAD,CAAX;AACAL,EAAAA,WAAW,CAACM,mBAAD,CAAX;AACAN,EAAAA,WAAW,CAACO,wBAAD,CAAX;AACAP,EAAAA,WAAW,CAACQ,oBAAD,CAAX;AACAR,EAAAA,WAAW,CAACS,gBAAD,CAAX;AACAT,EAAAA,WAAW,CAACU,4BAAD,CAAX;AACAV,EAAAA,WAAW,CAACW,kBAAD,CAAX;AACAX,EAAAA,WAAW,CAACY,kBAAD,CAAX;AACAZ,EAAAA,WAAW,CAACa,qBAAD,CAAX;AACAb,EAAAA,WAAW,CAACc,wBAAD,CAAX;AACAd,EAAAA,WAAW,CAACe,sBAAD,CAAX;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASd,gBAAT,CAKHiB,MALG,EAQL;AACED,EAAAA,mBAAmB;AACnB,SAAOf,oBAAoB,CAAkDgB,MAAlD,CAA3B;AACH,C,CAED;;AACA,cAAc,QAAd;AAEA,cAAc,mBAAd","sourcesContent":["/**\n * this is the default rxdb-export\n * It has a batteries-included guarantee.\n * It basically just rxdb-core with some default plugins\n */\n\nimport {\n    addRxPlugin,\n    createRxDatabase as createRxDatabaseCore\n} from './core';\n\n// default plugins\nimport { RxDBDevModePlugin } from './plugins/dev-mode';\nimport { RxDBValidatePlugin } from './plugins/validate';\nimport { RxDBKeyCompressionPlugin } from './plugins/key-compression';\nimport { RxDBMigrationPlugin } from './plugins/migration';\nimport { RxDBLeaderElectionPlugin } from './plugins/leader-election';\nimport { RxDBEncryptionPlugin } from './plugins/encryption';\nimport { RxDBUpdatePlugin } from './plugins/update';\nimport { RxDBReplicationCouchDBPlugin } from './plugins/replication-couchdb';\nimport { RxDBJsonDumpPlugin } from './plugins/json-dump';\nimport { RxDBInMemoryPlugin } from './plugins/in-memory';\nimport { RxDBAttachmentsPlugin } from './plugins/attachments';\nimport { RxDBLocalDocumentsPlugin } from './plugins/local-documents';\nimport { RxDBQueryBuilderPlugin } from './plugins/query-builder';\nimport type {\n    RxDatabase,\n    RxDatabaseCreator,\n    RxCollection\n} from './types';\n\n\nlet defaultPluginsAdded: boolean = false;\n\n/**\n * Adds the default plugins\n * that are used on non-custom builds.\n */\nexport function addDefaultRxPlugins() {\n    if (defaultPluginsAdded) {\n        return;\n    }\n    defaultPluginsAdded = true;\n\n    addRxPlugin(RxDBDevModePlugin);\n    addRxPlugin(RxDBValidatePlugin);\n    addRxPlugin(RxDBKeyCompressionPlugin);\n    addRxPlugin(RxDBMigrationPlugin);\n    addRxPlugin(RxDBLeaderElectionPlugin);\n    addRxPlugin(RxDBEncryptionPlugin);\n    addRxPlugin(RxDBUpdatePlugin);\n    addRxPlugin(RxDBReplicationCouchDBPlugin);\n    addRxPlugin(RxDBJsonDumpPlugin);\n    addRxPlugin(RxDBInMemoryPlugin);\n    addRxPlugin(RxDBAttachmentsPlugin);\n    addRxPlugin(RxDBLocalDocumentsPlugin);\n    addRxPlugin(RxDBQueryBuilderPlugin);\n}\n\n/**\n * Because we have set sideEffects: false\n * in the package.json, we have to ensure that the default plugins\n * are added before the first database is created.\n * So we have to wrap the createRxDatabase function.\n * Always ensure that this function has the same typings as in the rx-database.ts\n * TODO create a type for that function and use it on both sides.\n */\nexport function createRxDatabase<\n    Collections = { [key: string]: RxCollection },\n    Internals = any,\n    InstanceCreationOptions = any\n>(\n    params: RxDatabaseCreator<Internals, InstanceCreationOptions>\n): Promise<\n    RxDatabase<Collections, Internals, InstanceCreationOptions>\n> {\n    addDefaultRxPlugins();\n    return createRxDatabaseCore<Collections, Internals, InstanceCreationOptions>(params);\n}\n\n// re-export things from core\nexport * from './core';\n\nexport * from './plugins/pouchdb';\n"],"file":"index.js"}