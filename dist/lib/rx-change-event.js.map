{"version":3,"file":"rx-change-event.js","names":["getDocumentDataOfRxChangeEvent","rxChangeEvent","documentData","previousDocumentData","rxChangeEventToEventReduceChangeEvent","operation","id","documentId","doc","previous","overwritable","deepFreezeWhenDevMode","flattenEvents","input","output","Array","isArray","forEach","inputItem","add","concat","events","ev","push","usedIds","Set","nonDuplicate","has","eventId"],"sources":["../../src/rx-change-event.ts"],"sourcesContent":["/**\n * RxChangeEvents a emitted when something in the database changes\n * they can be grabbed by the observables of database, collection and document\n */\n\nimport {\n    ChangeEvent as EventReduceChangeEvent,\n} from 'event-reduce-js';\nimport { overwritable } from './overwritable';\n\nimport type {\n    EventBulk,\n    RxChangeEvent,\n    RxDocumentData\n} from './types';\n\nexport function getDocumentDataOfRxChangeEvent<T>(\n    rxChangeEvent: RxChangeEvent<T>\n): RxDocumentData<T> {\n    if ((rxChangeEvent as any).documentData) {\n        return (rxChangeEvent as any).documentData;\n    } else {\n        return (rxChangeEvent as any).previousDocumentData;\n    }\n\n}\n\nexport function rxChangeEventToEventReduceChangeEvent<DocType>(\n    rxChangeEvent: RxChangeEvent<DocType>\n): EventReduceChangeEvent<DocType> {\n    switch (rxChangeEvent.operation) {\n        case 'INSERT':\n            return {\n                operation: rxChangeEvent.operation,\n                id: rxChangeEvent.documentId,\n                doc: rxChangeEvent.documentData as any,\n                previous: null\n            };\n        case 'UPDATE':\n            return {\n                operation: rxChangeEvent.operation,\n                id: rxChangeEvent.documentId,\n                doc: overwritable.deepFreezeWhenDevMode(rxChangeEvent.documentData) as any,\n                previous: rxChangeEvent.previousDocumentData ? rxChangeEvent.previousDocumentData as any : 'UNKNOWN'\n            };\n        case 'DELETE':\n            return {\n                operation: rxChangeEvent.operation,\n                id: rxChangeEvent.documentId,\n                doc: null,\n                previous: rxChangeEvent.previousDocumentData as DocType\n            };\n    }\n}\n\n/**\n * Flattens the given events into a single array of events.\n * Used mostly in tests.\n */\nexport function flattenEvents<EventType>(\n    input: EventBulk<EventType> | EventBulk<EventType>[] | EventType | EventType[]\n): EventType[] {\n    let output: EventType[] = [];\n\n    if (Array.isArray(input)) {\n        input.forEach(inputItem => {\n            const add = flattenEvents(inputItem);\n            output = output.concat(add);\n        });\n    } else {\n        if ((input as any).id && (input as any).events) {\n            // is bulk\n            (input as EventBulk<EventType>)\n                .events\n                .forEach(ev => output.push(ev));\n        } else {\n            output.push(input as any);\n        }\n    }\n\n    const usedIds = new Set<string>();\n    const nonDuplicate: EventType[] = [];\n    output.forEach(ev => {\n        if (!usedIds.has((ev as any).eventId)) {\n            usedIds.add((ev as any).eventId);\n            nonDuplicate.push(ev);\n        }\n    });\n\n    return nonDuplicate;\n}\n"],"mappings":";;;;;;;;;AAQA;;AARA;AACA;AACA;AACA;AAaO,SAASA,8BAAT,CACHC,aADG,EAEc;EACjB,IAAKA,aAAD,CAAuBC,YAA3B,EAAyC;IACrC,OAAQD,aAAD,CAAuBC,YAA9B;EACH,CAFD,MAEO;IACH,OAAQD,aAAD,CAAuBE,oBAA9B;EACH;AAEJ;;AAEM,SAASC,qCAAT,CACHH,aADG,EAE4B;EAC/B,QAAQA,aAAa,CAACI,SAAtB;IACI,KAAK,QAAL;MACI,OAAO;QACHA,SAAS,EAAEJ,aAAa,CAACI,SADtB;QAEHC,EAAE,EAAEL,aAAa,CAACM,UAFf;QAGHC,GAAG,EAAEP,aAAa,CAACC,YAHhB;QAIHO,QAAQ,EAAE;MAJP,CAAP;;IAMJ,KAAK,QAAL;MACI,OAAO;QACHJ,SAAS,EAAEJ,aAAa,CAACI,SADtB;QAEHC,EAAE,EAAEL,aAAa,CAACM,UAFf;QAGHC,GAAG,EAAEE,2BAAaC,qBAAb,CAAmCV,aAAa,CAACC,YAAjD,CAHF;QAIHO,QAAQ,EAAER,aAAa,CAACE,oBAAd,GAAqCF,aAAa,CAACE,oBAAnD,GAAiF;MAJxF,CAAP;;IAMJ,KAAK,QAAL;MACI,OAAO;QACHE,SAAS,EAAEJ,aAAa,CAACI,SADtB;QAEHC,EAAE,EAAEL,aAAa,CAACM,UAFf;QAGHC,GAAG,EAAE,IAHF;QAIHC,QAAQ,EAAER,aAAa,CAACE;MAJrB,CAAP;EAhBR;AAuBH;AAED;AACA;AACA;AACA;;;AACO,SAASS,aAAT,CACHC,KADG,EAEQ;EACX,IAAIC,MAAmB,GAAG,EAA1B;;EAEA,IAAIC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;IACtBA,KAAK,CAACI,OAAN,CAAc,UAAAC,SAAS,EAAI;MACvB,IAAMC,GAAG,GAAGP,aAAa,CAACM,SAAD,CAAzB;MACAJ,MAAM,GAAGA,MAAM,CAACM,MAAP,CAAcD,GAAd,CAAT;IACH,CAHD;EAIH,CALD,MAKO;IACH,IAAKN,KAAD,CAAeP,EAAf,IAAsBO,KAAD,CAAeQ,MAAxC,EAAgD;MAC5C;MACCR,KAAD,CACKQ,MADL,CAEKJ,OAFL,CAEa,UAAAK,EAAE;QAAA,OAAIR,MAAM,CAACS,IAAP,CAAYD,EAAZ,CAAJ;MAAA,CAFf;IAGH,CALD,MAKO;MACHR,MAAM,CAACS,IAAP,CAAYV,KAAZ;IACH;EACJ;;EAED,IAAMW,OAAO,GAAG,IAAIC,GAAJ,EAAhB;EACA,IAAMC,YAAyB,GAAG,EAAlC;EACAZ,MAAM,CAACG,OAAP,CAAe,UAAAK,EAAE,EAAI;IACjB,IAAI,CAACE,OAAO,CAACG,GAAR,CAAaL,EAAD,CAAYM,OAAxB,CAAL,EAAuC;MACnCJ,OAAO,CAACL,GAAR,CAAaG,EAAD,CAAYM,OAAxB;MACAF,YAAY,CAACH,IAAb,CAAkBD,EAAlB;IACH;EACJ,CALD;EAOA,OAAOI,YAAP;AACH"}