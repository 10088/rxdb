{"version":3,"file":"checkpoint.js","names":["pact","state","value","s","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","callback","e","_this","thenable","test","update","body","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","setCheckpoint","direction","checkpoint","previousCheckpointDoc","lastCheckpointDoc","events","canceled","getValue","JSON","stringify","data","newDoc","id","isCheckpoint","itemId","replicationIdentifier","checkpointKey","_deleted","_attachments","_meta","lwt","now","_rev","getDefaultRevision","getComposedPrimaryKeyOfDocumentData","RX_REPLICATION_META_INSTANCE_SCHEMA","createRevision","input","metaInstance","bulkWrite","previous","document","success","getFromObjectOrThrow","error","status","ensureNotFalsy","documentInDb","getLastCheckpointDoc","checkpointDocId","findDocumentsById","checkpointResult","checkpointDoc","undefined","getCheckpointKey","hash","fastUnsecureHash","identifier","forkInstance","storage","name","databaseName","collectionName","join"],"sources":["../../../src/replication/checkpoint.ts"],"sourcesContent":["import { getComposedPrimaryKeyOfDocumentData } from '../rx-schema-helper';\nimport type {\n    RxDocumentData,\n    RxStorageInstanceReplicationInput,\n    RxStorageInstanceReplicationState,\n    RxStorageReplicationDirection,\n    RxStorageReplicationMeta\n} from '../types';\nimport {\n    createRevision,\n    ensureNotFalsy,\n    fastUnsecureHash,\n    getDefaultRevision,\n    getFromObjectOrThrow,\n    now\n} from '../util';\nimport { RX_REPLICATION_META_INSTANCE_SCHEMA } from './meta-instance';\n\nexport async function getLastCheckpointDoc<RxDocType, CheckpointType>(\n    state: RxStorageInstanceReplicationState<RxDocType>,\n    direction: RxStorageReplicationDirection\n): Promise<undefined | CheckpointType> {\n    const checkpointDocId = getComposedPrimaryKeyOfDocumentData(\n        RX_REPLICATION_META_INSTANCE_SCHEMA,\n        {\n            isCheckpoint: '1',\n            itemId: direction,\n            replicationIdentifier: state.checkpointKey\n        }\n    );\n    const checkpointResult = await state.input.metaInstance.findDocumentsById(\n        [\n            checkpointDocId\n        ],\n        false\n    );\n\n    const checkpointDoc = checkpointResult[checkpointDocId];\n    state.lastCheckpointDoc[direction] = checkpointDoc;\n    if (checkpointDoc) {\n        return checkpointDoc.data;\n    } else {\n        return undefined;\n    }\n}\n\n\n/**\n * Sets the checkpoint,\n * automatically resolves conflicts that appear.\n */\nexport async function setCheckpoint<RxDocType, CheckpointType>(\n    state: RxStorageInstanceReplicationState<RxDocType>,\n    direction: RxStorageReplicationDirection,\n    checkpoint: CheckpointType\n) {\n    let previousCheckpointDoc = state.lastCheckpointDoc[direction];\n\n    if (\n        checkpoint &&\n        /**\n         * If the replication is already canceled,\n         * we do not write a checkpoint\n         * because that could mean we write a checkpoint\n         * for data that has been fetched from the master\n         * but not been written to the child.\n         */\n        !state.events.canceled.getValue() &&\n        /**\n         * Only write checkpoint if it is different from before\n         * to have less writes to the storage.\n         */\n        (\n            !previousCheckpointDoc ||\n            JSON.stringify(previousCheckpointDoc.data) !== JSON.stringify(checkpoint)\n        )\n    ) {\n        const newDoc: RxDocumentData<RxStorageReplicationMeta> = {\n            id: '',\n            isCheckpoint: '1',\n            itemId: direction,\n            replicationIdentifier: state.checkpointKey,\n            _deleted: false,\n            _attachments: {},\n            data: checkpoint,\n            _meta: {\n                lwt: now()\n            },\n            _rev: getDefaultRevision()\n        };\n        newDoc.id = getComposedPrimaryKeyOfDocumentData(\n            RX_REPLICATION_META_INSTANCE_SCHEMA,\n            newDoc\n        );\n        newDoc._rev = createRevision(newDoc, previousCheckpointDoc);\n\n        while (true) {\n            const result = await state.input.metaInstance.bulkWrite([{\n                previous: previousCheckpointDoc,\n                document: newDoc\n            }], 'replication-set-checkpoint');\n            if (result.success[newDoc.id]) {\n                state.lastCheckpointDoc[direction] = getFromObjectOrThrow(\n                    result.success,\n                    newDoc.id\n                );\n                return;\n            } else {\n                const error = getFromObjectOrThrow(\n                    result.error,\n                    newDoc.id\n                );\n                if (error.status !== 409) {\n                    throw error;\n                } else {\n                    previousCheckpointDoc = ensureNotFalsy(error.documentInDb);\n                    newDoc._rev = createRevision(newDoc, previousCheckpointDoc);\n                }\n            }\n        }\n    }\n}\n\n\nexport function getCheckpointKey<RxDocType>(\n    input: RxStorageInstanceReplicationInput<RxDocType>\n): string {\n    const hash = fastUnsecureHash([\n        input.identifier,\n        input.forkInstance.storage.name,\n        input.forkInstance.databaseName,\n        input.forkInstance.collectionName\n    ].join('||'));\n    return 'rx-storage-replication-' + hash;\n}\n"],"mappings":";;;;;;;;AAAA;;AAQA;;AAQA;;AAuBO,iBAAiBA,IAAjB,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;EAC3C,IAAI,CAACF,IAAI,CAACG,CAAV,EAAa;IACZ,IAAID,KAAK,iBAAT,EAA4B;MAC3B,IAAIA,KAAK,CAACC,CAAV,EAAa;QACZ,IAAIF,KAAK,GAAG,CAAZ,EAAe;UACdA,KAAK,GAAGC,KAAK,CAACC,CAAd;QACA;;QACDD,KAAK,GAAGA,KAAK,CAACE,CAAd;MACA,CALD,MAKO;QACNF,KAAK,CAACG,CAAN,GAAU,QAAQC,IAAR,CAAa,IAAb,EAAmBN,IAAnB,EAAyBC,KAAzB,CAAV;QACA;MACA;IACD;;IACD,IAAIC,KAAK,IAAIA,KAAK,CAACK,IAAnB,EAAyB;MACxBL,KAAK,CAACK,IAAN,CAAW,QAAQD,IAAR,CAAa,IAAb,EAAmBN,IAAnB,EAAyBC,KAAzB,CAAX,EAA4C,QAAQK,IAAR,CAAa,IAAb,EAAmBN,IAAnB,EAAyB,CAAzB,CAA5C;MACA;IACA;;IACDA,IAAI,CAACG,CAAL,GAASF,KAAT;IACAD,IAAI,CAACI,CAAL,GAASF,KAAT;IACA,IAAMM,QAAQ,GAAGR,IAAI,CAACK,CAAtB;;IACA,IAAIG,QAAJ,EAAc;MACbA,QAAQ,CAACR,IAAD,CAAR;IACA;EACD;AACD;;AA9DM,IAAM,QAAQ,aAAc,YAAW;EAC7C,iBAAiB,CAAE;;EACnB,MAAMS,SAAN,CAAgBF,IAAhB,GAAuB,UAASG,WAAT,EAAsBC,UAAtB,EAAkC;IACxD,IAAMC,MAAM,GAAG,WAAf;IACA,IAAMX,KAAK,GAAG,KAAKE,CAAnB;;IACA,IAAIF,KAAJ,EAAW;MACV,IAAMY,QAAQ,GAAGZ,KAAK,GAAG,CAAR,GAAYS,WAAZ,GAA0BC,UAA3C;;MACA,IAAIE,QAAJ,EAAc;QACb,IAAI;UACH,QAAQD,MAAR,EAAgB,CAAhB,EAAmBC,QAAQ,CAAC,KAAKT,CAAN,CAA3B;QACA,CAFD,CAEE,OAAOU,CAAP,EAAU;UACX,QAAQF,MAAR,EAAgB,CAAhB,EAAmBE,CAAnB;QACA;;QACD,OAAOF,MAAP;MACA,CAPD,MAOO;QACN,OAAO,IAAP;MACA;IACD;;IACD,KAAKP,CAAL,GAAS,UAASU,KAAT,EAAgB;MACxB,IAAI;QACH,IAAMb,KAAK,GAAGa,KAAK,CAACX,CAApB;;QACA,IAAIW,KAAK,CAACZ,CAAN,GAAU,CAAd,EAAiB;UAChB,QAAQS,MAAR,EAAgB,CAAhB,EAAmBF,WAAW,GAAGA,WAAW,CAACR,KAAD,CAAd,GAAwBA,KAAtD;QACA,CAFD,MAEO,IAAIS,UAAJ,EAAgB;UACtB,QAAQC,MAAR,EAAgB,CAAhB,EAAmBD,UAAU,CAACT,KAAD,CAA7B;QACA,CAFM,MAEA;UACN,QAAQU,MAAR,EAAgB,CAAhB,EAAmBV,KAAnB;QACA;MACD,CATD,CASE,OAAOY,CAAP,EAAU;QACX,QAAQF,MAAR,EAAgB,CAAhB,EAAmBE,CAAnB;MACA;IACD,CAbD;;IAcA,OAAOF,MAAP;EACA,CA/BD;;EAgCA;AACA,CAnCiC,EAA3B;;AAgEA,wBAAwBI,QAAxB,EAAkC;EACxC,OAAOA,QAAQ,iBAAR,IAA6BA,QAAQ,CAACb,CAAT,GAAa,CAAjD;AACA;;AA4LM,cAAcc,IAAd,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;EACxC,IAAIC,KAAJ;;EACA,SAAS;IACR,IAAIC,cAAc,GAAGJ,IAAI,EAAzB;;IACA,IAAI,eAAeI,cAAf,CAAJ,EAAoC;MACnCA,cAAc,GAAGA,cAAc,CAACjB,CAAhC;IACA;;IACD,IAAI,CAACiB,cAAL,EAAqB;MACpB,OAAOT,MAAP;IACA;;IACD,IAAIS,cAAc,CAACd,IAAnB,EAAyB;MACxBa,KAAK,GAAG,CAAR;MACA;IACA;;IACD,IAAIR,MAAM,GAAGO,IAAI,EAAjB;;IACA,IAAIP,MAAM,IAAIA,MAAM,CAACL,IAArB,EAA2B;MAC1B,IAAI,eAAeK,MAAf,CAAJ,EAA4B;QAC3BA,MAAM,GAAGA,MAAM,CAACT,CAAhB;MACA,CAFD,MAEO;QACNiB,KAAK,GAAG,CAAR;QACA;MACA;IACD;;IACD,IAAIF,MAAJ,EAAY;MACX,IAAII,WAAW,GAAGJ,MAAM,EAAxB;;MACA,IAAII,WAAW,IAAIA,WAAW,CAACf,IAA3B,IAAmC,CAAC,eAAee,WAAf,CAAxC,EAAqE;QACpEF,KAAK,GAAG,CAAR;QACA;MACA;IACD;EACD;;EACD,IAAIpB,IAAI,GAAG,WAAX;;EACA,IAAIuB,MAAM,GAAG,QAAQjB,IAAR,CAAa,IAAb,EAAmBN,IAAnB,EAAyB,CAAzB,CAAb;;EACA,CAACoB,KAAK,KAAK,CAAV,GAAcC,cAAc,CAACd,IAAf,CAAoBiB,gBAApB,CAAd,GAAsDJ,KAAK,KAAK,CAAV,GAAcR,MAAM,CAACL,IAAP,CAAYkB,gBAAZ,CAAd,GAA8CH,WAAW,CAACf,IAAZ,CAAiBmB,kBAAjB,CAArG,EAA2InB,IAA3I,CAAgJ,KAAK,CAArJ,EAAwJgB,MAAxJ;EACA,OAAOvB,IAAP;;EACA,SAASyB,gBAAT,CAA0BvB,KAA1B,EAAiC;IAChCU,MAAM,GAAGV,KAAT;;IACA,GAAG;MACF,IAAIgB,MAAJ,EAAY;QACXI,WAAW,GAAGJ,MAAM,EAApB;;QACA,IAAII,WAAW,IAAIA,WAAW,CAACf,IAA3B,IAAmC,CAAC,eAAee,WAAf,CAAxC,EAAqE;UACpEA,WAAW,CAACf,IAAZ,CAAiBmB,kBAAjB,EAAqCnB,IAArC,CAA0C,KAAK,CAA/C,EAAkDgB,MAAlD;UACA;QACA;MACD;;MACDF,cAAc,GAAGJ,IAAI,EAArB;;MACA,IAAI,CAACI,cAAD,IAAoB,eAAeA,cAAf,KAAkC,CAACA,cAAc,CAACjB,CAA1E,EAA8E;QAC7E,QAAQJ,IAAR,EAAc,CAAd,EAAiBY,MAAjB;;QACA;MACA;;MACD,IAAIS,cAAc,CAACd,IAAnB,EAAyB;QACxBc,cAAc,CAACd,IAAf,CAAoBiB,gBAApB,EAAsCjB,IAAtC,CAA2C,KAAK,CAAhD,EAAmDgB,MAAnD;QACA;MACA;;MACDX,MAAM,GAAGO,IAAI,EAAb;;MACA,IAAI,eAAeP,MAAf,CAAJ,EAA4B;QAC3BA,MAAM,GAAGA,MAAM,CAACR,CAAhB;MACA;IACD,CArBD,QAqBS,CAACQ,MAAD,IAAW,CAACA,MAAM,CAACL,IArB5B;;IAsBAK,MAAM,CAACL,IAAP,CAAYkB,gBAAZ,EAA8BlB,IAA9B,CAAmC,KAAK,CAAxC,EAA2CgB,MAA3C;EACA;;EACD,SAASC,gBAAT,CAA0BH,cAA1B,EAA0C;IACzC,IAAIA,cAAJ,EAAoB;MACnBT,MAAM,GAAGO,IAAI,EAAb;;MACA,IAAIP,MAAM,IAAIA,MAAM,CAACL,IAArB,EAA2B;QAC1BK,MAAM,CAACL,IAAP,CAAYkB,gBAAZ,EAA8BlB,IAA9B,CAAmC,KAAK,CAAxC,EAA2CgB,MAA3C;MACA,CAFD,MAEO;QACNE,gBAAgB,CAACb,MAAD,CAAhB;MACA;IACD,CAPD,MAOO;MACN,QAAQZ,IAAR,EAAc,CAAd,EAAiBY,MAAjB;IACA;EACD;;EACD,SAASc,kBAAT,GAA8B;IAC7B,IAAIL,cAAc,GAAGJ,IAAI,EAAzB,EAA6B;MAC5B,IAAII,cAAc,CAACd,IAAnB,EAAyB;QACxBc,cAAc,CAACd,IAAf,CAAoBiB,gBAApB,EAAsCjB,IAAtC,CAA2C,KAAK,CAAhD,EAAmDgB,MAAnD;MACA,CAFD,MAEO;QACNC,gBAAgB,CAACH,cAAD,CAAhB;MACA;IACD,CAND,MAMO;MACN,QAAQrB,IAAR,EAAc,CAAd,EAAiBY,MAAjB;IACA;EACD;AACD;;AApSD;AACA;AACA;AACA;IACsBe,a,YAAAA,a,CAClB1B,K,EACA2B,S,EACAC,U;MACF;IAAA;IACE,IAAIC,qBAAqB,GAAG7B,KAAK,CAAC8B,iBAAN,CAAwBH,SAAxB,CAA5B;IADF;MAAA,IAIMC,UAAU;MACV;AACR;AACA;AACA;AACA;AACA;AACA;MACQ,CAAC5B,KAAK,CAAC+B,MAAN,CAAaC,QAAb,CAAsBC,QAAtB,EARD;MASA;AACR;AACA;AACA;MAEY,CAACJ,qBAAD,IACAK,IAAI,CAACC,SAAL,CAAeN,qBAAqB,CAACO,IAArC,MAA+CF,IAAI,CAACC,SAAL,CAAeP,UAAf,CAfnD,CAJN;QAsBM,IAAMS,MAAgD,GAAG;UACrDC,EAAE,EAAE,EADiD;UAErDC,YAAY,EAAE,GAFuC;UAGrDC,MAAM,EAAEb,SAH6C;UAIrDc,qBAAqB,EAAEzC,KAAK,CAAC0C,aAJwB;UAKrDC,QAAQ,EAAE,KAL2C;UAMrDC,YAAY,EAAE,EANuC;UAOrDR,IAAI,EAAER,UAP+C;UAQrDiB,KAAK,EAAE;YACHC,GAAG,EAAE,IAAAC,SAAA;UADF,CAR8C;UAWrDC,IAAI,EAAE,IAAAC,wBAAA;QAX+C,CAAzD;QAaAZ,MAAM,CAACC,EAAP,GAAY,IAAAY,mDAAA,EACRC,iDADQ,EAERd,MAFQ,CAAZ;QAIAA,MAAM,CAACW,IAAP,GAAc,IAAAI,oBAAA,EAAef,MAAf,EAAuBR,qBAAvB,CAAd;QAvCN;UAAA;QAAA,uBAyCmB;UAAA,uBACY7B,KAAK,CAACqD,KAAN,CAAYC,YAAZ,CAAyBC,SAAzB,CAAmC,CAAC;YACrDC,QAAQ,EAAE3B,qBAD2C;YAErD4B,QAAQ,EAAEpB;UAF2C,CAAD,CAAnC,EAGjB,4BAHiB,CADZ,iBACH1B,MADG;YAAA,IAKLA,MAAM,CAAC+C,OAAP,CAAerB,MAAM,CAACC,EAAtB,CALK;cAMLtC,KAAK,CAAC8B,iBAAN,CAAwBH,SAAxB,IAAqC,IAAAgC,0BAAA,EACjChD,MAAM,CAAC+C,OAD0B,EAEjCrB,MAAM,CAACC,EAF0B,CAArC;cANK;YAAA;cAYL,IAAMsB,KAAK,GAAG,IAAAD,0BAAA,EACVhD,MAAM,CAACiD,KADG,EAEVvB,MAAM,CAACC,EAFG,CAAd;;cAZK,IAgBDsB,KAAK,CAACC,MAAN,KAAiB,GAhBhB;gBAiBD,MAAMD,KAAN;cAjBC;gBAmBD/B,qBAAqB,GAAG,IAAAiC,oBAAA,EAAeF,KAAK,CAACG,YAArB,CAAxB;gBACA1B,MAAM,CAACW,IAAP,GAAc,IAAAI,oBAAA,EAAef,MAAf,EAAuBR,qBAAvB,CAAd;cApBC;YAAA;UAAA;QAuBZ,CAhEP;MAAA;IAAA;EAkED,C;;;;;;;IAvGqBmC,oB,YAAAA,oB,CAClBhE,K,EACA2B,S;MACmC;IACnC,IAAMsC,eAAe,GAAG,IAAAf,mDAAA,EACpBC,iDADoB,EAEpB;MACIZ,YAAY,EAAE,GADlB;MAEIC,MAAM,EAAEb,SAFZ;MAGIc,qBAAqB,EAAEzC,KAAK,CAAC0C;IAHjC,CAFoB,CAAxB;IADmC,uBASJ1C,KAAK,CAACqD,KAAN,CAAYC,YAAZ,CAAyBY,iBAAzB,CAC3B,CACID,eADJ,CAD2B,EAI3B,KAJ2B,CATI,iBAS7BE,gBAT6B;MAgBnC,IAAMC,aAAa,GAAGD,gBAAgB,CAACF,eAAD,CAAtC;MACAjE,KAAK,CAAC8B,iBAAN,CAAwBH,SAAxB,IAAqCyC,aAArC;;MAjBmC,IAkB/BA,aAlB+B;QAmB/B,OAAOA,aAAa,CAAChC,IAArB;MAnB+B;QAqB/B,OAAOiC,SAAP;MArB+B;IAAA;EAuBtC,C;;;;;;;AAgFM,SAASC,gBAAT,CACHjB,KADG,EAEG;EACN,IAAMkB,IAAI,GAAG,IAAAC,sBAAA,EAAiB,CAC1BnB,KAAK,CAACoB,UADoB,EAE1BpB,KAAK,CAACqB,YAAN,CAAmBC,OAAnB,CAA2BC,IAFD,EAG1BvB,KAAK,CAACqB,YAAN,CAAmBG,YAHO,EAI1BxB,KAAK,CAACqB,YAAN,CAAmBI,cAJO,EAK5BC,IAL4B,CAKvB,IALuB,CAAjB,CAAb;EAMA,OAAO,4BAA4BR,IAAnC;AACH"}