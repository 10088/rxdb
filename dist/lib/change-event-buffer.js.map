{"version":3,"file":"change-event-buffer.js","names":["ChangeEventBuffer","collection","subs","limit","counter","eventCounterMap","WeakMap","buffer","push","$","pipe","filter","cE","isLocal","subscribe","_handleChangeEvent","changeEvent","set","length","shift","getArrayIndexByPointer","pointer","oldestEvent","oldestCounter","get","rest","getFrom","ret","currentIndex","nextEvent","runFrom","fn","Error","forEach","reduceByLastOfDoc","changeEvents","slice","docEventMap","documentId","Object","values","destroy","sub","unsubscribe","createChangeEventBuffer"],"sources":["../../src/change-event-buffer.ts"],"sourcesContent":["/**\n * a buffer-cache which holds the last X changeEvents of the collection\n */\nimport {\n    Subscription\n} from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport type {\n    RxChangeEvent,\n    RxCollection\n} from './types';\n\nexport class ChangeEventBuffer {\n    private subs: Subscription[] = [];\n    public limit: number = 100;\n    public counter: number = 0;\n    private eventCounterMap: WeakMap<\n        RxChangeEvent<any>, number\n    > = new WeakMap();\n\n    /**\n     * array with changeEvents\n     * starts with oldest known event, ends with newest\n     */\n    public buffer: RxChangeEvent<any>[] = [];\n\n    constructor(\n        public collection: RxCollection\n    ) {\n        this.subs.push(\n            this.collection.$.pipe(\n                filter(cE => !cE.isLocal)\n            ).subscribe((cE: any) => this._handleChangeEvent(cE))\n        );\n    }\n\n    _handleChangeEvent(changeEvent: RxChangeEvent<any>) {\n        this.counter++;\n        this.buffer.push(changeEvent);\n        this.eventCounterMap.set(changeEvent, this.counter);\n        while (this.buffer.length > this.limit) {\n            this.buffer.shift();\n        }\n    }\n\n    /**\n     * gets the array-index for the given pointer\n     * @return arrayIndex which can be used to itterate from there. If null, pointer is out of lower bound\n     */\n    getArrayIndexByPointer(pointer: number): number | null {\n        const oldestEvent = this.buffer[0];\n        const oldestCounter = this.eventCounterMap.get(\n            oldestEvent\n        ) as number;\n\n        if (pointer < oldestCounter)\n            return null; // out of bounds\n\n        const rest = pointer - oldestCounter;\n        return rest;\n    }\n\n    /**\n     * get all changeEvents which came in later than the pointer-event\n     * @return array with change-events. Iif null, pointer out of bounds\n     */\n    getFrom(pointer: number): RxChangeEvent<any>[] | null {\n        const ret = [];\n        let currentIndex = this.getArrayIndexByPointer(pointer);\n        if (currentIndex === null) // out of bounds\n            return null;\n\n        while (true) {\n            const nextEvent = this.buffer[currentIndex];\n            currentIndex++;\n            if (!nextEvent) {\n                return ret;\n            } else {\n                ret.push(nextEvent);\n            }\n        }\n    }\n\n    runFrom(pointer: number, fn: Function) {\n        const ret = this.getFrom(pointer);\n        if (ret === null) {\n            throw new Error('out of bounds');\n        } else {\n            ret.forEach(cE => fn(cE));\n        }\n    }\n\n    /**\n     * no matter how many operations are done on one document,\n     * only the last operation has to be checked to calculate the new state\n     * this function reduces the events to the last ChangeEvent of each doc\n     */\n    reduceByLastOfDoc(changeEvents: RxChangeEvent<any>[]): RxChangeEvent<any>[] {\n        return changeEvents.slice(0);\n        // TODO the old implementation was wrong\n        // because it did not correctly reassigned the previousData of the changeevents\n        // this should be added to the event-reduce library and not be done in RxDB\n        const docEventMap: any = {};\n        changeEvents.forEach(changeEvent => {\n            docEventMap[changeEvent.documentId] = changeEvent;\n        });\n        return Object.values(docEventMap);\n    }\n\n    destroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n}\n\nexport function createChangeEventBuffer(\n    collection: RxCollection<any, any>\n) {\n    return new ChangeEventBuffer(collection);\n}\n"],"mappings":"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"}