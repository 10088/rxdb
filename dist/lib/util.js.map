{"version":3,"file":"util.js","names":["pluginMissing","pluginKey","keyParts","split","pluginName","forEach","part","ucfirst","Error","fastUnsecureHash","obj","JSON","stringify","hashValue","i","chr","len","length","charCodeAt","RXDB_HASH_SALT","hash","msg","Md5","_lastNow","now","ret","Date","getTime","nextTick","Promise","res","setTimeout","promiseWait","ms","toPromise","maybePromise","then","resolve","PROMISE_RESOLVE_TRUE","PROMISE_RESOLVE_FALSE","PROMISE_RESOLVE_NULL","PROMISE_RESOLVE_VOID","requestIdlePromise","timeout","window","promiseSeries","tasks","initial","reduce","current","next","requestIdleCallbackIfAvailable","fun","str","f","charAt","toUpperCase","substr","trimDots","slice","runXTimes","xTimes","fn","Array","fill","_v","idx","ensureNotFalsy","ensureInteger","Number","isInteger","sortObject","noArraySort","isArray","sort","a","b","localeCompare","map","RegExp","out","Object","keys","key","stringifyFilter","value","toString","randomCouchString","text","possible","Math","floor","random","RANDOM_STRING","lastOfArray","ar","shuffleArray","arr","batchArray","array","batchSize","batch","splice","push","removeOneFromArrayIfMatches","condition","done","adapterObject","adapter","adapterObj","db","undefined","recursiveDeepCopy","o","deepClone","clone","flatClone","assign","firstPropertyNameOfObject","firstPropertyValueOfObject","isElectronRenderer","isElectron","flattenObject","ob","toReturn","hasOwnProperty","flatObject","x","parseRevision","revision","height","parseInt","getHeightOfRevision","createRevision","docData","previousDocData","previousRevision","_rev","previousRevisionHeigth","newRevisionHeight","docWithoutRev","_rev_tree","_meta","diggestString","revisionHash","overwriteGetterForCaching","getterName","defineProperty","get","isFolderPath","name","includes","getFromMapOrThrow","val","getFromObjectOrThrow","isMaybeReadonlyArray","USE_NODE_BLOB_BUFFER_METHODS","FileReader","blobBufferUtil","createBlobBuffer","data","type","blobBuffer","Buffer","from","Blob","createBlobBufferFromBase64","base64String","fetch","base64Response","blob","isBlobBuffer","isBuffer","reader","addEventListener","e","target","result","blobBufferType","prototype","call","readAsText","toBase64String","rej","onerror","onload","fullResult","shift","join","readAsDataURL","size","byteLength","RXJS_SHARE_REPLAY_DEFAULTS","bufferSize","refCount","RX_META_LWT_MINIMUM","getDefaultRxDocumentMeta","lwt","getDefaultRevision","getSortDocumentsByLastWriteTimeComparator","primaryPath","sortDocumentsByLastWriteTime","docs","objectPathMonad","objectPath","splitted","currentVal","t","subPath"],"sources":["../../src/util.ts"],"sourcesContent":["import type {\n    BlobBuffer,\n    DeepReadonlyObject,\n    MaybeReadonly,\n    RxDocumentData,\n    RxDocumentMeta\n} from './types';\nimport {\n    default as deepClone\n} from 'clone';\n\n/**\n * Returns an error that indicates that a plugin is missing\n * We do not throw a RxError because this should not be handled\n * programmatically but by using the correct import\n */\nexport function pluginMissing(\n    pluginKey: string\n): Error {\n    const keyParts = pluginKey.split('-');\n    let pluginName = 'RxDB';\n    keyParts.forEach(part => {\n        pluginName += ucfirst(part);\n    });\n    pluginName += 'Plugin';\n    return new Error(\n        `You are using a function which must be overwritten by a plugin.\n        You should either prevent the usage of this function or add the plugin via:\n            import { ${pluginName} } from 'rxdb/plugins/${pluginKey}';\n            addRxPlugin(${pluginName});\n        `\n    );\n}\n\n/**\n * this is a very fast hashing but its unsecure\n * @link http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n * @return a number as hash-result\n */\nexport function fastUnsecureHash(obj: any): number {\n    if (typeof obj !== 'string') obj = JSON.stringify(obj);\n    let hashValue = 0,\n        i, chr, len;\n    if (obj.length === 0) return hashValue;\n    for (i = 0, len = obj.length; i < len; i++) {\n        chr = obj.charCodeAt(i);\n        // tslint:disable-next-line\n        hashValue = ((hashValue << 5) - hashValue) + chr;\n        // tslint:disable-next-line\n        hashValue |= 0; // Convert to 32bit integer\n    }\n    if (hashValue < 0) hashValue = hashValue * -1;\n    return hashValue;\n}\n\n/**\n * Does a RxDB-specific hashing of the given data.\n * We use a static salt so using a rainbow-table\n * or google-ing the hash will not work.\n *\n * spark-md5 is used here\n * because pouchdb uses the same\n * and build-size could be reduced by 9kb\n * \n * TODO instead of using md5 we should use the hash method from the given RxStorage\n * this change would require some rewrites because the RxStorage hash is async.\n * So maybe it is even better to use non-cryptographic hashing like we do at fastUnsecureHash()\n * which would even be faster.\n */\nimport Md5 from 'spark-md5';\nexport const RXDB_HASH_SALT = 'rxdb-specific-hash-salt';\nexport function hash(msg: string | any): string {\n    if (typeof msg !== 'string') {\n        msg = JSON.stringify(msg);\n    }\n    return Md5.hash(RXDB_HASH_SALT + msg);\n}\n\n/**\n * Returns the current unix time in milliseconds\n * Because the accuracy of getTime() in javascript is bad,\n * and we cannot rely on performance.now() on all plattforms,\n * this method implements a way to never return the same value twice.\n * This ensures that when now() is called often, we do not loose the information\n * about which call came first and which came after.\n * Caution: Do not call this too often in a short timespan\n * because it might return 'the future'.\n */\nlet _lastNow: number = 0;\n/**\n * Returns the current time in milliseconds,\n * also ensures to not return the same value twice.\n */\nexport function now(): number {\n    let ret = new Date().getTime();\n    if (ret <= _lastNow) {\n        ret = _lastNow + 1;\n    }\n    _lastNow = ret;\n    return ret;\n}\n\n/**\n * returns a promise that resolves on the next tick\n */\nexport function nextTick(): Promise<void> {\n    return new Promise(res => setTimeout(res, 0));\n}\n\nexport function promiseWait(ms: number = 0): Promise<void> {\n    return new Promise(res => setTimeout(res, ms));\n}\n\nexport function toPromise<T>(maybePromise: Promise<T> | T): Promise<T> {\n    if (maybePromise && typeof (maybePromise as any).then === 'function') {\n        // is promise\n        return maybePromise as any;\n    } else {\n        return Promise.resolve(maybePromise);\n    }\n}\n\nexport const PROMISE_RESOLVE_TRUE: Promise<true> = Promise.resolve(true);\nexport const PROMISE_RESOLVE_FALSE: Promise<false> = Promise.resolve(false);\nexport const PROMISE_RESOLVE_NULL: Promise<null> = Promise.resolve(null);\nexport const PROMISE_RESOLVE_VOID: Promise<void> = Promise.resolve();\n\nexport function requestIdlePromise(timeout: number | null = null) {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) {\n        return new Promise(\n            res => (window as any)['requestIdleCallback'](res, {\n                timeout\n            })\n        );\n    } else {\n        return promiseWait(0);\n    }\n}\n\n\n/**\n * like Promise.all() but runs in series instead of parallel\n * @link https://github.com/egoist/promise.series/blob/master/index.js\n * @param tasks array with functions that return a promise\n */\nexport function promiseSeries(\n    tasks: Function[],\n    initial?: any\n): Promise<any[]> {\n    return tasks\n        .reduce(\n            (current, next) => (current as any).then(next),\n            Promise.resolve(initial)\n        );\n}\n\n/**\n * run the callback if requestIdleCallback available\n * do nothing if not\n * @link https://developer.mozilla.org/de/docs/Web/API/Window/requestIdleCallback\n */\nexport function requestIdleCallbackIfAvailable(fun: Function): void {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) (window as any)['requestIdleCallback'](fun);\n}\n\n/**\n * uppercase first char\n */\nexport function ucfirst(str: string): string {\n    str += '';\n    const f = str.charAt(0)\n        .toUpperCase();\n    return f + str.substr(1);\n}\n\n/**\n * removes trailing and ending dots from the string\n */\nexport function trimDots(str: string): string {\n    // start\n    while (str.charAt(0) === '.')\n        str = str.substr(1);\n\n    // end\n    while (str.slice(-1) === '.')\n        str = str.slice(0, -1);\n\n    return str;\n}\n\n\nexport function runXTimes(xTimes: number, fn: (idx: number) => void) {\n    new Array(xTimes).fill(0).forEach((_v, idx) => fn(idx));\n}\n\nexport function ensureNotFalsy<T>(obj: T | false | undefined | null): T {\n    if (!obj) {\n        throw new Error('ensureNotFalsy() is falsy');\n    }\n    return obj;\n}\n\nexport function ensureInteger(obj: unknown): number {\n    if (!Number.isInteger(obj)) {\n        throw new Error('ensureInteger() is falsy');\n    }\n    return obj as number;\n}\n\n/**\n * deep-sort an object so its attributes are in lexical order.\n * Also sorts the arrays inside of the object if no-array-sort not set\n */\nexport function sortObject(obj: any, noArraySort = false): any {\n    if (!obj) return obj; // do not sort null, false or undefined\n\n    // array\n    if (!noArraySort && Array.isArray(obj)) {\n        return obj\n            .sort((a, b) => {\n                if (typeof a === 'string' && typeof b === 'string')\n                    return a.localeCompare(b);\n\n                if (typeof a === 'object') return 1;\n                else return -1;\n            })\n            .map(i => sortObject(i, noArraySort));\n    }\n\n    // object\n    // array is also of type object\n    if (typeof obj === 'object' && !Array.isArray(obj)) {\n        if (obj instanceof RegExp)\n            return obj;\n\n        const out: any = {};\n        Object.keys(obj)\n            .sort((a, b) => a.localeCompare(b))\n            .forEach(key => {\n                out[key] = sortObject(obj[key], noArraySort);\n            });\n        return out;\n    }\n\n    // everything else\n    return obj;\n}\n\n\n/**\n * used to JSON.stringify() objects that contain a regex\n * @link https://stackoverflow.com/a/33416684 thank you Fabian Jakobs!\n */\nexport function stringifyFilter(key: string, value: any) {\n    if (value instanceof RegExp) {\n        return value.toString();\n    }\n    return value;\n}\n\n/**\n * get a random string which can be used with couchdb\n * @link http://stackoverflow.com/a/1349426/3443137\n */\nexport function randomCouchString(length: number = 10): string {\n    let text = '';\n    const possible = 'abcdefghijklmnopqrstuvwxyz';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n}\n\n/**\n * A random string that is never inside of any storage\n */\nexport const RANDOM_STRING = 'Fz7SZXPmYJujkzjY1rpXWvlWBqoGAfAX';\n\n\nexport function lastOfArray<T>(ar: T[]): T {\n    return ar[ar.length - 1];\n}\n\n/**\n * shuffle the given array\n */\nexport function shuffleArray<T>(arr: T[]): T[] {\n    return arr.sort(() => (Math.random() - 0.5));\n}\n\n/**\n * Split array with items into smaller arrays with items\n * @link https://stackoverflow.com/a/7273794/3443137\n */\nexport function batchArray<T>(array: T[], batchSize: number): T[][] {\n    array = array.slice(0);\n    const ret: T[][] = [];\n    while (array.length) {\n        const batch = array.splice(0, batchSize);\n        ret.push(batch);\n    }\n    return ret;\n}\n\n\n/**\n * @link https://stackoverflow.com/a/15996017\n */\nexport function removeOneFromArrayIfMatches<T>(ar: T[], condition: (x: T) => boolean): T[] {\n    ar = ar.slice();\n    let i = ar.length;\n    let done = false;\n    while (i-- && !done) {\n        if (condition(ar[i])) {\n            done = true;\n            ar.splice(i, 1);\n        }\n    }\n    return ar;\n}\n\n\n/**\n * transforms the given adapter into a pouch-compatible object\n */\nexport function adapterObject(adapter: any): any {\n    let adapterObj: any = {\n        db: adapter\n    };\n    if (typeof adapter === 'string') {\n        adapterObj = {\n            adapter,\n            db: undefined,\n        };\n    }\n    return adapterObj;\n}\n\n\nfunction recursiveDeepCopy<T>(o: T | DeepReadonlyObject<T>): T {\n    if (!o) return o;\n    return deepClone(o, false) as any;\n}\nexport const clone = recursiveDeepCopy;\n\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone<T>(obj: T | DeepReadonlyObject<T>): T {\n    return Object.assign({}, obj) as any;\n}\n\n/**\n * @link https://stackoverflow.com/a/11509718/3443137\n */\nexport function firstPropertyNameOfObject(obj: any): string {\n    return Object.keys(obj)[0];\n}\nexport function firstPropertyValueOfObject<T>(obj: { [k: string]: T }): T {\n    const key = Object.keys(obj)[0];\n    return obj[key];\n}\n\n\nimport isElectron from 'is-electron';\nexport const isElectronRenderer = isElectron();\n\n\n/**\n * returns a flattened object\n * @link https://gist.github.com/penguinboy/762197\n */\nexport function flattenObject(ob: any) {\n    const toReturn: any = {};\n\n    for (const i in ob) {\n        if (!ob.hasOwnProperty(i)) continue;\n\n        if ((typeof ob[i]) === 'object') {\n            const flatObject = flattenObject(ob[i]);\n            for (const x in flatObject) {\n                if (!flatObject.hasOwnProperty(x)) continue;\n\n                toReturn[i + '.' + x] = flatObject[x];\n            }\n        } else {\n            toReturn[i] = ob[i];\n        }\n    }\n    return toReturn;\n}\n\n\nexport function parseRevision(revision: string): { height: number; hash: string } {\n    const split = revision.split('-');\n    return {\n        height: parseInt(split[0], 10),\n        hash: split[1]\n    }\n}\n\nexport function getHeightOfRevision(revision: string): number {\n    return parseRevision(revision).height;\n}\n\n/**\n * Creates the next write revision for a given document.\n */\nexport function createRevision<RxDocType>(\n    docData: RxDocumentData<RxDocType> & {\n        /**\n         * Passing a revision is optional here,\n         * because it is anyway not needed to calculate\n         * the new revision.\n         */\n        _rev?: string;\n    },\n    previousDocData?: RxDocumentData<RxDocType>\n): string {\n\n    const previousRevision = previousDocData ? previousDocData._rev : null;\n    const previousRevisionHeigth = previousRevision ? parseRevision(previousRevision).height : 0;\n    const newRevisionHeight = previousRevisionHeigth + 1;\n\n\n    const docWithoutRev: any = Object.assign({}, docData, {\n        _rev: undefined,\n        _rev_tree: undefined,\n        /**\n         * All _meta properties MUST NOT be part of the\n         * revision hash.\n         * Plugins might temporarily store data in the _meta\n         * field and strip it away when the document is replicated\n         * or written to another storage.\n         */\n        _meta: undefined\n    });\n\n    /**\n     * The revision height must be part of the hash\n     * as the last parameter of the document data.\n     * This is required to ensure we never ever create\n     * two different document states that have the same revision\n     * hash. Even writing the exact same document data\n     * must have to result in a different hash so that\n     * the replication can known if the state just looks equal\n     * or if it is really exactly the equal state in data and time.\n     */\n    delete docWithoutRev._rev;\n    docWithoutRev._rev = previousDocData ? newRevisionHeight : 1;\n\n    const diggestString = JSON.stringify(docWithoutRev);\n    const revisionHash = Md5.hash(diggestString);\n\n\n    return newRevisionHeight + '-' + revisionHash;\n}\n\n/**\n * overwrites the getter with the actual value\n * Mostly used for caching stuff on the first run\n */\nexport function overwriteGetterForCaching<ValueType = any>(\n    obj: any,\n    getterName: string,\n    value: ValueType\n): ValueType {\n    Object.defineProperty(obj, getterName, {\n        get: function () { return value; }\n    });\n    return value;\n}\n\n/**\n * returns true if the given name is likely a folder path\n */\nexport function isFolderPath(name: string) {\n    // do not check, if foldername is given\n    if (\n        name.includes('/') || // unix\n        name.includes('\\\\') // windows\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function getFromMapOrThrow<K, V>(map: Map<K, V> | WeakMap<any, V>, key: K): V {\n    const val = map.get(key);\n    if (!val) {\n        throw new Error('missing value from map ' + key);\n    }\n    return val;\n}\n\nexport function getFromObjectOrThrow<V>(\n    obj: { [k: string]: V },\n    key: string\n): V {\n    const val = obj[key];\n    if (!val) {\n        throw new Error('missing value from object ' + key);\n    }\n    return val;\n}\n\n/**\n * returns true if the supplied argument is either an Array<T> or a Readonly<Array<T>>\n */\nexport function isMaybeReadonlyArray(x: any): x is MaybeReadonly<any[]> {\n    // While this looks strange, it's a workaround for an issue in TypeScript:\n    // https://github.com/microsoft/TypeScript/issues/17002\n    //\n    // The problem is that `Array.isArray` as a type guard returns `false` for a readonly array,\n    // but at runtime the object is an array and the runtime call to `Array.isArray` would return `true`.\n    // The type predicate here allows for both `Array<T>` and `Readonly<Array<T>>` to pass a type check while\n    // still performing runtime type inspection.\n    return Array.isArray(x);\n}\n\n\nconst USE_NODE_BLOB_BUFFER_METHODS = typeof FileReader === 'undefined';\nexport const blobBufferUtil = {\n    /**\n     * depending if we are on node or browser,\n     * we have to use Buffer(node) or Blob(browser)\n     */\n    createBlobBuffer(\n        data: string,\n        type: string\n    ): BlobBuffer {\n\n        let blobBuffer: any;\n        if (isElectronRenderer) {\n            // if we are inside of electron-renderer, always use the node-buffer\n            return Buffer.from(data, {\n                type\n            } as any);\n        }\n\n        if (USE_NODE_BLOB_BUFFER_METHODS) {\n            // for node\n            blobBuffer = Buffer.from(data, {\n                type\n            } as any);\n        } else {\n            // for browsers\n            blobBuffer = new Blob([data], {\n                type\n            } as any);\n        }\n\n        return blobBuffer;\n    },\n    /**\n     * depending if we are on node or browser,\n     * we have to use Buffer(node) or Blob(browser)\n     */\n    async createBlobBufferFromBase64(\n        base64String: string,\n        type: string\n    ): Promise<BlobBuffer> {\n        let blobBuffer: any;\n        if (isElectronRenderer) {\n            // if we are inside of electron-renderer, always use the node-buffer\n            return Buffer.from(\n                base64String,\n                'base64'\n            );\n        }\n\n\n        if (USE_NODE_BLOB_BUFFER_METHODS) {\n            // for node\n            blobBuffer = Buffer.from(\n                base64String,\n                'base64'\n            );\n            return blobBuffer;\n        } else {\n            /**\n             * For browsers.\n             * @link https://ionicframework.com/blog/converting-a-base64-string-to-a-blob-in-javascript/\n             */\n            const base64Response = await fetch(`data:${type};base64,${base64String}`);\n            const blob = await base64Response.blob();\n            return blob;\n        }\n    },\n    isBlobBuffer(data: any): boolean {\n        if ((typeof Buffer !== 'undefined' && Buffer.isBuffer(data)) || data instanceof Blob) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n    toString(blobBuffer: BlobBuffer | string): Promise<string> {\n        if (typeof blobBuffer === 'string') {\n            return Promise.resolve(blobBuffer);\n        }\n\n        if (USE_NODE_BLOB_BUFFER_METHODS) {\n            // node\n            return nextTick()\n                .then(() => blobBuffer.toString());\n        }\n        return new Promise(res => {\n            // browser\n            const reader = new FileReader();\n            reader.addEventListener('loadend', e => {\n                const text = (e.target as any).result;\n                res(text);\n            });\n\n            const blobBufferType = Object.prototype.toString.call(blobBuffer);\n\n            /**\n             * in the electron-renderer we have a typed array insteaf of a blob\n             * so we have to transform it.\n             * @link https://github.com/pubkey/rxdb/issues/1371\n             */\n            if (blobBufferType === '[object Uint8Array]') {\n                blobBuffer = new Blob([blobBuffer]);\n            }\n\n            reader.readAsText(blobBuffer as any);\n        });\n    },\n    toBase64String(blobBuffer: BlobBuffer | string): Promise<string> {\n        if (typeof blobBuffer === 'string') {\n            return Promise.resolve(blobBuffer);\n        }\n        if (typeof Buffer !== 'undefined' && blobBuffer instanceof Buffer) {\n            // node\n            return nextTick()\n                /**\n                 * We use btoa() instead of blobBuffer.toString('base64')\n                 * to ensure that we have the same behavior in nodejs and the browser.\n                 */\n                .then(() => blobBuffer.toString('base64'));\n        }\n        return new Promise((res, rej) => {\n            /**\n             * Browser\n             * @link https://ionicframework.com/blog/converting-a-base64-string-to-a-blob-in-javascript/\n             */\n            const reader = new FileReader;\n            reader.onerror = rej;\n            reader.onload = () => {\n                // looks like 'data:plain/text;base64,YWFh...'\n                const fullResult = reader.result as any;\n                const split = fullResult.split(',');\n                split.shift();\n                res(split.join(','));\n            };\n\n            const blobBufferType = Object.prototype.toString.call(blobBuffer);\n\n            /**\n             * in the electron-renderer we have a typed array insteaf of a blob\n             * so we have to transform it.\n             * @link https://github.com/pubkey/rxdb/issues/1371\n             */\n            if (blobBufferType === '[object Uint8Array]') {\n                blobBuffer = new Blob([blobBuffer]);\n            }\n\n            reader.readAsDataURL(blobBuffer as any);\n        });\n    },\n    size(blobBuffer: BlobBuffer): number {\n        if (typeof Buffer !== 'undefined' && blobBuffer instanceof Buffer) {\n            // node\n            return Buffer.byteLength(blobBuffer);\n        } else {\n            // browser\n            return (blobBuffer as Blob).size;\n        }\n    }\n};\n\n/**\n * Using shareReplay() without settings will not unsubscribe\n * if there are no more subscribers.\n * So we use these defaults.\n * @link https://cartant.medium.com/rxjs-whats-changed-with-sharereplay-65c098843e95\n */\nexport const RXJS_SHARE_REPLAY_DEFAULTS = {\n    bufferSize: 1,\n    refCount: true\n}\n\n/**\n * We use 1 as minimum so that the value is never falsy.\n * This const is used in several places because querying\n * with a value lower then the minimum could give false results.\n */\nexport const RX_META_LWT_MINIMUM = 1;\n\nexport function getDefaultRxDocumentMeta(): RxDocumentMeta {\n    return {\n        /**\n         * Set this to 1 to not waste performance\n         * while calling new Date()..\n         * The storage wrappers will anyway update\n         * the lastWrite time while calling transformDocumentDataFromRxDBToRxStorage()\n         */\n        lwt: RX_META_LWT_MINIMUM\n    }\n}\n\n/**\n * Returns a revision that is not valid.\n * Use this to have correct typings\n * while the storage wrapper anyway will overwrite the revision.\n */\nexport function getDefaultRevision(): string {\n    /**\n     * Use a non-valid revision format,\n     * to ensure that the RxStorage will throw\n     * when the revision is not replaced downstream.\n     */\n    return '';\n}\n\n\nexport function getSortDocumentsByLastWriteTimeComparator<RxDocType>(primaryPath: string) {\n    return (a: RxDocumentData<RxDocType>, b: RxDocumentData<RxDocType>) => {\n        if (a._meta.lwt === b._meta.lwt) {\n            if ((b as any)[primaryPath] < (a as any)[primaryPath]) {\n                return 1;\n            } else {\n                return -1;\n            }\n        } else {\n            return a._meta.lwt - b._meta.lwt;\n        }\n    };\n}\nexport function sortDocumentsByLastWriteTime<RxDocType>(\n    primaryPath: string,\n    docs: RxDocumentData<RxDocType>[]\n): RxDocumentData<RxDocType>[] {\n    return docs.sort(getSortDocumentsByLastWriteTimeComparator(primaryPath));\n}\n\n\n\n/**\n * To get specific nested path values from objects,\n * RxDB normally uses the 'object-path' npm module.\n * But when performance is really relevant, this is not fast enough.\n * Instead we use a monad that can prepare some stuff up front\n * and we can re-use the generated function.\n */\nexport type ObjectPathMonadFunction<T> = (obj: T) => any;\nexport function objectPathMonad<T>(objectPath: string): ObjectPathMonadFunction<T> {\n    const splitted = objectPath.split('.');\n\n    /**\n     * Performance shortcut,\n     * if no nested path is used,\n     * directly return the field of the object.\n     */\n    if (splitted.length === 1) {\n        return (obj: T) => (obj as any)[objectPath];\n    }\n\n\n    return (obj: T) => {\n        let currentVal: any = obj;\n        let t = 0;\n        while (t < splitted.length) {\n            const subPath = splitted[t];\n            currentVal = currentVal[subPath];\n            if (typeof currentVal === 'undefined') {\n                return currentVal;\n            }\n            t++;\n        }\n        return currentVal;\n    }\n}\n"],"mappings":"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"}