{"version":3,"file":"util.js","names":["pluginMissing","pluginKey","keyParts","split","pluginName","forEach","part","ucfirst","Error","fastUnsecureHash","inputString","doNotUseTextEncoder","hashValue","i","chr","len","encoded","TextEncoder","encode","j","length","push","charCodeAt","toString","defaultHashFunction","input","_lastNow","now","ret","Date","getTime","twoDecimals","parseFloat","toFixed","nextTick","Promise","res","setTimeout","promiseWait","ms","toPromise","maybePromise","then","resolve","PROMISE_RESOLVE_TRUE","PROMISE_RESOLVE_FALSE","PROMISE_RESOLVE_NULL","PROMISE_RESOLVE_VOID","requestIdlePromise","timeout","window","promiseSeries","tasks","initial","reduce","current","next","requestIdleCallbackIfAvailable","fun","str","f","charAt","toUpperCase","substr","trimDots","slice","runXTimes","xTimes","fn","Array","fill","_v","idx","ensureNotFalsy","obj","ensureInteger","Number","isInteger","sortObject","noArraySort","isArray","sort","a","b","localeCompare","map","RegExp","out","Object","keys","key","stringifyFilter","value","randomCouchString","text","possible","Math","floor","random","RANDOM_STRING","lastOfArray","ar","shuffleArray","arr","toArray","batchArray","array","batchSize","batch","splice","removeOneFromArrayIfMatches","condition","done","deepClone","src","dest","clone","flatClone","assign","firstPropertyNameOfObject","firstPropertyValueOfObject","flattenObject","ob","toReturn","hasOwnProperty","flatObject","x","parseRevision","revision","height","parseInt","hash","getHeightOfRevision","createRevision","databaseInstanceToken","previousDocData","previousRevision","_rev","previousRevisionHeigth","newRevisionHeight","areRxDocumentArraysEqual","primaryPath","ar1","ar2","row1","row2","overwriteGetterForCaching","getterName","defineProperty","get","isFolderPath","name","includes","getFromMapOrThrow","val","getFromMapOrFill","fillerFunction","set","getFromObjectOrThrow","isMaybeReadonlyArray","arrayFilterNotEmpty","undefined","b64EncodeUnicode","b64DecodeUnicode","decode","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","byteLength","String","fromCharCode","btoa","blobBufferUtil","createBlobBuffer","data","type","blobBuffer","Blob","createBlobBufferFromBase64","base64String","fetch","base64Response","blob","isBlobBuffer","Buffer","isBuffer","blobBufferType","prototype","call","toBase64String","URL","createObjectURL","arrayBuffer","size","RXJS_SHARE_REPLAY_DEFAULTS","bufferSize","refCount","RX_META_LWT_MINIMUM","getDefaultRxDocumentMeta","lwt","getDefaultRevision","stripMetaDataFromDocument","docData","_meta","_deleted","getSortDocumentsByLastWriteTimeComparator","sortDocumentsByLastWriteTime","docs","objectPathMonad","objectPath","currentVal","t","subPath","deepFreeze","o","freeze","getOwnPropertyNames","prop","isFrozen","errorToPlainJson","err","message","rxdb","parameters","code","stack"],"sources":["../../src/util.ts"],"sourcesContent":["import type {\n    BlobBuffer,\n    DeepReadonlyObject,\n    MaybeReadonly,\n    PlainJsonError,\n    RxDocumentData,\n    RxDocumentMeta,\n    RxError,\n    RxTypeError,\n    StringKeys\n} from './types';\n\n/**\n * Returns an error that indicates that a plugin is missing\n * We do not throw a RxError because this should not be handled\n * programmatically but by using the correct import\n */\nexport function pluginMissing(\n    pluginKey: string\n): Error {\n    const keyParts = pluginKey.split('-');\n    let pluginName = 'RxDB';\n    keyParts.forEach(part => {\n        pluginName += ucfirst(part);\n    });\n    pluginName += 'Plugin';\n    return new Error(\n        `You are using a function which must be overwritten by a plugin.\n        You should either prevent the usage of this function or add the plugin via:\n            import { ${pluginName} } from 'rxdb/plugins/${pluginKey}';\n            addRxPlugin(${pluginName});\n        `\n    );\n}\n\n/**\n * This is a very fast hash method\n * but it is not cryptographically secure.\n * For each run it will append a number between 0 and 2147483647 (=biggest 32 bit int).\n * @link http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n * @return a string as hash-result\n */\nexport function fastUnsecureHash(\n    inputString: string,\n    // used to test the polyfill\n    doNotUseTextEncoder?: boolean\n): string {\n    let hashValue = 0,\n        i, chr, len;\n\n    /**\n     * For better performance we first transform all\n     * chars into their ascii numbers at once.\n     *\n     * This is what makes the murmurhash implementation such fast.\n     * @link https://github.com/perezd/node-murmurhash/blob/master/murmurhash.js#L4\n     */\n    let encoded: Uint8Array | number[];\n\n    /**\n     * All modern browsers support the TextEncoder\n     * @link https://caniuse.com/textencoder\n     * But to make RxDB work in other JavaScript runtimes,\n     * like when using it in flutter or QuickJS, we need to\n     * make it work even when there is no TextEncoder.\n     */\n    if (typeof TextEncoder !== 'undefined' && !doNotUseTextEncoder) {\n        encoded = new TextEncoder().encode(inputString);\n    } else {\n        encoded = [];\n        for (let j = 0; j < inputString.length; j++) {\n            encoded.push(inputString.charCodeAt(j));\n        }\n    }\n\n    for (i = 0, len = inputString.length; i < len; i++) {\n        chr = encoded[i];\n        hashValue = ((hashValue << 5) - hashValue) + chr;\n        hashValue |= 0; // Convert to 32bit integer\n    }\n    if (hashValue < 0) {\n        hashValue = hashValue * -1;\n    }\n\n    /**\n     * To make the output smaller\n     * but still have it to represent the same value,\n     * we use the biggest radix of 36 instead of just\n     * transforming it into a hex string.\n     */\n    return hashValue.toString(36);\n}\n\n\n/**\n * Default hash method used to create revision hashes\n * that do not have to be cryptographically secure.\n * IMPORTANT: Changing the default hashing method\n * requires a BREAKING change!\n */\nexport function defaultHashFunction(input: string): string {\n    return fastUnsecureHash(input);\n}\n\n/**\n * Returns the current unix time in milliseconds (with two decmials!)\n * Because the accuracy of getTime() in javascript is bad,\n * and we cannot rely on performance.now() on all platforms,\n * this method implements a way to never return the same value twice.\n * This ensures that when now() is called often, we do not loose the information\n * about which call came first and which came after.\n *\n * We had to move from having no decimals, to having two decimal\n * because it turned out that some storages are such fast that\n * calling this method too often would return 'the future'.\n */\nlet _lastNow: number = 0;\n/**\n * Returns the current time in milliseconds,\n * also ensures to not return the same value twice.\n */\nexport function now(): number {\n    let ret = new Date().getTime();\n    ret = ret + 0.01;\n    if (ret <= _lastNow) {\n        ret = _lastNow + 0.01;\n    }\n\n    /**\n     * Strip the returned number to max two decimals.\n     * In theory we would not need this but\n     * in practice JavaScript has no such good number precision\n     * so rounding errors could add another decimal place.\n     */\n    const twoDecimals = parseFloat(ret.toFixed(2));\n\n    _lastNow = twoDecimals;\n    return twoDecimals;\n}\n\n/**\n * returns a promise that resolves on the next tick\n */\nexport function nextTick(): Promise<void> {\n    return new Promise(res => setTimeout(res, 0));\n}\n\nexport function promiseWait(ms: number = 0): Promise<void> {\n    return new Promise(res => setTimeout(res, ms));\n}\n\nexport function toPromise<T>(maybePromise: Promise<T> | T): Promise<T> {\n    if (maybePromise && typeof (maybePromise as any).then === 'function') {\n        // is promise\n        return maybePromise as any;\n    } else {\n        return Promise.resolve(maybePromise);\n    }\n}\n\nexport const PROMISE_RESOLVE_TRUE: Promise<true> = Promise.resolve(true);\nexport const PROMISE_RESOLVE_FALSE: Promise<false> = Promise.resolve(false);\nexport const PROMISE_RESOLVE_NULL: Promise<null> = Promise.resolve(null);\nexport const PROMISE_RESOLVE_VOID: Promise<void> = Promise.resolve();\n\nexport function requestIdlePromise(timeout: number | null = null) {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) {\n        return new Promise(\n            res => (window as any)['requestIdleCallback'](res, {\n                timeout\n            })\n        );\n    } else {\n        return promiseWait(0);\n    }\n}\n\n\n/**\n * like Promise.all() but runs in series instead of parallel\n * @link https://github.com/egoist/promise.series/blob/master/index.js\n * @param tasks array with functions that return a promise\n */\nexport function promiseSeries(\n    tasks: Function[],\n    initial?: any\n): Promise<any[]> {\n    return tasks\n        .reduce(\n            (current, next) => (current as any).then(next),\n            Promise.resolve(initial)\n        );\n}\n\n/**\n * run the callback if requestIdleCallback available\n * do nothing if not\n * @link https://developer.mozilla.org/de/docs/Web/API/Window/requestIdleCallback\n */\nexport function requestIdleCallbackIfAvailable(fun: Function): void {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) (window as any)['requestIdleCallback'](fun);\n}\n\n/**\n * uppercase first char\n */\nexport function ucfirst(str: string): string {\n    str += '';\n    const f = str.charAt(0)\n        .toUpperCase();\n    return f + str.substr(1);\n}\n\n/**\n * removes trailing and ending dots from the string\n */\nexport function trimDots(str: string): string {\n    // start\n    while (str.charAt(0) === '.')\n        str = str.substr(1);\n\n    // end\n    while (str.slice(-1) === '.')\n        str = str.slice(0, -1);\n\n    return str;\n}\n\n\nexport function runXTimes(xTimes: number, fn: (idx: number) => void) {\n    new Array(xTimes).fill(0).forEach((_v, idx) => fn(idx));\n}\n\nexport function ensureNotFalsy<T>(obj: T | false | undefined | null): T {\n    if (!obj) {\n        throw new Error('ensureNotFalsy() is falsy');\n    }\n    return obj;\n}\n\nexport function ensureInteger(obj: unknown): number {\n    if (!Number.isInteger(obj)) {\n        throw new Error('ensureInteger() is falsy');\n    }\n    return obj as number;\n}\n\n/**\n * deep-sort an object so its attributes are in lexical order.\n * Also sorts the arrays inside of the object if no-array-sort not set\n */\nexport function sortObject(obj: any, noArraySort = false): any {\n    if (!obj) return obj; // do not sort null, false or undefined\n\n    // array\n    if (!noArraySort && Array.isArray(obj)) {\n        return obj\n            .sort((a, b) => {\n                if (typeof a === 'string' && typeof b === 'string')\n                    return a.localeCompare(b);\n\n                if (typeof a === 'object') return 1;\n                else return -1;\n            })\n            .map(i => sortObject(i, noArraySort));\n    }\n\n    // object\n    // array is also of type object\n    if (typeof obj === 'object' && !Array.isArray(obj)) {\n        if (obj instanceof RegExp) {\n            return obj;\n        }\n\n        const out: any = {};\n        Object.keys(obj)\n            .sort((a, b) => a.localeCompare(b))\n            .forEach(key => {\n                out[key] = sortObject(obj[key], noArraySort);\n            });\n        return out;\n    }\n\n    // everything else\n    return obj;\n}\n\n\n/**\n * used to JSON.stringify() objects that contain a regex\n * @link https://stackoverflow.com/a/33416684 thank you Fabian Jakobs!\n */\nexport function stringifyFilter(key: string, value: any) {\n    if (value instanceof RegExp) {\n        return value.toString();\n    }\n    return value;\n}\n\n/**\n * get a random string which can be used with couchdb\n * @link http://stackoverflow.com/a/1349426/3443137\n */\nexport function randomCouchString(length: number = 10): string {\n    let text = '';\n    const possible = 'abcdefghijklmnopqrstuvwxyz';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n}\n\n/**\n * A random string that is never inside of any storage\n */\nexport const RANDOM_STRING = 'Fz7SZXPmYJujkzjY1rpXWvlWBqoGAfAX';\n\n\nexport function lastOfArray<T>(ar: T[]): T | undefined {\n    return ar[ar.length - 1];\n}\n\n/**\n * shuffle the given array\n */\nexport function shuffleArray<T>(arr: T[]): T[] {\n    return arr.sort(() => (Math.random() - 0.5));\n}\n\nexport function toArray<T>(input: T | T[] | Readonly<T> | Readonly<T[]>): T[] {\n    return Array.isArray(input) ? (input as any[]).slice(0) : [input];\n}\n\n/**\n * Split array with items into smaller arrays with items\n * @link https://stackoverflow.com/a/7273794/3443137\n */\nexport function batchArray<T>(array: T[], batchSize: number): T[][] {\n    array = array.slice(0);\n    const ret: T[][] = [];\n    while (array.length) {\n        const batch = array.splice(0, batchSize);\n        ret.push(batch);\n    }\n    return ret;\n}\n\n\n/**\n * @link https://stackoverflow.com/a/15996017\n */\nexport function removeOneFromArrayIfMatches<T>(ar: T[], condition: (x: T) => boolean): T[] {\n    ar = ar.slice();\n    let i = ar.length;\n    let done = false;\n    while (i-- && !done) {\n        if (condition(ar[i])) {\n            done = true;\n            ar.splice(i, 1);\n        }\n    }\n    return ar;\n}\n\n\n/**\n * Deep clone a plain json object.\n * Does not work with recursive stuff\n * or non-plain-json.\n * IMPORANT: Performance of this is very important,\n * do not change it without running performance tests!\n *\n * @link https://github.com/zxdong262/deep-copy/blob/master/src/index.ts\n */\nfunction deepClone<T>(src: T | DeepReadonlyObject<T>): T {\n    if (!src) {\n        return src;\n    }\n    if (src === null || typeof (src) !== 'object') {\n        return src;\n    }\n    if (Array.isArray(src)) {\n        const ret = new Array(src.length);\n        let i = ret.length;\n        while (i--) {\n            ret[i] = deepClone(src[i]);\n        }\n        return ret as any;\n    }\n    const dest: any = {};\n    // eslint-disable-next-line guard-for-in\n    for (const key in src) {\n        // TODO we should not be required to deep clone RegEx objects,\n        // this must be fixed in RxDB.\n        if (src[key] instanceof RegExp) {\n            dest[key] = src[key];\n        } else {\n            dest[key] = deepClone(src[key]);\n        }\n    }\n    return dest;\n}\nexport const clone = deepClone;\n\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone<T>(obj: T | DeepReadonlyObject<T> | Readonly<T>): T {\n    return Object.assign({}, obj) as any;\n}\n\n/**\n * @link https://stackoverflow.com/a/11509718/3443137\n */\nexport function firstPropertyNameOfObject(obj: any): string {\n    return Object.keys(obj)[0];\n}\nexport function firstPropertyValueOfObject<T>(obj: { [k: string]: T; }): T {\n    const key = Object.keys(obj)[0];\n    return obj[key];\n}\n\n/**\n * returns a flattened object\n * @link https://gist.github.com/penguinboy/762197\n */\nexport function flattenObject(ob: any) {\n    const toReturn: any = {};\n\n    for (const i in ob) {\n        if (!ob.hasOwnProperty(i)) continue;\n\n        if ((typeof ob[i]) === 'object') {\n            const flatObject = flattenObject(ob[i]);\n            for (const x in flatObject) {\n                if (!flatObject.hasOwnProperty(x)) continue;\n\n                toReturn[i + '.' + x] = flatObject[x];\n            }\n        } else {\n            toReturn[i] = ob[i];\n        }\n    }\n    return toReturn;\n}\n\n\nexport function parseRevision(revision: string): { height: number; hash: string; } {\n    const split = revision.split('-');\n    return {\n        height: parseInt(split[0], 10),\n        hash: split[1]\n    };\n}\n\nexport function getHeightOfRevision(revision: string): number {\n    return parseRevision(revision).height;\n}\n\n/**\n * Creates the next write revision for a given document.\n */\nexport function createRevision<RxDocType>(\n    databaseInstanceToken: string,\n    previousDocData?: RxDocumentData<RxDocType>\n): string {\n    const previousRevision = previousDocData ? previousDocData._rev : null;\n    const previousRevisionHeigth = previousRevision ? parseRevision(previousRevision).height : 0;\n    const newRevisionHeight = previousRevisionHeigth + 1;\n    return newRevisionHeight + '-' + databaseInstanceToken;\n}\n\n\n/**\n * Faster way to check the equalness of document lists\n * compared to doing a deep-equal.\n * Here we only check the ids and revisions.\n */\nexport function areRxDocumentArraysEqual<RxDocType>(\n    primaryPath: StringKeys<RxDocumentData<RxDocType>>,\n    ar1: RxDocumentData<RxDocType>[],\n    ar2: RxDocumentData<RxDocType>[]\n): boolean {\n    if (ar1.length !== ar2.length) {\n        return false;\n    }\n    let i = 0;\n    const len = ar1.length;\n    while (i < len) {\n        const row1 = ar1[i];\n        const row2 = ar2[i];\n        i++;\n\n        if (\n            row1._rev !== row2._rev ||\n            row1[primaryPath] !== row2[primaryPath]\n        ) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * overwrites the getter with the actual value\n * Mostly used for caching stuff on the first run\n */\nexport function overwriteGetterForCaching<ValueType = any>(\n    obj: any,\n    getterName: string,\n    value: ValueType\n): ValueType {\n    Object.defineProperty(obj, getterName, {\n        get: function () {\n            return value;\n        }\n    });\n    return value;\n}\n\n/**\n * returns true if the given name is likely a folder path\n */\nexport function isFolderPath(name: string) {\n    // do not check, if foldername is given\n    if (\n        name.includes('/') || // unix\n        name.includes('\\\\') // windows\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function getFromMapOrThrow<K, V>(map: Map<K, V> | WeakMap<any, V>, key: K): V {\n    const val = map.get(key);\n    if (typeof val === 'undefined') {\n        throw new Error('missing value from map ' + key);\n    }\n    return val;\n}\n\nexport function getFromMapOrFill<K, V>(\n    map: Map<K, V> | WeakMap<any, V>,\n    key: K,\n    fillerFunction: () => V\n): V {\n    let value = map.get(key);\n    if (!value) {\n        value = fillerFunction();\n        map.set(key, value);\n    }\n    return value;\n}\n\nexport function getFromObjectOrThrow<V>(\n    obj: { [k: string]: V; },\n    key: string\n): V {\n    const val = obj[key];\n    if (!val) {\n        throw new Error('missing value from object ' + key);\n    }\n    return val;\n}\n\n/**\n * returns true if the supplied argument is either an Array<T> or a Readonly<Array<T>>\n */\nexport function isMaybeReadonlyArray(x: any): x is MaybeReadonly<any[]> {\n    // While this looks strange, it's a workaround for an issue in TypeScript:\n    // https://github.com/microsoft/TypeScript/issues/17002\n    //\n    // The problem is that `Array.isArray` as a type guard returns `false` for a readonly array,\n    // but at runtime the object is an array and the runtime call to `Array.isArray` would return `true`.\n    // The type predicate here allows for both `Array<T>` and `Readonly<Array<T>>` to pass a type check while\n    // still performing runtime type inspection.\n    return Array.isArray(x);\n}\n\n\n/**\n * Use this in array.filter() to remove all empty slots\n * and have the correct typings afterwards.\n * @link https://stackoverflow.com/a/46700791/3443137\n */\nexport function arrayFilterNotEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n    if (value === null || value === undefined) {\n        return false;\n    }\n    return true;\n}\n\n\n/**\n * NO! We cannot just use btoa() and atob()\n * because they do not work correctly with binary data.\n * @link https://stackoverflow.com/q/30106476/3443137\n */\nimport { encode, decode } from 'js-base64';\n\n/**\n * atob() and btoa() do not work well with non ascii chars,\n * so we have to use these helper methods instead.\n * @link https://stackoverflow.com/a/30106551/3443137\n */\n// Encoding UTF8 -> base64\nexport function b64EncodeUnicode(str: string) {\n    return encode(str);\n}\n\n// Decoding base64 -> UTF8\nexport function b64DecodeUnicode(str: string) {\n    return decode(str);\n}\n\n/**\n * @link https://stackoverflow.com/a/9458996/3443137\n */\nexport function arrayBufferToBase64(buffer: ArrayBuffer) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binary);\n}\n\n\n/**\n * This is an abstraction over the Blob/Buffer data structure.\n * We need this because it behaves different in different JavaScript runtimes.\n * Since RxDB 13.0.0 we switch to Blob-only because Node.js does not support\n * the Blob data structure which is also supported by the browsers.\n */\nexport const blobBufferUtil = {\n    /**\n     * depending if we are on node or browser,\n     * we have to use Buffer(node) or Blob(browser)\n     */\n    createBlobBuffer(\n        data: string,\n        type: string\n    ): BlobBuffer {\n        const blobBuffer = new Blob([data], {\n            type\n        });\n        return blobBuffer;\n    },\n    /**\n     * depending if we are on node or browser,\n     * we have to use Buffer(node) or Blob(browser)\n     */\n    async createBlobBufferFromBase64(\n        base64String: string,\n        type: string\n    ): Promise<BlobBuffer> {\n        const base64Response = await fetch(`data:${type};base64,${base64String}`);\n        const blob = await base64Response.blob();\n        return blob;\n\n    },\n    isBlobBuffer(data: any): boolean {\n        if (data instanceof Blob || (typeof Buffer !== 'undefined' && Buffer.isBuffer(data))) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n    toString(blobBuffer: BlobBuffer | string): Promise<string> {\n        /**\n         * in the electron-renderer we have a typed array insteaf of a blob\n         * so we have to transform it.\n         * @link https://github.com/pubkey/rxdb/issues/1371\n         */\n        const blobBufferType = Object.prototype.toString.call(blobBuffer);\n        if (blobBufferType === '[object Uint8Array]') {\n            blobBuffer = new Blob([blobBuffer]);\n        }\n        if (typeof blobBuffer === 'string') {\n            return Promise.resolve(blobBuffer);\n        }\n\n        return (blobBuffer as Blob).text();\n    },\n    async toBase64String(blobBuffer: BlobBuffer | string): Promise<string> {\n        if (typeof blobBuffer === 'string') {\n            return blobBuffer;\n        }\n\n        /**\n         * in the electron-renderer we have a typed array insteaf of a blob\n         * so we have to transform it.\n         * @link https://github.com/pubkey/rxdb/issues/1371\n         */\n        const blobBufferType = Object.prototype.toString.call(blobBuffer);\n        if (blobBufferType === '[object Uint8Array]') {\n            blobBuffer = new Blob([blobBuffer]);\n        }\n\n        const arrayBuffer = await fetch(URL.createObjectURL(blobBuffer as Blob)).then(res => res.arrayBuffer());\n        return arrayBufferToBase64(arrayBuffer);\n    },\n    size(blobBuffer: BlobBuffer): number {\n        return (blobBuffer as Blob).size;\n    }\n};\n\n/**\n * Using shareReplay() without settings will not unsubscribe\n * if there are no more subscribers.\n * So we use these defaults.\n * @link https://cartant.medium.com/rxjs-whats-changed-with-sharereplay-65c098843e95\n */\nexport const RXJS_SHARE_REPLAY_DEFAULTS = {\n    bufferSize: 1,\n    refCount: true\n};\n\n/**\n * We use 1 as minimum so that the value is never falsy.\n * This const is used in several places because querying\n * with a value lower then the minimum could give false results.\n */\nexport const RX_META_LWT_MINIMUM = 1;\n\nexport function getDefaultRxDocumentMeta(): RxDocumentMeta {\n    return {\n        /**\n         * Set this to 1 to not waste performance\n         * while calling new Date()..\n         * The storage wrappers will anyway update\n         * the lastWrite time while calling transformDocumentDataFromRxDBToRxStorage()\n         */\n        lwt: RX_META_LWT_MINIMUM\n    };\n}\n\n/**\n * Returns a revision that is not valid.\n * Use this to have correct typings\n * while the storage wrapper anyway will overwrite the revision.\n */\nexport function getDefaultRevision(): string {\n    /**\n     * Use a non-valid revision format,\n     * to ensure that the RxStorage will throw\n     * when the revision is not replaced downstream.\n     */\n    return '';\n}\n\nexport function stripMetaDataFromDocument<RxDocType>(docData: RxDocumentData<RxDocType>): RxDocType {\n    return Object.assign({}, docData, {\n        _meta: undefined,\n        _deleted: undefined,\n        _rev: undefined\n    });\n}\n\nexport function getSortDocumentsByLastWriteTimeComparator<RxDocType>(primaryPath: string) {\n    return (a: RxDocumentData<RxDocType>, b: RxDocumentData<RxDocType>) => {\n        if (a._meta.lwt === b._meta.lwt) {\n            if ((b as any)[primaryPath] < (a as any)[primaryPath]) {\n                return 1;\n            } else {\n                return -1;\n            }\n        } else {\n            return a._meta.lwt - b._meta.lwt;\n        }\n    };\n}\nexport function sortDocumentsByLastWriteTime<RxDocType>(\n    primaryPath: string,\n    docs: RxDocumentData<RxDocType>[]\n): RxDocumentData<RxDocType>[] {\n    return docs.sort(getSortDocumentsByLastWriteTimeComparator(primaryPath));\n}\n\n\n\n/**\n * To get specific nested path values from objects,\n * RxDB normally uses the 'object-path' npm module.\n * But when performance is really relevant, this is not fast enough.\n * Instead we use a monad that can prepare some stuff up front\n * and we can re-use the generated function.\n */\nexport type ObjectPathMonadFunction<T, R = any> = (obj: T) => R;\nexport function objectPathMonad<T, R = any>(objectPath: string): ObjectPathMonadFunction<T, R> {\n    const split = objectPath.split('.');\n\n    /**\n     * Performance shortcut,\n     * if no nested path is used,\n     * directly return the field of the object.\n     */\n    if (split.length === 1) {\n        return (obj: T) => (obj as any)[objectPath];\n    }\n\n\n    return (obj: T) => {\n        let currentVal: any = obj;\n        let t = 0;\n        while (t < split.length) {\n            const subPath = split[t];\n            currentVal = currentVal[subPath];\n            if (typeof currentVal === 'undefined') {\n                return currentVal;\n            }\n            t++;\n        }\n        return currentVal;\n    };\n}\n\n\nexport function deepFreeze<T>(o: T): T {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (\n            (o as any).hasOwnProperty(prop)\n            &&\n            (o as any)[prop] !== null\n            &&\n            (\n                typeof (o as any)[prop] === 'object'\n                ||\n                typeof (o as any)[prop] === 'function'\n            )\n            &&\n            !Object.isFrozen((o as any)[prop])\n        ) {\n            deepFreeze((o as any)[prop]);\n        }\n    });\n    return o;\n}\n\n\n\nexport function errorToPlainJson(err: Error | TypeError | RxError | RxTypeError): PlainJsonError {\n    const ret: PlainJsonError = {\n        name: err.name,\n        message: err.message,\n        rxdb: (err as any).rxdb,\n        parameters: (err as RxError).parameters,\n        code: (err as RxError).code,\n        // stack must be last to make it easier to read the json in a console.\n        stack: err.stack\n    };\n    return ret;\n}\n"],"mappings":"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"}