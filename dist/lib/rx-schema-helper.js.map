{"version":3,"sources":["../../src/rx-schema-helper.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACO,SAAS,yBAAT,CACH,OADG,EAEH,UAFG,EAGY;AAAA;;AACf,MAAM,YAA6B,GAAG;AAClC,IAAA,OAAO,EAAP,OADkC;AAElC,IAAA,IAAI,EAAE,QAF4B;AAGlC,IAAA,UAAU,EAAE,UAHsB;AAIlC,IAAA,UAAU,iCACL,UADK,IACQ;AACV,MAAA,IAAI,EAAE;AADI,KADR,cAJwB;AASlC,IAAA,QAAQ,EAAE,CAAC,UAAD;AATwB,GAAtC;AAWA,SAAO,YAAP;AACH;AAED;AACA;AACA;;;AACO,SAAS,qBAAT,CACH,YADG,EAEH,IAFG,EAGO;AACV,MAAI,OAAe,GAAG,IAAtB;AACA,EAAA,OAAO,GAAG,OAAO,CAAC,OAAR,CAAgB,KAAhB,EAAuB,cAAvB,CAAV;AACA,EAAA,OAAO,GAAG,gBAAgB,OAA1B;AACA,EAAA,OAAO,GAAG,oBAAS,OAAT,CAAV;;AAEA,MAAM,GAAG,GAAG,uBAAW,GAAX,CAAe,YAAf,EAA6B,OAA7B,CAAZ;;AACA,SAAO,GAAP;AACH","file":"rx-schema-helper.js","sourcesContent":["import objectPath from 'object-path';\nimport type { JsonSchema, RxJsonSchema } from './types';\nimport { trimDots } from './util';\n\n/**\n * Helper function to create a valid RxJsonSchema\n * with a given version.\n */\nexport function getPseudoSchemaForVersion<T = any>(\n    version: number,\n    primaryKey: keyof T\n): RxJsonSchema<T> {\n    const pseudoSchema: RxJsonSchema<T> = {\n        version,\n        type: 'object',\n        primaryKey: primaryKey as any,\n        properties: {\n            [primaryKey]: {\n                type: 'string'\n            }\n        } as any,\n        required: [primaryKey]\n    };\n    return pseudoSchema;\n}\n\n/**\n * Returns the sub-schema for a given path\n */\nexport function getSchemaByObjectPath<T = any>(\n    rxJsonSchema: RxJsonSchema<T>,\n    path: keyof T | string\n): JsonSchema {\n    let usePath: string = path as string;\n    usePath = usePath.replace(/\\./g, '.properties.');\n    usePath = 'properties.' + usePath;\n    usePath = trimDots(usePath);\n\n    const ret = objectPath.get(rxJsonSchema, usePath);\n    return ret;\n}\n"]}