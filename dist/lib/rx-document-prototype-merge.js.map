{"version":3,"file":"rx-document-prototype-merge.js","names":["protoForCollection","WeakMap","constructorForCollection","getDocumentPrototype","rxCollection","has","schemaProto","schema","ormProto","getDocumentOrmPrototype","baseProto","basePrototype","proto","forEach","obj","props","Object","getOwnPropertyNames","key","desc","getOwnPropertyDescriptor","enumerable","startsWith","endsWith","value","defineProperty","get","bind","configurable","writable","set","getRxDocumentConstructor","ret","createRxDocument","docData","primary","primaryPath","cacheDoc","_docCache","doc","overwritable","deepFreezeWhenDevMode","_runHooksSync","createRxDocuments","docsJSON","map","json","entries","methods","k","v"],"sources":["../../src/rx-document-prototype-merge.ts"],"sourcesContent":["/**\n * For the ORM capabilities,\n * we have to merge the document prototype\n * with the ORM functions and the data\n * We do this itterating over the properties and\n * adding them to a new object.\n * In the future we should do this by chaining the __proto__ objects\n */\n\nimport type {\n    RxCollection,\n    RxDocument,\n    RxDocumentData\n} from './types';\nimport {\n    createRxDocumentConstructor,\n    basePrototype,\n    createWithConstructor as createRxDocumentWithConstructor\n} from './rx-document';\nimport {\n    runPluginHooks\n} from './hooks';\nimport { overwritable } from './overwritable';\n\n// caches\nconst protoForCollection: WeakMap<RxCollection, any> = new WeakMap();\nconst constructorForCollection: WeakMap<RxCollection, any> = new WeakMap();\n\nexport function getDocumentPrototype(\n    rxCollection: RxCollection\n): any {\n    if (!protoForCollection.has(rxCollection)) {\n        const schemaProto = rxCollection.schema.getDocumentPrototype();\n        const ormProto = getDocumentOrmPrototype(rxCollection);\n        const baseProto = basePrototype;\n        const proto = {};\n        [\n            schemaProto,\n            ormProto,\n            baseProto\n        ].forEach(obj => {\n            const props = Object.getOwnPropertyNames(obj);\n            props.forEach(key => {\n                const desc: any = Object.getOwnPropertyDescriptor(obj, key);\n\n\n                /**\n                 * When enumerable is true, it will show on console.dir(instance)\n                 * To not polute the output, only getters and methods are enumerable\n                 */\n                let enumerable = true;\n                if (\n                    key.startsWith('_') ||\n                    key.endsWith('_') ||\n                    key.startsWith('$') ||\n                    key.endsWith('$')\n                ) enumerable = false;\n\n                if (typeof desc.value === 'function') {\n                    // when getting a function, we automatically do a .bind(this)\n                    Object.defineProperty(proto, key, {\n                        get() {\n                            return desc.value.bind(this);\n                        },\n                        enumerable,\n                        configurable: false\n                    });\n\n                } else {\n                    desc.enumerable = enumerable;\n                    desc.configurable = false;\n                    if (desc.writable)\n                        desc.writable = false;\n                    Object.defineProperty(proto, key, desc);\n                }\n            });\n        });\n        protoForCollection.set(rxCollection, proto);\n\n    }\n    return protoForCollection.get(rxCollection);\n}\n\nexport function getRxDocumentConstructor(\n    rxCollection: RxCollection\n) {\n    if (!constructorForCollection.has(rxCollection)) {\n        const ret = createRxDocumentConstructor(\n            getDocumentPrototype(rxCollection)\n        );\n        constructorForCollection.set(rxCollection, ret);\n    }\n    return constructorForCollection.get(rxCollection);\n}\n\n/**\n * Create a RxDocument-instance from the jsonData\n * and the prototype merge.\n * If the document already exists in the _docCache,\n * return that instead to ensure we have no duplicates.\n */\nexport function createRxDocument<RxDocType, ORM>(\n    rxCollection: RxCollection<RxDocType, ORM>,\n    docData: RxDocumentData<RxDocType>\n): RxDocument<RxDocType, ORM> {\n    const primary: string = docData[rxCollection.schema.primaryPath] as any;\n\n    // return from cache if exists\n    const cacheDoc = rxCollection._docCache.get(primary);\n    if (cacheDoc) {\n        return cacheDoc as any;\n    }\n\n    const doc = createRxDocumentWithConstructor(\n        getRxDocumentConstructor(rxCollection as any),\n        rxCollection as any,\n        overwritable.deepFreezeWhenDevMode(docData as any)\n    );\n\n    rxCollection._docCache.set(primary, doc as any);\n    rxCollection._runHooksSync('post', 'create', docData, doc);\n    runPluginHooks('postCreateRxDocument', doc);\n    return doc as any;\n}\n\n/**\n * create RxDocument from the docs-array\n */\nexport function createRxDocuments<DT, OM>(\n    rxCollection: RxCollection,\n    docsJSON: any[]\n): RxDocument<DT, OM>[] {\n    return docsJSON.map(\n        json => createRxDocument<DT, OM>(rxCollection as any, json)\n    );\n}\n\n/**\n * returns the prototype-object\n * that contains the orm-methods,\n * used in the proto-merge\n */\nexport function getDocumentOrmPrototype(rxCollection: RxCollection): any {\n    const proto: any = {};\n    Object\n        .entries(rxCollection.methods)\n        .forEach(([k, v]) => {\n            proto[k] = v;\n        });\n    return proto;\n}\n"],"mappings":"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"}