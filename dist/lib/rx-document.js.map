{"version":3,"sources":["../../src/rx-document.ts"],"names":[],"mappings":"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","file":"rx-document.js","sourcesContent":["import objectPath from 'object-path';\nimport {\n    Observable,\n    BehaviorSubject\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    map\n} from 'rxjs/operators';\nimport {\n    clone,\n    trimDots,\n    getHeightOfRevision,\n    pluginMissing,\n    now,\n    nextTick,\n    flatClone,\n    PROMISE_RESOLVE_NULL,\n    PROMISE_RESOLVE_VOID\n} from './util';\nimport {\n    newRxError,\n    newRxTypeError,\n    isPouchdbConflictError\n} from './rx-error';\nimport {\n    runPluginHooks\n} from './hooks';\n\nimport type {\n    RxDocument,\n    RxCollection,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxChangeEvent\n} from './types';\nimport { getDocumentDataOfRxChangeEvent } from './rx-change-event';\nimport { writeToStorageInstance } from './rx-collection-helper';\nimport { overwritable } from './overwritable';\nimport { getSchemaByObjectPath } from './rx-schema-helper';\n\nexport const basePrototype = {\n\n    /**\n     * TODO\n     * instead of appliying the _this-hack\n     * we should make these accesors functions instead of getters.\n     */\n    get _data() {\n        const _this: RxDocument = this as any;\n        /**\n         * Might be undefined when vuejs-devtools are used\n         * @link https://github.com/pubkey/rxdb/issues/1126\n         */\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n\n        return _this._dataSync$.getValue();\n    },\n    get primaryPath() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.collection.schema.primaryPath;\n    },\n    get primary() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return (_this._data as any)[_this.primaryPath];\n    },\n    get revision() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._rev;\n    },\n    get deleted$() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._isDeleted$.asObservable();\n    },\n    get deleted() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._isDeleted$.getValue();\n    },\n\n    /**\n     * returns the observable which emits the plain-data of this document\n     */\n    get $(): Observable<any> {\n        const _this: RxDocument = this as any;\n        return _this._dataSync$.asObservable().pipe(\n            map(docData => overwritable.deepFreezeWhenDevMode(docData))\n        );\n    },\n\n    _handleChangeEvent(this: RxDocument, changeEvent: RxChangeEvent<any>) {\n        if (changeEvent.documentId !== this.primary) {\n            return;\n        }\n\n        // ensure that new _rev is higher then current\n        const docData = getDocumentDataOfRxChangeEvent(changeEvent);\n        const newRevNr = getHeightOfRevision(docData._rev);\n        const currentRevNr = getHeightOfRevision(this._data._rev);\n        if (currentRevNr > newRevNr) return;\n\n        switch (changeEvent.operation) {\n            case 'INSERT':\n                break;\n            case 'UPDATE':\n                const newData = changeEvent.documentData;\n                this._dataSync$.next(newData);\n                break;\n            case 'DELETE':\n                // remove from docCache to assure new upserted RxDocuments will be a new instance\n                this.collection._docCache.delete(this.primary);\n                this._isDeleted$.next(true);\n                break;\n        }\n    },\n\n    /**\n     * emits the changeEvent to the upper instance (RxCollection)\n     */\n    $emit(this: RxDocument, changeEvent: RxChangeEvent<any>) {\n        return this.collection.$emit(changeEvent);\n    },\n\n    /**\n     * returns observable of the value of the given path\n     */\n    get$(this: RxDocument, path: string): Observable<any> {\n        if (path.includes('.item.')) {\n            throw newRxError('DOC1', {\n                path\n            });\n        }\n\n        if (path === this.primaryPath)\n            throw newRxError('DOC2');\n\n        // final fields cannot be modified and so also not observed\n        if (this.collection.schema.finalFields.includes(path)) {\n            throw newRxError('DOC3', {\n                path\n            });\n        }\n\n        const schemaObj = getSchemaByObjectPath(\n            this.collection.schema.jsonSchema,\n            path\n        );\n        if (!schemaObj) {\n            throw newRxError('DOC4', {\n                path\n            });\n        }\n\n        return this._dataSync$\n            .pipe(\n                map(data => objectPath.get(data, path)),\n                distinctUntilChanged()\n            );\n    },\n\n    /**\n     * populate the given path\n     */\n    populate(this: RxDocument, path: string): Promise<RxDocument | null> {\n        const schemaObj = getSchemaByObjectPath(\n            this.collection.schema.jsonSchema,\n            path\n        );\n        const value = this.get(path);\n        if (!value) {\n            return PROMISE_RESOLVE_NULL;\n        }\n        if (!schemaObj) {\n            throw newRxError('DOC5', {\n                path\n            });\n        }\n        if (!schemaObj.ref) {\n            throw newRxError('DOC6', {\n                path,\n                schemaObj\n            });\n        }\n\n        const refCollection: RxCollection = this.collection.database.collections[schemaObj.ref];\n        if (!refCollection) {\n            throw newRxError('DOC7', {\n                ref: schemaObj.ref,\n                path,\n                schemaObj\n            });\n        }\n\n        if (schemaObj.type === 'array') {\n            return refCollection.findByIds(value).then(res => {\n                const valuesIterator = res.values();\n                return Array.from(valuesIterator) as any;\n            });\n        } else {\n            return refCollection.findOne(value).exec();\n        }\n    },\n\n    /**\n     * get data by objectPath\n     */\n    get(this: RxDocument, objPath: string): any | null {\n        if (!this._data) return undefined;\n        let valueObj = objectPath.get(this._data, objPath);\n\n        // direct return if array or non-object\n        if (\n            typeof valueObj !== 'object' ||\n            Array.isArray(valueObj)\n        ) {\n            return overwritable.deepFreezeWhenDevMode(valueObj);\n        }\n\n        /**\n         * TODO find a way to deep-freeze together with defineGetterSetter\n         * so we do not have to do a deep clone here.\n         */\n        valueObj = clone(valueObj);\n        defineGetterSetter(\n            this.collection.schema,\n            valueObj,\n            objPath,\n            this as any\n        );\n        return valueObj;\n    },\n\n    toJSON(this: RxDocument, withRevAndAttachments = false) {\n        if (!withRevAndAttachments) {\n            const data = flatClone(this._data);\n            delete (data as any)._rev;\n            delete (data as any)._attachments;\n            return overwritable.deepFreezeWhenDevMode(data);\n        } else {\n            return overwritable.deepFreezeWhenDevMode(this._data);\n        }\n    },\n\n    /**\n     * set data by objectPath\n     * This can only be called on temporary documents\n     */\n    set(this: RxDocument, objPath: string, value: any) {\n\n        // setters can only be used on temporary documents\n        if (!this._isTemporary) {\n            throw newRxTypeError('DOC16', {\n                objPath,\n                value\n            });\n        }\n\n        if (typeof objPath !== 'string') {\n            throw newRxTypeError('DOC15', {\n                objPath,\n                value\n            });\n        }\n\n        // if equal, do nothing\n        if (Object.is(this.get(objPath), value)) return;\n\n        // throw if nested without root-object\n        const pathEls = objPath.split('.');\n        pathEls.pop();\n        const rootPath = pathEls.join('.');\n        if (typeof objectPath.get(this._data, rootPath) === 'undefined') {\n            throw newRxError('DOC10', {\n                childpath: objPath,\n                rootPath\n            });\n        }\n\n        objectPath.set(this._data, objPath, value);\n        return this;\n    },\n\n    /**\n     * updates document\n     * @overwritten by plugin (optinal)\n     * @param updateObj mongodb-like syntax\n     */\n    update(_updateObj: any) {\n        throw pluginMissing('update');\n    },\n    putAttachment() {\n        throw pluginMissing('attachments');\n    },\n    getAttachment() {\n        throw pluginMissing('attachments');\n    },\n    allAttachments() {\n        throw pluginMissing('attachments');\n    },\n    get allAttachments$() {\n        throw pluginMissing('attachments');\n    },\n\n\n    /**\n     * runs an atomic update over the document\n     * @param function that takes the document-data and returns a new data-object\n     */\n    atomicUpdate(this: RxDocument, mutationFunction: Function): Promise<RxDocument> {\n        return new Promise((res, rej) => {\n            this._atomicQueue = this._atomicQueue\n                .then(async () => {\n                    let done = false;\n                    // we need a hacky while loop to stay incide the chain-link of _atomicQueue\n                    // while still having the option to run a retry on conflicts\n                    while (!done) {\n                        const oldData = this._dataSync$.getValue();\n                        try {\n                            // always await because mutationFunction might be async\n                            let newData = await mutationFunction(clone(this._dataSync$.getValue()), this);\n                            if (this.collection) {\n                                newData = this.collection.schema.fillObjectWithDefaults(newData);\n                            }\n                            await this._saveData(newData, oldData);\n                            done = true;\n                        } catch (err) {\n                            /**\n                             * conflicts cannot happen by just using RxDB in one process\n                             * There are two ways they still can appear which is\n                             * replication and multi-tab usage\n                             * Because atomicUpdate has a mutation function,\n                             * we can just re-run the mutation until there is no conflict\n                             */\n                            if (isPouchdbConflictError(err as any)) {\n                                // we need to free the cpu for a tick or the browser tests will fail\n                                await nextTick();\n                                // pouchdb conflict error -> retrying\n                            } else {\n                                rej(err);\n                                return;\n                            }\n                        }\n                    }\n                    res(this);\n                });\n        });\n    },\n\n\n    /**\n     * patches the given properties\n     */\n    atomicPatch<RxDocumentType = any>(\n        this: RxDocument<RxDocumentType>,\n        patch: Partial<RxDocumentType>\n    ): Promise<RxDocument<RxDocumentType>> {\n        return this.atomicUpdate((docData: RxDocumentType) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    (docData as any)[k] = v;\n                });\n            return docData;\n        });\n    },\n\n    /**\n     * saves the new document-data\n     * and handles the events\n     */\n    async _saveData<RxDocumentType>(\n        this: RxDocument<RxDocumentType>,\n        newData: RxDocumentWriteData<RxDocumentType>,\n        oldData: RxDocumentData<RxDocumentType>\n    ): Promise<void> {\n        newData = newData;\n\n        // deleted documents cannot be changed\n        if (this._isDeleted$.getValue()) {\n            throw newRxError('DOC11', {\n                id: this.primary,\n                document: this\n            });\n        }\n\n        // ensure modifications are ok\n        this.collection.schema.validateChange(oldData, newData);\n\n        await this.collection._runHooks('pre', 'save', newData, this);\n\n        this.collection.schema.validate(newData);\n        await writeToStorageInstance(\n            this.collection,\n            {\n                previous: oldData,\n                document: newData\n            }\n        );\n\n        return this.collection._runHooks('post', 'save', newData, this);\n    },\n\n    /**\n     * saves the temporary document and makes a non-temporary out of it\n     * Saving a temporary doc is basically the same as RxCollection.insert()\n     * @return false if nothing to save\n     */\n    save(this: RxDocument): Promise<boolean> {\n        // .save() cannot be called on non-temporary-documents\n        if (!this._isTemporary) {\n            throw newRxError('DOC17', {\n                id: this.primary,\n                document: this\n            });\n        }\n\n        return this.collection.insert(this)\n            .then(() => {\n                this._isTemporary = false;\n                this.collection._docCache.set(this.primary, this);\n\n                // internal events\n                this._dataSync$.next(this._data);\n\n                return true;\n            });\n    },\n\n    /**\n     * remove the document,\n     * this not not equal to a pouchdb.remove(),\n     * instead we keep the values and only set _deleted: true\n     */\n    remove(this: RxDocument): Promise<RxDocument> {\n        if (this.deleted) {\n            return Promise.reject(newRxError('DOC13', {\n                document: this,\n                id: this.primary\n            }));\n        }\n\n        const deletedData = flatClone(this._data);\n        let startTime: number;\n        return this.collection._runHooks('pre', 'remove', deletedData, this)\n            .then(() => {\n                deletedData._deleted = true;\n                startTime = now();\n                return writeToStorageInstance(\n                    this.collection,\n                    {\n                        previous: this._data,\n                        document: deletedData\n                    }\n                );\n            })\n            .then(() => {\n                return this.collection._runHooks('post', 'remove', deletedData, this);\n            })\n            .then(() => this);\n    },\n    destroy() {\n        throw newRxError('DOC14');\n    }\n};\n\nexport function createRxDocumentConstructor(proto = basePrototype) {\n    const constructor = function RxDocumentConstructor(\n        this: RxDocument,\n        collection: RxCollection,\n        jsonData: any\n    ) {\n        this.collection = collection;\n\n        // if true, this is a temporary document\n        this._isTemporary = false;\n\n        // assume that this is always equal to the doc-data in the database\n        this._dataSync$ = new BehaviorSubject(jsonData);\n        this._isDeleted$ = new BehaviorSubject(false) as any;\n\n        this._atomicQueue = PROMISE_RESOLVE_VOID;\n\n        /**\n         * because of the prototype-merge,\n         * we can not use the native instanceof operator\n         */\n        this.isInstanceOfRxDocument = true;\n    };\n    constructor.prototype = proto;\n    return constructor;\n}\n\nexport function defineGetterSetter(\n    schema: any,\n    valueObj: any,\n    objPath = '',\n    thisObj = false\n) {\n    if (valueObj === null) return;\n\n\n    let pathProperties = getSchemaByObjectPath(\n        schema.jsonSchema,\n        objPath\n    );\n\n    if (typeof pathProperties === 'undefined') return;\n    if (pathProperties.properties) pathProperties = pathProperties.properties;\n\n    Object.keys(pathProperties)\n        .forEach(key => {\n            const fullPath = trimDots(objPath + '.' + key);\n\n            // getter - value\n            valueObj.__defineGetter__(\n                key,\n                function (this: RxDocument) {\n                    const _this: RxDocument = thisObj ? thisObj : (this as any);\n                    if (!_this.get || typeof _this.get !== 'function') {\n                        /**\n                         * When an object gets added to the state of a vuejs-component,\n                         * it happens that this getter is called with another scope.\n                         * To prevent errors, we have to return undefined in this case\n                         */\n                        return undefined;\n                    }\n                    const ret = _this.get(fullPath);\n                    return ret;\n                }\n            );\n            // getter - observable$\n            Object.defineProperty(valueObj, key + '$', {\n                get: function () {\n                    const _this = thisObj ? thisObj : this;\n                    return _this.get$(fullPath);\n                },\n                enumerable: false,\n                configurable: false\n            });\n            // getter - populate_\n            Object.defineProperty(valueObj, key + '_', {\n                get: function () {\n                    const _this = thisObj ? thisObj : this;\n                    return _this.populate(fullPath);\n                },\n                enumerable: false,\n                configurable: false\n            });\n            // setter - value\n            valueObj.__defineSetter__(key, function (\n                this: RxDocument,\n                val: any\n            ) {\n                const _this: any = thisObj ? thisObj : this;\n                return _this.set(fullPath, val);\n            });\n        });\n}\n\nexport function createWithConstructor(\n    constructor: any,\n    collection: RxCollection,\n    jsonData: any\n): RxDocument | null {\n    if (\n        jsonData[collection.schema.primaryPath] &&\n        jsonData[collection.schema.primaryPath].startsWith('_design')\n    ) return null;\n\n    const doc = new constructor(collection, jsonData);\n    runPluginHooks('createRxDocument', doc);\n    return doc;\n}\n\nexport function isRxDocument(obj: any): boolean {\n    if (typeof obj === 'undefined') return false;\n    return !!obj.isInstanceOfRxDocument;\n}\n"]}