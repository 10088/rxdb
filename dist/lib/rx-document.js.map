{"version":3,"sources":["../../src/rx-document.ts"],"names":["basePrototype","_data","_this","isInstanceOfRxDocument","undefined","_dataSync$","getValue","primaryPath","collection","schema","primary","revision","_rev","deleted$","_isDeleted$","asObservable","deleted","$","pipe","docData","overwritable","deepFreezeWhenDevMode","_handleChangeEvent","changeEvent","documentId","newRevNr","currentRevNr","operation","newData","documentData","next","_docCache","get$","path","includes","finalFields","schemaObj","jsonSchema","data","objectPath","get","populate","value","PROMISE_RESOLVE_NULL","ref","refCollection","database","collections","type","findByIds","then","res","valuesIterator","values","Array","from","findOne","exec","objPath","valueObj","isArray","defineGetterSetter","toJSON","withRevAndAttachments","_attachments","set","_isTemporary","Object","is","pathEls","split","pop","rootPath","join","childpath","update","_updateObj","putAttachment","getAttachment","allAttachments","allAttachments$","atomicUpdate","mutationFunction","Promise","rej","_atomicQueue","done","oldData","fillObjectWithDefaults","_saveData","atomicPatch","patch","entries","forEach","k","v","id","document","validateChange","_runHooks","validate","previous","save","insert","remove","reject","deletedData","_deleted","destroy","createRxDocumentConstructor","proto","constructor","RxDocumentConstructor","jsonData","BehaviorSubject","PROMISE_RESOLVE_VOID","prototype","thisObj","pathProperties","properties","keys","key","fullPath","__defineGetter__","ret","defineProperty","enumerable","configurable","__defineSetter__","val","createWithConstructor","startsWith","doc","isRxDocument","obj"],"mappings":"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","sourcesContent":["import objectPath from 'object-path';\nimport {\n    Observable,\n    BehaviorSubject\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    map\n} from 'rxjs/operators';\nimport {\n    clone,\n    trimDots,\n    getHeightOfRevision,\n    pluginMissing,\n    now,\n    nextTick,\n    flatClone,\n    PROMISE_RESOLVE_NULL,\n    PROMISE_RESOLVE_VOID\n} from './util';\nimport {\n    newRxError,\n    newRxTypeError,\n    isPouchdbConflictError\n} from './rx-error';\nimport {\n    runPluginHooks\n} from './hooks';\n\nimport type {\n    RxDocument,\n    RxCollection,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxChangeEvent\n} from './types';\nimport { getDocumentDataOfRxChangeEvent } from './rx-change-event';\nimport { writeToStorageInstance } from './rx-collection-helper';\nimport { overwritable } from './overwritable';\nimport { getSchemaByObjectPath } from './rx-schema-helper';\n\nexport const basePrototype = {\n\n    /**\n     * TODO\n     * instead of appliying the _this-hack\n     * we should make these accesors functions instead of getters.\n     */\n    get _data() {\n        const _this: RxDocument = this as any;\n        /**\n         * Might be undefined when vuejs-devtools are used\n         * @link https://github.com/pubkey/rxdb/issues/1126\n         */\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n\n        return _this._dataSync$.getValue();\n    },\n    get primaryPath() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.collection.schema.primaryPath;\n    },\n    get primary() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return (_this._data as any)[_this.primaryPath];\n    },\n    get revision() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._rev;\n    },\n    get deleted$() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._isDeleted$.asObservable();\n    },\n    get deleted() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._isDeleted$.getValue();\n    },\n\n    /**\n     * returns the observable which emits the plain-data of this document\n     */\n    get $(): Observable<any> {\n        const _this: RxDocument = this as any;\n        return _this._dataSync$.asObservable().pipe(\n            map(docData => overwritable.deepFreezeWhenDevMode(docData))\n        );\n    },\n\n    _handleChangeEvent(this: RxDocument, changeEvent: RxChangeEvent<any>) {\n        if (changeEvent.documentId !== this.primary) {\n            return;\n        }\n\n        // ensure that new _rev is higher then current\n        const docData = getDocumentDataOfRxChangeEvent(changeEvent);\n        const newRevNr = getHeightOfRevision(docData._rev);\n        const currentRevNr = getHeightOfRevision(this._data._rev);\n        if (currentRevNr > newRevNr) return;\n\n        switch (changeEvent.operation) {\n            case 'INSERT':\n                break;\n            case 'UPDATE':\n                const newData = changeEvent.documentData;\n                this._dataSync$.next(newData);\n                break;\n            case 'DELETE':\n                // remove from docCache to assure new upserted RxDocuments will be a new instance\n                this.collection._docCache.delete(this.primary);\n                this._isDeleted$.next(true);\n                break;\n        }\n    },\n\n    /**\n     * returns observable of the value of the given path\n     */\n    get$(this: RxDocument, path: string): Observable<any> {\n        if (path.includes('.item.')) {\n            throw newRxError('DOC1', {\n                path\n            });\n        }\n\n        if (path === this.primaryPath)\n            throw newRxError('DOC2');\n\n        // final fields cannot be modified and so also not observed\n        if (this.collection.schema.finalFields.includes(path)) {\n            throw newRxError('DOC3', {\n                path\n            });\n        }\n\n        const schemaObj = getSchemaByObjectPath(\n            this.collection.schema.jsonSchema,\n            path\n        );\n        if (!schemaObj) {\n            throw newRxError('DOC4', {\n                path\n            });\n        }\n\n        return this._dataSync$\n            .pipe(\n                map(data => objectPath.get(data, path)),\n                distinctUntilChanged()\n            );\n    },\n\n    /**\n     * populate the given path\n     */\n    populate(this: RxDocument, path: string): Promise<RxDocument | null> {\n        const schemaObj = getSchemaByObjectPath(\n            this.collection.schema.jsonSchema,\n            path\n        );\n        const value = this.get(path);\n        if (!value) {\n            return PROMISE_RESOLVE_NULL;\n        }\n        if (!schemaObj) {\n            throw newRxError('DOC5', {\n                path\n            });\n        }\n        if (!schemaObj.ref) {\n            throw newRxError('DOC6', {\n                path,\n                schemaObj\n            });\n        }\n\n        const refCollection: RxCollection = this.collection.database.collections[schemaObj.ref];\n        if (!refCollection) {\n            throw newRxError('DOC7', {\n                ref: schemaObj.ref,\n                path,\n                schemaObj\n            });\n        }\n\n        if (schemaObj.type === 'array') {\n            return refCollection.findByIds(value).then(res => {\n                const valuesIterator = res.values();\n                return Array.from(valuesIterator) as any;\n            });\n        } else {\n            return refCollection.findOne(value).exec();\n        }\n    },\n\n    /**\n     * get data by objectPath\n     */\n    get(this: RxDocument, objPath: string): any | null {\n        if (!this._data) return undefined;\n        let valueObj = objectPath.get(this._data, objPath);\n\n        // direct return if array or non-object\n        if (\n            typeof valueObj !== 'object' ||\n            Array.isArray(valueObj)\n        ) {\n            return overwritable.deepFreezeWhenDevMode(valueObj);\n        }\n\n        /**\n         * TODO find a way to deep-freeze together with defineGetterSetter\n         * so we do not have to do a deep clone here.\n         */\n        valueObj = clone(valueObj);\n        defineGetterSetter(\n            this.collection.schema,\n            valueObj,\n            objPath,\n            this as any\n        );\n        return valueObj;\n    },\n\n    toJSON(this: RxDocument, withRevAndAttachments = false) {\n        if (!withRevAndAttachments) {\n            const data = flatClone(this._data);\n            delete (data as any)._rev;\n            delete (data as any)._attachments;\n            return overwritable.deepFreezeWhenDevMode(data);\n        } else {\n            return overwritable.deepFreezeWhenDevMode(this._data);\n        }\n    },\n\n    /**\n     * set data by objectPath\n     * This can only be called on temporary documents\n     */\n    set(this: RxDocument, objPath: string, value: any) {\n\n        // setters can only be used on temporary documents\n        if (!this._isTemporary) {\n            throw newRxTypeError('DOC16', {\n                objPath,\n                value\n            });\n        }\n\n        if (typeof objPath !== 'string') {\n            throw newRxTypeError('DOC15', {\n                objPath,\n                value\n            });\n        }\n\n        // if equal, do nothing\n        if (Object.is(this.get(objPath), value)) return;\n\n        // throw if nested without root-object\n        const pathEls = objPath.split('.');\n        pathEls.pop();\n        const rootPath = pathEls.join('.');\n        if (typeof objectPath.get(this._data, rootPath) === 'undefined') {\n            throw newRxError('DOC10', {\n                childpath: objPath,\n                rootPath\n            });\n        }\n\n        objectPath.set(this._data, objPath, value);\n        return this;\n    },\n\n    /**\n     * updates document\n     * @overwritten by plugin (optinal)\n     * @param updateObj mongodb-like syntax\n     */\n    update(_updateObj: any) {\n        throw pluginMissing('update');\n    },\n    putAttachment() {\n        throw pluginMissing('attachments');\n    },\n    getAttachment() {\n        throw pluginMissing('attachments');\n    },\n    allAttachments() {\n        throw pluginMissing('attachments');\n    },\n    get allAttachments$() {\n        throw pluginMissing('attachments');\n    },\n\n\n    /**\n     * runs an atomic update over the document\n     * @param function that takes the document-data and returns a new data-object\n     */\n    atomicUpdate(this: RxDocument, mutationFunction: Function): Promise<RxDocument> {\n        return new Promise((res, rej) => {\n            this._atomicQueue = this._atomicQueue\n                .then(async () => {\n                    let done = false;\n                    // we need a hacky while loop to stay incide the chain-link of _atomicQueue\n                    // while still having the option to run a retry on conflicts\n                    while (!done) {\n                        const oldData = this._dataSync$.getValue();\n                        try {\n                            // always await because mutationFunction might be async\n                            let newData = await mutationFunction(clone(this._dataSync$.getValue()), this);\n                            if (this.collection) {\n                                newData = this.collection.schema.fillObjectWithDefaults(newData);\n                            }\n                            await this._saveData(newData, oldData);\n                            done = true;\n                        } catch (err) {\n                            /**\n                             * conflicts cannot happen by just using RxDB in one process\n                             * There are two ways they still can appear which is\n                             * replication and multi-tab usage\n                             * Because atomicUpdate has a mutation function,\n                             * we can just re-run the mutation until there is no conflict\n                             */\n                            if (isPouchdbConflictError(err as any)) {\n                                // we need to free the cpu for a tick or the browser tests will fail\n                                await nextTick();\n                                // pouchdb conflict error -> retrying\n                            } else {\n                                rej(err);\n                                return;\n                            }\n                        }\n                    }\n                    res(this);\n                });\n        });\n    },\n\n\n    /**\n     * patches the given properties\n     */\n    atomicPatch<RxDocumentType = any>(\n        this: RxDocument<RxDocumentType>,\n        patch: Partial<RxDocumentType>\n    ): Promise<RxDocument<RxDocumentType>> {\n        return this.atomicUpdate((docData: RxDocumentType) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    (docData as any)[k] = v;\n                });\n            return docData;\n        });\n    },\n\n    /**\n     * saves the new document-data\n     * and handles the events\n     */\n    async _saveData<RxDocumentType>(\n        this: RxDocument<RxDocumentType>,\n        newData: RxDocumentWriteData<RxDocumentType>,\n        oldData: RxDocumentData<RxDocumentType>\n    ): Promise<void> {\n        newData = newData;\n\n        // deleted documents cannot be changed\n        if (this._isDeleted$.getValue()) {\n            throw newRxError('DOC11', {\n                id: this.primary,\n                document: this\n            });\n        }\n\n        // ensure modifications are ok\n        this.collection.schema.validateChange(oldData, newData);\n\n        await this.collection._runHooks('pre', 'save', newData, this);\n\n        this.collection.schema.validate(newData);\n        await writeToStorageInstance(\n            this.collection,\n            {\n                previous: oldData,\n                document: newData\n            }\n        );\n\n        return this.collection._runHooks('post', 'save', newData, this);\n    },\n\n    /**\n     * saves the temporary document and makes a non-temporary out of it\n     * Saving a temporary doc is basically the same as RxCollection.insert()\n     * @return false if nothing to save\n     */\n    save(this: RxDocument): Promise<boolean> {\n        // .save() cannot be called on non-temporary-documents\n        if (!this._isTemporary) {\n            throw newRxError('DOC17', {\n                id: this.primary,\n                document: this\n            });\n        }\n\n        return this.collection.insert(this)\n            .then(() => {\n                this._isTemporary = false;\n                this.collection._docCache.set(this.primary, this);\n\n                // internal events\n                this._dataSync$.next(this._data);\n\n                return true;\n            });\n    },\n\n    /**\n     * remove the document,\n     * this not not equal to a pouchdb.remove(),\n     * instead we keep the values and only set _deleted: true\n     */\n    remove(this: RxDocument): Promise<RxDocument> {\n        if (this.deleted) {\n            return Promise.reject(newRxError('DOC13', {\n                document: this,\n                id: this.primary\n            }));\n        }\n\n        const deletedData = flatClone(this._data);\n        return this.collection._runHooks('pre', 'remove', deletedData, this)\n            .then(() => {\n                deletedData._deleted = true;\n                return writeToStorageInstance(\n                    this.collection,\n                    {\n                        previous: this._data,\n                        document: deletedData\n                    }\n                );\n            })\n            .then(() => {\n                return this.collection._runHooks('post', 'remove', deletedData, this);\n            })\n            .then(() => this);\n    },\n    destroy() {\n        throw newRxError('DOC14');\n    }\n};\n\nexport function createRxDocumentConstructor(proto = basePrototype) {\n    const constructor = function RxDocumentConstructor(\n        this: RxDocument,\n        collection: RxCollection,\n        jsonData: any\n    ) {\n        this.collection = collection;\n\n        // if true, this is a temporary document\n        this._isTemporary = false;\n\n        // assume that this is always equal to the doc-data in the database\n        this._dataSync$ = new BehaviorSubject(jsonData);\n        this._isDeleted$ = new BehaviorSubject(false) as any;\n\n        this._atomicQueue = PROMISE_RESOLVE_VOID;\n\n        /**\n         * because of the prototype-merge,\n         * we can not use the native instanceof operator\n         */\n        this.isInstanceOfRxDocument = true;\n    };\n    constructor.prototype = proto;\n    return constructor;\n}\n\nexport function defineGetterSetter(\n    schema: any,\n    valueObj: any,\n    objPath = '',\n    thisObj = false\n) {\n    if (valueObj === null) return;\n\n\n    let pathProperties = getSchemaByObjectPath(\n        schema.jsonSchema,\n        objPath\n    );\n\n    if (typeof pathProperties === 'undefined') return;\n    if (pathProperties.properties) pathProperties = pathProperties.properties;\n\n    Object.keys(pathProperties)\n        .forEach(key => {\n            const fullPath = trimDots(objPath + '.' + key);\n\n            // getter - value\n            valueObj.__defineGetter__(\n                key,\n                function (this: RxDocument) {\n                    const _this: RxDocument = thisObj ? thisObj : (this as any);\n                    if (!_this.get || typeof _this.get !== 'function') {\n                        /**\n                         * When an object gets added to the state of a vuejs-component,\n                         * it happens that this getter is called with another scope.\n                         * To prevent errors, we have to return undefined in this case\n                         */\n                        return undefined;\n                    }\n                    const ret = _this.get(fullPath);\n                    return ret;\n                }\n            );\n            // getter - observable$\n            Object.defineProperty(valueObj, key + '$', {\n                get: function () {\n                    const _this = thisObj ? thisObj : this;\n                    return _this.get$(fullPath);\n                },\n                enumerable: false,\n                configurable: false\n            });\n            // getter - populate_\n            Object.defineProperty(valueObj, key + '_', {\n                get: function () {\n                    const _this = thisObj ? thisObj : this;\n                    return _this.populate(fullPath);\n                },\n                enumerable: false,\n                configurable: false\n            });\n            // setter - value\n            valueObj.__defineSetter__(key, function (\n                this: RxDocument,\n                val: any\n            ) {\n                const _this: any = thisObj ? thisObj : this;\n                return _this.set(fullPath, val);\n            });\n        });\n}\n\nexport function createWithConstructor(\n    constructor: any,\n    collection: RxCollection,\n    jsonData: any\n): RxDocument | null {\n    if (\n        jsonData[collection.schema.primaryPath] &&\n        jsonData[collection.schema.primaryPath].startsWith('_design')\n    ) return null;\n\n    const doc = new constructor(collection, jsonData);\n    runPluginHooks('createRxDocument', doc);\n    return doc;\n}\n\nexport function isRxDocument(obj: any): boolean {\n    if (typeof obj === 'undefined') return false;\n    return !!obj.isInstanceOfRxDocument;\n}\n"],"file":"rx-document.js"}