{"version":3,"sources":["../../../../src/plugins/migration/migration-state.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;AASA;;AAOO,IAAM,wCAAwC,GAAG,IAAI,OAAJ,EAAjD;;;AAEA,SAAS,2BAAT,CAAqC,QAArC,EAAwH;AAC3H,MAAI,CAAC,wCAAwC,CAAC,GAAzC,CAA6C,QAA7C,CAAL,EAA6D;AACzD,IAAA,wCAAwC,CAAC,GAAzC,CACI,QADJ,EAEI,IAAI,qBAAJ,CAAgE,EAAhE,CAFJ;AAIH;;AACD,MAAM,OAAO,GAAG,wCAAwC,CAAC,GAAzC,CAA6C,QAA7C,CAAhB;AACA,SAAO,0BAAe,OAAf,CAAP;AACH;AAED;AACA;AACA;AACA;;;AACO,SAAS,iBAAT,CAA2B,QAA3B,EAAiD;AACpD,MAAM,OAAO,GAAG,wCAAwC,CAAC,GAAzC,CAA6C,QAA7C,CAAhB;;AACA,MAAI,OAAJ,EAAa;AACT,IAAA,OAAO,CAAC,QAAR;AACH;AACJ","file":"migration-state.js","sourcesContent":["import {\n    BehaviorSubject,\n    Observable\n} from 'rxjs';\nimport type {\n    MigrationState,\n    RxCollection,\n    RxDatabase\n} from '../../types';\nimport { ensureNotFalsy } from '../../util';\n\nexport type MigrationStateWithCollection = {\n    collection: RxCollection;\n    state: MigrationState;\n};\n\nexport const DATA_MIGRATION_STATE_SUBJECT_BY_DATABASE = new WeakMap<RxDatabase, BehaviorSubject<Observable<MigrationStateWithCollection>[]>>();\n\nexport function getMigrationStateByDatabase(database: RxDatabase): BehaviorSubject<Observable<MigrationStateWithCollection>[]> {\n    if (!DATA_MIGRATION_STATE_SUBJECT_BY_DATABASE.has(database)) {\n        DATA_MIGRATION_STATE_SUBJECT_BY_DATABASE.set(\n            database,\n            new BehaviorSubject<Observable<MigrationStateWithCollection>[]>([])\n        );\n    }\n    const subject = DATA_MIGRATION_STATE_SUBJECT_BY_DATABASE.get(database);\n    return ensureNotFalsy(subject);\n}\n\n/**\n * Complete on database destroy\n * so people do not have to unsubscribe\n */\nexport function onDatabaseDestroy(database: RxDatabase) {\n    const subject = DATA_MIGRATION_STATE_SUBJECT_BY_DATABASE.get(database);\n    if (subject) {\n        subject.complete();\n    }\n}\n"]}