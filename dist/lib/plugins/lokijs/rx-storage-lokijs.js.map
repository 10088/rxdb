{"version":3,"sources":["../../../../src/plugins/lokijs/rx-storage-lokijs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAQA;;AACA;;AAIA;;IAKa,a;AAGT,yBACW,gBADX,EAEE;AAAA,SAJK,IAIL,GAJY,QAIZ;AAAA,SADS,gBACT,GADS,gBACT;AAAG;;;;SAEL,I,GAAA,cAAK,IAAL,EAAoD;AAChD,WAAO,OAAO,CAAC,OAAR,CAAgB,gBAAK,IAAL,CAAhB,CAAP;AACH,G;;SAEK,qB;+GAAN,iBACI,MADJ;AAAA;AAAA;AAAA;AAAA;AAAA,+CAGW,sDAA0B,MAA1B,EAAkC,KAAK,gBAAvC,CAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;SAMa,8B;wHAAb,kBACI,MADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gDAGW,wEAAmC,MAAnC,EAA2C,KAAK,gBAAhD,CAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;;;;;;AAOG,SAAS,gBAAT,GAEU;AAAA,MADb,gBACa,uEAD4B,EAC5B;AACb,MAAM,OAAO,GAAG,IAAI,aAAJ,CAAkB,gBAAlB,CAAhB;AACA,SAAO,OAAP;AACH","file":"rx-storage-lokijs.js","sourcesContent":["import type {\n    LokiDatabaseSettings,\n    LokiSettings,\n    LokiStorageInternals,\n    RxKeyObjectStorageInstanceCreationParams,\n    RxStorage,\n    RxStorageInstanceCreationParams\n} from '../../types';\nimport { hash } from '../../util';\nimport {\n    createLokiStorageInstance,\n    RxStorageInstanceLoki\n} from './rx-storage-instance-loki';\nimport {\n    createLokiKeyObjectStorageInstance,\n    RxStorageKeyObjectInstanceLoki\n} from './rx-storage-key-object-instance-loki';\n\nexport class RxStorageLoki implements RxStorage<LokiStorageInternals, LokiSettings> {\n    public name = 'lokijs';\n\n    constructor(\n        public databaseSettings: LokiDatabaseSettings\n    ) { }\n\n    hash(data: Buffer | Blob | string): Promise<string> {\n        return Promise.resolve(hash(data));\n    }\n\n    async createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<RxDocType, LokiSettings>\n    ): Promise<RxStorageInstanceLoki<RxDocType>> {\n        return createLokiStorageInstance(params, this.databaseSettings);\n    }\n\n    public async createKeyObjectStorageInstance(\n        params: RxKeyObjectStorageInstanceCreationParams<LokiSettings>\n    ): Promise<RxStorageKeyObjectInstanceLoki> {\n        return createLokiKeyObjectStorageInstance(params, this.databaseSettings);\n    }\n}\n\nexport function getRxStorageLoki(\n    databaseSettings: LokiDatabaseSettings = {}\n): RxStorageLoki {\n    const storage = new RxStorageLoki(databaseSettings);\n    return storage;\n}\n"]}