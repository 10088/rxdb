{"version":3,"file":"local-documents-helper.js","names":["removeLocalDocumentsStorageInstance","storage","databaseName","collectionName","createLocalDocumentStorageInstance","storageInstance","remove","LOCAL_DOC_STATE_BY_PARENT","WeakMap","createLocalDocStateByParent","parent","database","name","statePromise","instanceCreationOptions","multiInstance","getWrappedStorageInstance","RX_LOCAL_DOCUMENT_SCHEMA","docCache","DocCache","sub","$","pipe","filter","cE","isLocal","subscribe","doc","get","documentId","_handleChangeEvent","_subs","push","storageToken","databaseStorageToken","subLocalDocs","changeStream","eventBulk","changeEventBulk","id","internal","undefined","events","map","ev","storageChangeEventToRxChangeEvent","databaseToken","token","$emit","set","getLocalDocStateByParent","newRxError","collection","createStorageInstance","getCollectionLocalInstanceName","schema","options","closeStateByParent","then","state","close","fillWithDefaultSettings","version","primaryKey","type","properties","data","additionalProperties","required"],"sources":["../../../../src/plugins/local-documents/local-documents-helper.ts"],"sourcesContent":["import { filter } from 'rxjs/operators';\nimport { DocCache } from '../../doc-cache';\nimport { newRxError } from '../../rx-error';\nimport { fillWithDefaultSettings } from '../../rx-schema-helper';\nimport {\n    getWrappedStorageInstance,\n    storageChangeEventToRxChangeEvent\n} from '../../rx-storage-helper';\nimport type {\n    LocalDocumentParent,\n    LocalDocumentState,\n    RxChangeEvent,\n    RxChangeEventBulk,\n    RxDatabase,\n    RxDocumentData,\n    RxJsonSchema,\n    RxLocalDocument,\n    RxLocalDocumentData,\n    RxStorage\n} from '../../types';\n\nconst LOCAL_DOC_STATE_BY_PARENT: WeakMap<LocalDocumentParent, Promise<LocalDocumentState>> = new WeakMap();\n\n\nexport function createLocalDocStateByParent(parent: LocalDocumentParent): void {\n    const database: RxDatabase = parent.database ? parent.database : parent as any;\n    const collectionName = parent.database ? parent.name : '';\n    const statePromise = (async () => {\n        let storageInstance = await createLocalDocumentStorageInstance(\n            database.storage,\n            database.name,\n            collectionName,\n            database.instanceCreationOptions,\n            database.multiInstance\n        );\n        storageInstance = getWrappedStorageInstance(\n            database,\n            storageInstance,\n            RX_LOCAL_DOCUMENT_SCHEMA\n        );\n        const docCache = new DocCache<RxLocalDocument<any, any>>();\n\n        /**\n         * Update cached local documents on events.\n         */\n        const sub = parent.$\n            .pipe(\n                filter(cE => (cE as RxChangeEvent<any>).isLocal)\n            )\n            .subscribe((cE: RxChangeEvent<any>) => {\n                const doc = docCache.get(cE.documentId);\n                if (doc) {\n                    doc._handleChangeEvent(cE);\n                }\n            });\n        parent._subs.push(sub);\n\n        /**\n         * Emit the changestream into the collections change stream\n         */\n        const databaseStorageToken = await database.storageToken;\n        const subLocalDocs = storageInstance.changeStream().subscribe(eventBulk => {\n            const changeEventBulk: RxChangeEventBulk<RxLocalDocumentData> = {\n                id: eventBulk.id,\n                internal: false,\n                collectionName: parent.database ? parent.name : undefined,\n                storageToken: databaseStorageToken,\n                events: eventBulk.events.map(ev => storageChangeEventToRxChangeEvent(\n                    true,\n                    ev,\n                    parent.database ? parent as any : undefined\n                )),\n                databaseToken: database.token\n            };\n            database.$emit(changeEventBulk);\n        });\n        parent._subs.push(subLocalDocs);\n\n        return {\n            database,\n            parent,\n            storageInstance,\n            docCache\n        }\n    })();\n    LOCAL_DOC_STATE_BY_PARENT.set(parent, statePromise);\n}\n\nexport function getLocalDocStateByParent(parent: LocalDocumentParent): Promise<LocalDocumentState> {\n    const statePromise = LOCAL_DOC_STATE_BY_PARENT.get(parent);\n    if (!statePromise) {\n        const database: RxDatabase = parent.database ? parent.database : parent as any;\n        const collectionName = parent.database ? parent.name : '';\n        throw newRxError('LD8', {\n            database: database.name,\n            collection: collectionName\n        });\n    }\n    return statePromise;\n}\n\n\nexport function createLocalDocumentStorageInstance(\n    storage: RxStorage<any, any>,\n    databaseName: string,\n    collectionName: string,\n    instanceCreationOptions: any,\n    multiInstance: boolean\n) {\n    return storage.createStorageInstance<RxLocalDocumentData>({\n        databaseName: databaseName,\n        /**\n         * Use a different collection name for the local documents instance\n         * so that the local docs can be kept while deleting the normal instance\n         * after migration.\n         */\n        collectionName: getCollectionLocalInstanceName(collectionName),\n        schema: RX_LOCAL_DOCUMENT_SCHEMA,\n        options: instanceCreationOptions,\n        multiInstance\n    });\n}\n\nexport function closeStateByParent(parent: LocalDocumentParent) {\n    const statePromise = LOCAL_DOC_STATE_BY_PARENT.get(parent);\n    if (statePromise) {\n        LOCAL_DOC_STATE_BY_PARENT.delete(parent);\n        return statePromise.then(state => state.storageInstance.close());\n    }\n}\n\nexport async function removeLocalDocumentsStorageInstance(\n    storage: RxStorage<any, any>,\n    databaseName: string,\n    collectionName: string\n) {\n    const storageInstance = await createLocalDocumentStorageInstance(\n        storage,\n        databaseName,\n        collectionName,\n        {},\n        false\n    );\n    await storageInstance.remove();\n}\n\n\nexport function getCollectionLocalInstanceName(collectionName: string): string {\n    return 'plugin-local-documents-' + collectionName;\n}\n\nexport const RX_LOCAL_DOCUMENT_SCHEMA: RxJsonSchema<RxDocumentData<RxLocalDocumentData>> = fillWithDefaultSettings({\n    version: 0,\n    primaryKey: 'id',\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string'\n        },\n        data: {\n            type: 'object',\n            additionalProperties: true\n        }\n    },\n    required: [\n        'id',\n        'data'\n    ]\n});\n"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;IA+HsBA,mC,YAAAA,mC,CAClBC,O,EACAC,Y,EACAC,c;MACF;IAAA,uBACgCC,kCAAkC,CAC5DH,OAD4D,EAE5DC,YAF4D,EAG5DC,cAH4D,EAI5D,EAJ4D,EAK5D,KAL4D,CADlE,iBACQE,eADR;MAAA,uBAQQA,eAAe,CAACC,MAAhB,EARR;IAAA;EASD,C;;;;;;AA3HD,IAAMC,yBAAoF,GAAG,IAAIC,OAAJ,EAA7F;;AAGO,SAASC,2BAAT,CAAqCC,MAArC,EAAwE;EAC3E,IAAMC,QAAoB,GAAGD,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACC,QAAzB,GAAoCD,MAAjE;EACA,IAAMP,cAAc,GAAGO,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACE,IAAzB,GAAgC,EAAvD;;EACA,IAAMC,YAAY,GAAG;IAAA,IAAa;MAAA,uBACFT,kCAAkC,CAC1DO,QAAQ,CAACV,OADiD,EAE1DU,QAAQ,CAACC,IAFiD,EAG1DT,cAH0D,EAI1DQ,QAAQ,CAACG,uBAJiD,EAK1DH,QAAQ,CAACI,aALiD,CADhC,iBAC1BV,eAD0B;QAQ9BA,eAAe,GAAG,IAAAW,0CAAA,EACdL,QADc,EAEdN,eAFc,EAGdY,wBAHc,CAAlB;QAKA,IAAMC,QAAQ,GAAG,IAAIC,kBAAJ,EAAjB;QAEA;AACR;AACA;;QACQ,IAAMC,GAAG,GAAGV,MAAM,CAACW,CAAP,CACPC,IADO,CAEJ,IAAAC,iBAAA,EAAO,UAAAC,EAAE;UAAA,OAAKA,EAAD,CAA2BC,OAA/B;QAAA,CAAT,CAFI,EAIPC,SAJO,CAIG,UAACF,EAAD,EAA4B;UACnC,IAAMG,GAAG,GAAGT,QAAQ,CAACU,GAAT,CAAaJ,EAAE,CAACK,UAAhB,CAAZ;;UACA,IAAIF,GAAJ,EAAS;YACLA,GAAG,CAACG,kBAAJ,CAAuBN,EAAvB;UACH;QACJ,CATO,CAAZ;;QAUAd,MAAM,CAACqB,KAAP,CAAaC,IAAb,CAAkBZ,GAAlB;QAEA;AACR;AACA;;;QAhCsC,uBAiCKT,QAAQ,CAACsB,YAjCd,iBAiCxBC,oBAjCwB;UAkC9B,IAAMC,YAAY,GAAG9B,eAAe,CAAC+B,YAAhB,GAA+BV,SAA/B,CAAyC,UAAAW,SAAS,EAAI;YACvE,IAAMC,eAAuD,GAAG;cAC5DC,EAAE,EAAEF,SAAS,CAACE,EAD8C;cAE5DC,QAAQ,EAAE,KAFkD;cAG5DrC,cAAc,EAAEO,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACE,IAAzB,GAAgC6B,SAHY;cAI5DR,YAAY,EAAEC,oBAJ8C;cAK5DQ,MAAM,EAAEL,SAAS,CAACK,MAAV,CAAiBC,GAAjB,CAAqB,UAAAC,EAAE;gBAAA,OAAI,IAAAC,kDAAA,EAC/B,IAD+B,EAE/BD,EAF+B,EAG/BlC,MAAM,CAACC,QAAP,GAAkBD,MAAlB,GAAkC+B,SAHH,CAAJ;cAAA,CAAvB,CALoD;cAU5DK,aAAa,EAAEnC,QAAQ,CAACoC;YAVoC,CAAhE;YAYApC,QAAQ,CAACqC,KAAT,CAAeV,eAAf;UACH,CAdoB,CAArB;;UAeA5B,MAAM,CAACqB,KAAP,CAAaC,IAAb,CAAkBG,YAAlB;;UAEA,OAAO;YACHxB,QAAQ,EAARA,QADG;YAEHD,MAAM,EAANA,MAFG;YAGHL,eAAe,EAAfA,eAHG;YAIHa,QAAQ,EAARA;UAJG,CAAP;QAnD8B;MAAA;IAyDjC,CAzDoB;MAAA;IAAA;EAAA,GAArB;;EA0DAX,yBAAyB,CAAC0C,GAA1B,CAA8BvC,MAA9B,EAAsCG,YAAtC;AACH;;AAEM,SAASqC,wBAAT,CAAkCxC,MAAlC,EAA4F;EAC/F,IAAMG,YAAY,GAAGN,yBAAyB,CAACqB,GAA1B,CAA8BlB,MAA9B,CAArB;;EACA,IAAI,CAACG,YAAL,EAAmB;IACf,IAAMF,QAAoB,GAAGD,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACC,QAAzB,GAAoCD,MAAjE;IACA,IAAMP,cAAc,GAAGO,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACE,IAAzB,GAAgC,EAAvD;IACA,MAAM,IAAAuC,mBAAA,EAAW,KAAX,EAAkB;MACpBxC,QAAQ,EAAEA,QAAQ,CAACC,IADC;MAEpBwC,UAAU,EAAEjD;IAFQ,CAAlB,CAAN;EAIH;;EACD,OAAOU,YAAP;AACH;;AAGM,SAAST,kCAAT,CACHH,OADG,EAEHC,YAFG,EAGHC,cAHG,EAIHW,uBAJG,EAKHC,aALG,EAML;EACE,OAAOd,OAAO,CAACoD,qBAAR,CAAmD;IACtDnD,YAAY,EAAEA,YADwC;;IAEtD;AACR;AACA;AACA;AACA;IACQC,cAAc,EAAEmD,8BAA8B,CAACnD,cAAD,CAPQ;IAQtDoD,MAAM,EAAEtC,wBAR8C;IAStDuC,OAAO,EAAE1C,uBAT6C;IAUtDC,aAAa,EAAbA;EAVsD,CAAnD,CAAP;AAYH;;AAEM,SAAS0C,kBAAT,CAA4B/C,MAA5B,EAAyD;EAC5D,IAAMG,YAAY,GAAGN,yBAAyB,CAACqB,GAA1B,CAA8BlB,MAA9B,CAArB;;EACA,IAAIG,YAAJ,EAAkB;IACdN,yBAAyB,UAAzB,CAAiCG,MAAjC;IACA,OAAOG,YAAY,CAAC6C,IAAb,CAAkB,UAAAC,KAAK;MAAA,OAAIA,KAAK,CAACtD,eAAN,CAAsBuD,KAAtB,EAAJ;IAAA,CAAvB,CAAP;EACH;AACJ;;AAkBM,SAASN,8BAAT,CAAwCnD,cAAxC,EAAwE;EAC3E,OAAO,4BAA4BA,cAAnC;AACH;;AAEM,IAAMc,wBAA2E,GAAG,IAAA4C,uCAAA,EAAwB;EAC/GC,OAAO,EAAE,CADsG;EAE/GC,UAAU,EAAE,IAFmG;EAG/GC,IAAI,EAAE,QAHyG;EAI/GC,UAAU,EAAE;IACR1B,EAAE,EAAE;MACAyB,IAAI,EAAE;IADN,CADI;IAIRE,IAAI,EAAE;MACFF,IAAI,EAAE,QADJ;MAEFG,oBAAoB,EAAE;IAFpB;EAJE,CAJmG;EAa/GC,QAAQ,EAAE,CACN,IADM,EAEN,MAFM;AAbqG,CAAxB,CAApF"}