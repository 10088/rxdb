{"version":3,"sources":["../../../../../src/plugins/query-builder/mquery/mquery-utils.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA,IAAM,kBAAkB,GAAG,CAAC,WAAD,EAAc,aAAd,EAA6B,WAA7B,CAA3B;AAEA;AACA;AACA;;AACO,SAAS,KAAT,CAAe,EAAf,EAAwB,IAAxB,EAAwC;AAC3C,EAAA,MAAM,CAAC,IAAP,CAAY,IAAZ,EACK,OADL,CACa,UAAA,GAAG,EAAI;AACZ,QAAI,kBAAkB,CAAC,QAAnB,CAA4B,GAA5B,CAAJ,EAAsC;AAClC;AACH;;AACD,QAAI,OAAO,EAAE,CAAC,GAAD,CAAT,KAAmB,WAAvB,EAAoC;AAChC,MAAA,EAAE,CAAC,GAAD,CAAF,GAAU,IAAI,CAAC,GAAD,CAAd;AACH,KAFD,MAEO;AACH,UAAI,QAAQ,CAAC,IAAI,CAAC,GAAD,CAAL,CAAZ,EACI,KAAK,CAAC,EAAE,CAAC,GAAD,CAAH,EAAU,IAAI,CAAC,GAAD,CAAd,CAAL,CADJ,KAGI,EAAE,CAAC,GAAD,CAAF,GAAU,IAAI,CAAC,GAAD,CAAd;AACP;AACJ,GAbL;AAcH;AAED;AACA;AACA;;;AACO,SAAS,QAAT,CAAkB,GAAlB,EAAmF;AACtF,SAAO,sBAAsB,GAAG,CAAC,QAAJ,EAA7B;AACH","file":"mquery-utils.js","sourcesContent":["/**\n * this is copied from\n * @link https://github.com/aheckmann/mquery/blob/master/lib/utils.js\n */\n\n\n/**\n * @link https://github.com/aheckmann/mquery/commit/792e69fd0a7281a0300be5cade5a6d7c1d468ad4\n */\nconst SPECIAL_PROPERTIES = ['__proto__', 'constructor', 'prototype'];\n\n/**\n * Merges 'from' into 'to' without overwriting existing properties.\n */\nexport function merge(to: any, from: any): any {\n    Object.keys(from)\n        .forEach(key => {\n            if (SPECIAL_PROPERTIES.includes(key)) {\n                return;\n            }\n            if (typeof to[key] === 'undefined') {\n                to[key] = from[key];\n            } else {\n                if (isObject(from[key]))\n                    merge(to[key], from[key]);\n                else\n                    to[key] = from[key];\n            }\n        });\n}\n\n/**\n * Determines if `arg` is an object.\n */\nexport function isObject(arg: Object | any[] | String | Function | RegExp | any): boolean {\n    return '[object Object]' === arg.toString();\n}\n"]}