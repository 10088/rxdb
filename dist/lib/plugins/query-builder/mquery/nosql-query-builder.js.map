{"version":3,"file":"nosql-query-builder.js","names":["NoSqlQueryBuilderClass","mangoQuery","options","_conditions","_fields","queryBuilder","selector","find","limit","skip","sort","forEach","s","where","_path","_val","arguments","length","type","Array","isArray","merge","path","equals","val","_ensurePath","eq","or","array","$or","push","apply","nor","$nor","and","$and","mod","slice","conds","$mod","exists","$exists","elemMatch","_criteria","fn","criteria","$elemMatch","arg","len","i","_pushArr","split","field","ascend","substring","keys","Object","args","source","canMerge","_distinct","method","toJSON","query","mQuerySortToRxDBSort","entries","map","k","v","direction","part","OTHER_MANGO_ATTRIBUTES","prototype","OTHER_MANGO_OPERATORS","$conditional","opts","value","$meta","String","toLowerCase","test","valueStr","toString","replace","parseInt","createQueryBuilder"],"sources":["../../../../../src/plugins/query-builder/mquery/nosql-query-builder.ts"],"sourcesContent":["/**\n * this is based on\n * @link https://github.com/aheckmann/mquery/blob/master/lib/mquery.js\n */\nimport {\n    isObject,\n    merge\n} from './mquery-utils';\nimport {\n    newRxTypeError,\n    newRxError\n} from '../../../rx-error';\nimport type {\n    MangoQuery,\n    MangoQuerySelector,\n    MangoQuerySortPart,\n    MangoQuerySortDirection\n} from '../../../types';\n\n\ndeclare type MQueryOptions = {\n    limit?: number;\n    skip?: number;\n    sort?: any;\n};\n\nexport class NoSqlQueryBuilderClass<DocType> {\n\n    public options: MQueryOptions = {};\n    public _conditions: MangoQuerySelector<DocType> = {};\n    public _fields: any = {};\n    public _path?: any;\n    private _distinct: any;\n\n    /**\n     * MQuery constructor used for building queries.\n     *\n     * ####Example:\n     *     var query = new MQuery({ name: 'mquery' });\n     *     query.where('age').gte(21).exec(callback);\n     *\n     */\n    constructor(\n        mangoQuery?: MangoQuery<DocType>\n    ) {\n        if (mangoQuery) {\n            const queryBuilder: NoSqlQueryBuilder<DocType> = this as any;\n\n            if (mangoQuery.selector) {\n                queryBuilder.find(mangoQuery.selector);\n            }\n            if (mangoQuery.limit) {\n                queryBuilder.limit(mangoQuery.limit);\n            }\n            if (mangoQuery.skip) {\n                queryBuilder.skip(mangoQuery.skip);\n            }\n            if (mangoQuery.sort) {\n                mangoQuery.sort.forEach(s => queryBuilder.sort(s));\n            }\n        }\n    }\n\n    /**\n     * Specifies a `path` for use with chaining.\n     */\n    where(_path: string, _val?: MangoQuerySelector<DocType>): NoSqlQueryBuilder<DocType> {\n        if (!arguments.length) return this as any;\n        const type = typeof arguments[0];\n        if ('string' === type) {\n            this._path = arguments[0];\n            if (2 === arguments.length) {\n                this._conditions[this._path] = arguments[1];\n            }\n            return this as any;\n        }\n\n        if ('object' === type && !Array.isArray(arguments[0])) {\n            return this.merge(arguments[0]);\n        }\n\n        throw newRxTypeError('MQ1', {\n            path: arguments[0]\n        });\n    }\n\n    /**\n     * Specifies the complementary comparison value for paths specified with `where()`\n     * ####Example\n     *     User.where('age').equals(49);\n     */\n    equals(val: any): NoSqlQueryBuilder<DocType> {\n        this._ensurePath('equals');\n        const path = this._path;\n        this._conditions[path] = val;\n        return this as any;\n    }\n\n    /**\n     * Specifies the complementary comparison value for paths specified with `where()`\n     * This is alias of `equals`\n     */\n    eq(val: any): NoSqlQueryBuilder<DocType> {\n        this._ensurePath('eq');\n        const path = this._path;\n        this._conditions[path] = val;\n        return this as any;\n    }\n\n    /**\n     * Specifies arguments for an `$or` condition.\n     * ####Example\n     *     query.or([{ color: 'red' }, { status: 'emergency' }])\n     */\n    or(array: any[]): NoSqlQueryBuilder<DocType> {\n        const or = this._conditions.$or || (this._conditions.$or = []);\n        if (!Array.isArray(array)) array = [array];\n        or.push.apply(or, array);\n        return this as any;\n    }\n\n    /**\n     * Specifies arguments for a `$nor` condition.\n     * ####Example\n     *     query.nor([{ color: 'green' }, { status: 'ok' }])\n     */\n    nor(array: any[]): NoSqlQueryBuilder<DocType> {\n        const nor = this._conditions.$nor || (this._conditions.$nor = []);\n        if (!Array.isArray(array)) array = [array];\n        nor.push.apply(nor, array);\n        return this as any;\n    }\n\n    /**\n     * Specifies arguments for a `$and` condition.\n     * ####Example\n     *     query.and([{ color: 'green' }, { status: 'ok' }])\n     * @see $and http://docs.mongodb.org/manual/reference/operator/and/\n     */\n    and(array: any[]): NoSqlQueryBuilder<DocType> {\n        const and = this._conditions.$and || (this._conditions.$and = []);\n        if (!Array.isArray(array)) array = [array];\n        and.push.apply(and, array);\n        return this as any;\n    }\n\n    /**\n     * Specifies a `$mod` condition\n     */\n    mod(_path: string, _val: number): NoSqlQueryBuilder<DocType> {\n        let val;\n        let path;\n\n        if (1 === arguments.length) {\n            this._ensurePath('mod');\n            val = arguments[0];\n            path = this._path;\n        } else if (2 === arguments.length && !Array.isArray(arguments[1])) {\n            this._ensurePath('mod');\n            val = (arguments as any).slice();\n            path = this._path;\n        } else if (3 === arguments.length) {\n            val = (arguments as any).slice(1);\n            path = arguments[0];\n        } else {\n            val = arguments[1];\n            path = arguments[0];\n        }\n\n        const conds = this._conditions[path] || (this._conditions[path] = {});\n        conds.$mod = val;\n        return this as any;\n    }\n\n    /**\n     * Specifies an `$exists` condition\n     * ####Example\n     *     // { name: { $exists: true }}\n     *     Thing.where('name').exists()\n     *     Thing.where('name').exists(true)\n     *     Thing.find().exists('name')\n     */\n    exists(_path: string, _val: number): NoSqlQueryBuilder<DocType> {\n        let path;\n        let val;\n        if (0 === arguments.length) {\n            this._ensurePath('exists');\n            path = this._path;\n            val = true;\n        } else if (1 === arguments.length) {\n            if ('boolean' === typeof arguments[0]) {\n                this._ensurePath('exists');\n                path = this._path;\n                val = arguments[0];\n            } else {\n                path = arguments[0];\n                val = true;\n            }\n        } else if (2 === arguments.length) {\n            path = arguments[0];\n            val = arguments[1];\n        }\n\n        const conds = this._conditions[path] || (this._conditions[path] = {});\n        conds.$exists = val;\n        return this as any;\n    }\n\n    /**\n     * Specifies an `$elemMatch` condition\n     * ####Example\n     *     query.elemMatch('comment', { author: 'autobot', votes: {$gte: 5}})\n     *     query.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})\n     *     query.elemMatch('comment', function (elem) {\n     *       elem.where('author').equals('autobot');\n     *       elem.where('votes').gte(5);\n     *     })\n     *     query.where('comment').elemMatch(function (elem) {\n     *       elem.where({ author: 'autobot' });\n     *       elem.where('votes').gte(5);\n     *     })\n     */\n    elemMatch(_path: string, _criteria: any): NoSqlQueryBuilder<DocType> {\n        if (null === arguments[0])\n            throw newRxTypeError('MQ2');\n\n        let fn;\n        let path;\n        let criteria;\n\n        if ('function' === typeof arguments[0]) {\n            this._ensurePath('elemMatch');\n            path = this._path;\n            fn = arguments[0];\n        } else if (isObject(arguments[0])) {\n            this._ensurePath('elemMatch');\n            path = this._path;\n            criteria = arguments[0];\n        } else if ('function' === typeof arguments[1]) {\n            path = arguments[0];\n            fn = arguments[1];\n        } else if (arguments[1] && isObject(arguments[1])) {\n            path = arguments[0];\n            criteria = arguments[1];\n        } else\n            throw newRxTypeError('MQ2');\n\n        if (fn) {\n            criteria = new NoSqlQueryBuilderClass;\n            fn(criteria);\n            criteria = criteria._conditions;\n        }\n\n        const conds = this._conditions[path] || (this._conditions[path] = {});\n        conds.$elemMatch = criteria;\n        return this as any;\n    }\n\n    /**\n     * Sets the sort order\n     * If an object is passed, values allowed are 'asc', 'desc', 'ascending', 'descending', 1, and -1.\n     * If a string is passed, it must be a space delimited list of path names.\n     * The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending.\n     * ####Example\n     *     query.sort({ field: 'asc', test: -1 });\n     *     query.sort('field -test');\n     *     query.sort([['field', 1], ['test', -1]]);\n     */\n    sort(arg: any): NoSqlQueryBuilder<DocType> {\n        if (!arg) return this as any;\n        let len;\n        const type = typeof arg;\n        // .sort([['field', 1], ['test', -1]])\n        if (Array.isArray(arg)) {\n            len = arg.length;\n            for (let i = 0; i < arg.length; ++i) {\n                _pushArr(this.options, arg[i][0], arg[i][1]);\n            }\n\n            return this as any;\n        }\n\n        // .sort('field -test')\n        if (1 === arguments.length && 'string' === type) {\n            arg = arg.split(/\\s+/);\n            len = arg.length;\n            for (let i = 0; i < len; ++i) {\n                let field = arg[i];\n                if (!field) continue;\n                const ascend = '-' === field[0] ? -1 : 1;\n                if (ascend === -1) field = field.substring(1);\n                push(this.options, field, ascend);\n            }\n\n            return this as any;\n        }\n\n        // .sort({ field: 1, test: -1 })\n        if (isObject(arg)) {\n            const keys = Object.keys(arg);\n            keys.forEach(field => push(this.options, field, arg[field]));\n            return this as any;\n        }\n\n        throw newRxTypeError('MQ3', {\n            args: arguments\n        });\n    }\n\n    /**\n     * Merges another MQuery or conditions object into this one.\n     *\n     * When a MQuery is passed, conditions, field selection and options are merged.\n     *\n     */\n    merge(source: any): NoSqlQueryBuilder<DocType> {\n        if (!source) {\n            return this as any;\n        }\n\n        if (!canMerge(source)) {\n            throw newRxTypeError('MQ4', {\n                source\n            });\n        }\n\n        if (source instanceof NoSqlQueryBuilderClass) {\n            // if source has a feature, apply it to ourselves\n\n            if (source._conditions)\n                merge(this._conditions, source._conditions);\n\n            if (source._fields) {\n                if (!this._fields) this._fields = {};\n                merge(this._fields, source._fields);\n            }\n\n            if (source.options) {\n                if (!this.options) this.options = {};\n                merge(this.options, source.options);\n            }\n\n            if (source._distinct)\n                this._distinct = source._distinct;\n\n            return this as any;\n        }\n\n        // plain object\n        merge(this._conditions, source);\n\n        return this as any;\n    }\n\n    /**\n     * Finds documents.\n     * ####Example\n     *     query.find()\n     *     query.find({ name: 'Burning Lights' })\n     */\n    find(criteria: any): NoSqlQueryBuilder<DocType> {\n        if (canMerge(criteria)) {\n            this.merge(criteria);\n        }\n\n        return this as any;\n    }\n\n    /**\n     * Make sure _path is set.\n     *\n     * @parmam {String} method\n     */\n    _ensurePath(method: any) {\n        if (!this._path) {\n            throw newRxError('MQ5', {\n                method\n            });\n        }\n    }\n\n    toJSON(): {\n        query: MangoQuery<DocType>,\n        path?: string\n    } {\n        const query: MangoQuery<DocType> = {\n            selector: this._conditions,\n        };\n\n        if (this.options.skip) {\n            query.skip = this.options.skip;\n        }\n        if (this.options.limit) {\n            query.limit = this.options.limit;\n        }\n        if (this.options.sort) {\n            query.sort = mQuerySortToRxDBSort(this.options.sort);\n        }\n\n        return {\n            query,\n            path: this._path\n        };\n    }\n}\n\nexport function mQuerySortToRxDBSort<DocType>(\n    sort: { [k: string]: 1 | -1 }\n): MangoQuerySortPart<DocType>[] {\n    return Object.entries(sort).map(([k, v]) => {\n        const direction: MangoQuerySortDirection = v === 1 ? 'asc' : 'desc';\n        const part: MangoQuerySortPart<DocType> = { [k]: direction } as any;\n        return part;\n    });\n}\n\n/**\n * Because some prototype-methods are generated,\n * we have to define the type of NoSqlQueryBuilder here\n */\n\nexport interface NoSqlQueryBuilder<DocType = any> extends NoSqlQueryBuilderClass<DocType> {\n    maxScan: ReturnSelfNumberFunction<DocType>;\n    batchSize: ReturnSelfNumberFunction<DocType>;\n    limit: ReturnSelfNumberFunction<DocType>;\n    skip: ReturnSelfNumberFunction<DocType>;\n    comment: ReturnSelfFunction<DocType>;\n\n    gt: ReturnSelfFunction<DocType>;\n    gte: ReturnSelfFunction<DocType>;\n    lt: ReturnSelfFunction<DocType>;\n    lte: ReturnSelfFunction<DocType>;\n    ne: ReturnSelfFunction<DocType>;\n    in: ReturnSelfFunction<DocType>;\n    nin: ReturnSelfFunction<DocType>;\n    all: ReturnSelfFunction<DocType>;\n    regex: ReturnSelfFunction<DocType>;\n    size: ReturnSelfFunction<DocType>;\n\n}\n\ndeclare type ReturnSelfFunction<DocType> = (v: any) => NoSqlQueryBuilder<DocType>;\ndeclare type ReturnSelfNumberFunction<DocType> = (v: number | null) => NoSqlQueryBuilder<DocType>;\n\n/**\n * limit, skip, maxScan, batchSize, comment\n *\n * Sets these associated options.\n *\n *     query.comment('feed query');\n */\nexport const OTHER_MANGO_ATTRIBUTES = ['limit', 'skip', 'maxScan', 'batchSize', 'comment'];\nOTHER_MANGO_ATTRIBUTES.forEach(function (method) {\n    (NoSqlQueryBuilderClass.prototype as any)[method] = function (v: any) {\n        this.options[method] = v;\n        return this;\n    };\n});\n\n\n/**\n * gt, gte, lt, lte, ne, in, nin, all, regex, size, maxDistance\n *\n *     Thing.where('type').nin(array)\n */\nexport const OTHER_MANGO_OPERATORS = [\n    'gt', 'gte', 'lt', 'lte', 'ne',\n    'in', 'nin', 'all', 'regex', 'size'\n];\nOTHER_MANGO_OPERATORS.forEach(function ($conditional) {\n    (NoSqlQueryBuilderClass.prototype as any)[$conditional] = function () {\n        let path;\n        let val;\n        if (1 === arguments.length) {\n            this._ensurePath($conditional);\n            val = arguments[0];\n            path = this._path;\n        } else {\n            val = arguments[1];\n            path = arguments[0];\n        }\n\n        const conds = this._conditions[path] === null || typeof this._conditions[path] === 'object' ?\n            this._conditions[path] :\n            (this._conditions[path] = {});\n        conds['$' + $conditional] = val;\n        return this;\n    };\n});\n\n\nfunction push(opts: any, field: string, value: any) {\n    if (Array.isArray(opts.sort)) {\n        throw newRxTypeError('MQ6', {\n            opts,\n            field,\n            value\n        });\n    }\n\n    if (value && value.$meta) {\n        const sort = opts.sort || (opts.sort = {});\n        sort[field] = {\n            $meta: value.$meta\n        };\n        return;\n    }\n\n    const val = String(value || 1).toLowerCase();\n    if (!/^(?:ascending|asc|descending|desc|1|-1)$/.test(val)) {\n        if (Array.isArray(value)) value = '[' + value + ']';\n        throw newRxTypeError('MQ7', {\n            field,\n            value\n        });\n    }\n    // store `sort` in a sane format\n    const s = opts.sort || (opts.sort = {});\n    const valueStr = value.toString()\n        .replace('asc', '1')\n        .replace('ascending', '1')\n        .replace('desc', '-1')\n        .replace('descending', '-1');\n    s[field] = parseInt(valueStr, 10);\n}\n\nfunction _pushArr(opts: any, field: string, value: any) {\n    opts.sort = opts.sort || [];\n    if (!Array.isArray(opts.sort)) {\n        throw newRxTypeError('MQ8', {\n            opts,\n            field,\n            value\n        });\n    }\n\n    /*    const valueStr = value.toString()\n            .replace('asc', '1')\n            .replace('ascending', '1')\n            .replace('desc', '-1')\n            .replace('descending', '-1');*/\n    opts.sort.push([field, value]);\n}\n\n\n/**\n * Determines if `conds` can be merged using `mquery().merge()`\n */\nexport function canMerge(conds: any): boolean {\n    return conds instanceof NoSqlQueryBuilderClass || isObject(conds);\n}\n\n\nexport function createQueryBuilder<DocType>(query?: MangoQuery<DocType>): NoSqlQueryBuilder<DocType> {\n    return new NoSqlQueryBuilderClass(query) as NoSqlQueryBuilder<DocType>;\n}\n"],"mappings":"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"}