{"version":3,"file":"file-util.js","names":["ensureFolderExists","folderPath","fs","existsSync","mkdirSync","recursive","clearFolder","deleteFolder","rmdirSync","prepareFolders","database","options","directory","metaLoc","metaFileLocation","currentTime","now","metaData","createdAt","updatedAt","collectionStates","writeFileSync","JSON","stringify","Object","keys","collections","forEach","collectionName","path","join","writeToFile","location","data","blobToString","Promise","res","rej","writeFile","err","writeJsonToFile","getMeta","loc","readFile","metaContent","parse","setMeta","meta","documentFolder","docId"],"sources":["../../../../src/plugins/backup/file-util.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport {\n    BackupMetaFileContent,\n    BackupOptions,\n    RxDatabase\n} from '../../types';\nimport { blobToString, now } from '../../plugins/utils';\n\n/**\n * ensure that the given folder exists\n */\nexport function ensureFolderExists(folderPath: string): void {\n    if (!fs.existsSync(folderPath)) {\n        fs.mkdirSync(folderPath, { recursive: true });\n    }\n}\n\n/**\n * deletes and recreates the folder\n */\nexport function clearFolder(folderPath: string): void {\n    deleteFolder(folderPath);\n    ensureFolderExists(folderPath);\n}\n\nexport function deleteFolder(folderPath: string): void {\n    // only remove if exists to not raise warning\n    if (fs.existsSync(folderPath)) {\n        fs.rmdirSync(folderPath, { recursive: true });\n    }\n}\n\nexport function prepareFolders(\n    database: RxDatabase,\n    options: BackupOptions\n) {\n    ensureFolderExists(options.directory);\n\n    const metaLoc = metaFileLocation(options);\n\n    if (!fs.existsSync(metaLoc)) {\n        const currentTime = now();\n        const metaData: BackupMetaFileContent = {\n            createdAt: currentTime,\n            updatedAt: currentTime,\n            collectionStates: {}\n        };\n        fs.writeFileSync(metaLoc, JSON.stringify(metaData), 'utf-8');\n    }\n\n    Object.keys(database.collections).forEach(collectionName => {\n        ensureFolderExists(\n            path.join(\n                options.directory,\n                collectionName\n            )\n        );\n    });\n}\n\nexport async function writeToFile(\n    location: string,\n    data: string | Blob\n): Promise<void> {\n    if (typeof data !== 'string') {\n        data = await blobToString(data);\n    }\n    return new Promise(function (res, rej) {\n        fs.writeFile(\n            location,\n            data as string,\n            'utf-8',\n            (err) => {\n                if (err) {\n                    rej(err);\n                } else {\n                    res();\n                }\n            }\n        );\n    });\n}\n\nexport function writeJsonToFile(\n    location: string,\n    data: any\n): Promise<void> {\n    return writeToFile(\n        location,\n        JSON.stringify(data)\n    );\n}\n\nexport function metaFileLocation(options: BackupOptions): string {\n    return path.join(\n        options.directory,\n        'backup_meta.json'\n    );\n}\n\nexport function getMeta(options: BackupOptions): Promise<BackupMetaFileContent> {\n    const loc = metaFileLocation(options);\n    return new Promise((res, rej) => {\n        fs.readFile(loc, 'utf-8', (err, data) => {\n            if (err) {\n                rej(err);\n            } else {\n                const metaContent = JSON.parse(data);\n                res(metaContent);\n            }\n        });\n    });\n}\n\nexport function setMeta(\n    options: BackupOptions,\n    meta: BackupMetaFileContent\n): Promise<void> {\n    const loc = metaFileLocation(options);\n    return writeJsonToFile(loc, meta);\n}\n\nexport function documentFolder(\n    options: BackupOptions,\n    docId: string\n): string {\n    return path.join(\n        options.directory,\n        docId\n    );\n}\n"],"mappings":"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"}