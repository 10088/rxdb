{"version":3,"sources":["../../../src/plugins/local-documents.ts"],"names":[],"mappings":"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","file":"local-documents.js","sourcesContent":["import objectPath from 'object-path';\n\nimport {\n    createRxDocumentConstructor,\n    basePrototype\n} from '../rx-document';\nimport {\n    createDocCache\n} from '../doc-cache';\nimport {\n    newRxError,\n    newRxTypeError\n} from '../rx-error';\nimport {\n    flatClone,\n    getFromMapOrThrow\n} from '../util';\n\nimport type {\n    RxChangeEvent,\n    RxCollection,\n    RxDatabase,\n    RxDocument,\n    RxDocumentWriteData,\n    RxLocalDocumentData,\n    RxPlugin,\n    RxStorageKeyObjectInstance\n} from '../types';\n\nimport {\n    isRxDatabase\n} from '../rx-database';\nimport {\n    isRxCollection\n} from '../rx-collection';\n\nimport {\n    filter,\n    map,\n    distinctUntilChanged,\n    startWith,\n    mergeMap\n} from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport {\n    findLocalDocument,\n    writeSingleLocal\n} from '../rx-storage-helper';\n\nimport {\n    overwritable\n} from '../overwritable';\n\nconst DOC_CACHE_BY_PARENT = new WeakMap();\nconst _getDocCache = (parent: any) => {\n    if (!DOC_CACHE_BY_PARENT.has(parent)) {\n        DOC_CACHE_BY_PARENT.set(\n            parent,\n            createDocCache()\n        );\n    }\n    return DOC_CACHE_BY_PARENT.get(parent);\n};\nconst CHANGE_SUB_BY_PARENT = new WeakMap();\nconst _getChangeSub = (parent: any) => {\n    if (!CHANGE_SUB_BY_PARENT.has(parent)) {\n        const sub = parent.$\n            .pipe(\n                filter(cE => (cE as RxChangeEvent<any>).isLocal)\n            )\n            .subscribe((cE: RxChangeEvent<any>) => {\n                const docCache = _getDocCache(parent);\n                const doc = docCache.get(cE.documentId);\n\n                if (doc) {\n                    doc._handleChangeEvent(cE);\n                }\n            });\n        parent._subs.push(sub);\n        CHANGE_SUB_BY_PARENT.set(\n            parent,\n            sub\n        );\n    }\n    return CHANGE_SUB_BY_PARENT.get(parent);\n};\n\nconst RxDocumentParent = createRxDocumentConstructor() as any;\nexport class RxLocalDocument extends RxDocumentParent {\n    constructor(\n        public readonly id: string,\n        jsonData: any,\n        public readonly parent: RxCollection | RxDatabase\n    ) {\n        super(null, jsonData);\n    }\n}\n\nfunction _getKeyObjectStorageInstanceByParent(parent: any): RxStorageKeyObjectInstance<any, any> {\n    if (isRxDatabase(parent)) {\n        return (parent as RxDatabase<{}>).localDocumentsStore; // database\n    } else {\n        return (parent as RxCollection).localDocumentsStore; // collection\n    }\n}\n\nconst RxLocalDocumentPrototype: any = {\n    get isLocal() {\n        return true;\n    },\n\n    //\n    // overwrites\n    //\n\n    _handleChangeEvent(\n        this: any,\n        changeEvent: RxChangeEvent\n    ) {\n        if (changeEvent.documentId !== this.primary) {\n            return;\n        }\n        switch (changeEvent.operation) {\n            case 'UPDATE':\n                const newData = changeEvent.documentData;\n                this._dataSync$.next(newData);\n                break;\n            case 'DELETE':\n                // remove from docCache to assure new upserted RxDocuments will be a new instance\n                const docCache = _getDocCache(this.parent);\n                docCache.delete(this.primary);\n                this._isDeleted$.next(true);\n                break;\n        }\n    },\n\n    get allAttachments$() {\n        // this is overwritten here because we cannot re-set getters on the prototype\n        throw newRxError('LD1', {\n            document: this\n        });\n    },\n    get primaryPath() {\n        return 'id';\n    },\n    get primary() {\n        return this.id;\n    },\n    get $() {\n        return (this as RxDocument)._dataSync$.asObservable();\n    },\n    $emit(this: any, changeEvent: RxChangeEvent) {\n        return this.parent.$emit(changeEvent);\n    },\n    get(this: RxDocument, objPath: string) {\n        if (!this._data) {\n            return undefined;\n        }\n        if (typeof objPath !== 'string') {\n            throw newRxTypeError('LD2', {\n                objPath\n            });\n        }\n\n        let valueObj = objectPath.get(this._data, objPath);\n        valueObj = overwritable.deepFreezeWhenDevMode(valueObj);\n        return valueObj;\n    },\n    get$(this: RxDocument, path: string) {\n        if (path.includes('.item.')) {\n            throw newRxError('LD3', {\n                path\n            });\n        }\n        if (path === this.primaryPath)\n            throw newRxError('LD4');\n\n        return this._dataSync$\n            .pipe(\n                map(data => objectPath.get(data, path)),\n                distinctUntilChanged()\n            );\n    },\n    set(this: RxDocument, objPath: string, value: any) {\n        if (!value) {\n            // object path not set, overwrite whole data\n            const data: any = flatClone(objPath);\n            data._rev = this._data._rev;\n            this._data = data;\n            return this;\n        }\n        if (objPath === '_id') {\n            throw newRxError('LD5', {\n                objPath,\n                value\n            });\n        }\n        if (Object.is(this.get(objPath), value)) {\n            return;\n        }\n        objectPath.set(this._data, objPath, value);\n        return this;\n    },\n    _saveData(this: RxLocalDocument, newData: RxLocalDocumentData) {\n        const oldData = this._dataSync$.getValue();\n        const storageInstance = _getKeyObjectStorageInstanceByParent(this.parent);\n        newData._id = this.id;\n\n        return storageInstance.bulkWrite([{\n            previous: oldData,\n            document: newData\n        }])\n            .then((res) => {\n                const docResult = res.success.get(newData._id);\n                if (!docResult) {\n                    throw getFromMapOrThrow(res.error, newData._id);\n                }\n                newData._rev = docResult._rev;\n            });\n    },\n\n    remove(this: any): Promise<void> {\n        const storageInstance = _getKeyObjectStorageInstanceByParent(this.parent);\n        const writeData: RxDocumentWriteData<{ _id: string }> = {\n            _id: this.id,\n            _deleted: true,\n            _attachments: {}\n        };\n        return writeSingleLocal(storageInstance, {\n            previous: this._data,\n            document: writeData\n        })\n            .then(() => {\n                _getDocCache(this.parent).delete(this.id);\n            });\n    }\n};\n\n\nlet INIT_DONE = false;\nconst _init = () => {\n    if (INIT_DONE) return;\n    else INIT_DONE = true;\n\n    // add functions of RxDocument\n    const docBaseProto = basePrototype;\n    const props = Object.getOwnPropertyNames(docBaseProto);\n    props.forEach(key => {\n        const exists = Object.getOwnPropertyDescriptor(RxLocalDocumentPrototype, key);\n        if (exists) return;\n        const desc: any = Object.getOwnPropertyDescriptor(docBaseProto, key);\n        Object.defineProperty(RxLocalDocumentPrototype, key, desc);\n    });\n\n\n    /**\n     * overwrite things that not work on local documents\n     * with throwing function\n     */\n    const getThrowingFun = (k: string) => () => {\n        throw newRxError('LD6', {\n            functionName: k\n        });\n    };\n    [\n        'populate',\n        'update',\n        'putAttachment',\n        'getAttachment',\n        'allAttachments'\n    ].forEach((k: string) => RxLocalDocumentPrototype[k] = getThrowingFun(k));\n};\n\nRxLocalDocument.create = (id: string, data: any, parent: any) => {\n    _init();\n    _getChangeSub(parent);\n\n    const newDoc = new RxLocalDocument(id, data, parent);\n    newDoc.__proto__ = RxLocalDocumentPrototype;\n    _getDocCache(parent).set(id, newDoc);\n    return newDoc;\n};\n\n/**\n * save the local-document-data\n * throws if already exists\n */\nfunction insertLocal(\n    this: RxDatabase | RxCollection,\n    id: string,\n    docData: any\n): Promise<RxLocalDocument> {\n    if (isRxCollection(this) && this._isInMemory) {\n        return (this as any).parentCollection.insertLocal(id, docData);\n    }\n\n    return (this as any).getLocal(id)\n        .then((existing: any) => {\n\n            if (existing) {\n                throw newRxError('LD7', {\n                    id,\n                    data: docData\n                });\n            }\n\n            // create new one\n            docData = flatClone(docData);\n            docData._id = id;\n\n            return writeSingleLocal(\n                _getKeyObjectStorageInstanceByParent(this),\n                {\n                    document: docData\n                }\n            ).then(res => {\n                docData._rev = res._rev;\n                const newDoc = RxLocalDocument.create(id, docData, this);\n                return newDoc;\n            });\n        });\n}\n\n/**\n * save the local-document-data\n * overwrites existing if exists\n */\nfunction upsertLocal(this: any, id: string, data: any): Promise<RxLocalDocument> {\n    if (isRxCollection(this) && this._isInMemory) {\n        return this._parentCollection.upsertLocal(id, data);\n    }\n\n    return this.getLocal(id)\n        .then((existing: RxDocument) => {\n            if (!existing) {\n                // create new one\n                const docPromise = this.insertLocal(id, data);\n                return docPromise;\n            } else {\n                // update existing\n                data._rev = existing._data._rev;\n                return existing.atomicUpdate(() => data).then(() => existing);\n            }\n        });\n}\n\nfunction getLocal(this: any, id: string): Promise<RxLocalDocument | null> {\n    if (isRxCollection(this) && this._isInMemory) {\n        return this.parentCollection.getLocal(id);\n    }\n\n    const storageInstance = _getKeyObjectStorageInstanceByParent(this);\n    const docCache = _getDocCache(this);\n\n    // check in doc-cache\n    const found = docCache.get(id);\n    if (found) {\n        return Promise.resolve(found);\n    }\n\n    // if not found, check in storage instance\n    return findLocalDocument(storageInstance, id)\n        .then((docData) => {\n            if (!docData) {\n                return null;\n            }\n            const doc = RxLocalDocument.create(id, docData, this);\n            return doc;\n        })\n        .catch(() => null);\n}\n\nfunction getLocal$(this: RxCollection, id: string): Observable<RxLocalDocument | null> {\n    return this.$.pipe(\n        startWith(null),\n        mergeMap(async (cE: RxChangeEvent | null) => {\n            if (cE) {\n                return {\n                    changeEvent: cE\n                };\n            } else {\n                const doc = await this.getLocal(id);\n                return {\n                    doc: doc\n                };\n            }\n        }),\n        mergeMap(async (changeEventOrDoc) => {\n            if (changeEventOrDoc.changeEvent) {\n                const cE = changeEventOrDoc.changeEvent;\n                if (!cE.isLocal || cE.documentId !== id) {\n                    return {\n                        use: false\n                    };\n                } else {\n                    const doc = await this.getLocal(id);\n                    return {\n                        use: true,\n                        doc: doc\n                    };\n                }\n            } else {\n                return {\n                    use: true,\n                    doc: changeEventOrDoc.doc\n                };\n            }\n        }),\n        filter(filterFlagged => filterFlagged.use),\n        map(filterFlagged => {\n            return filterFlagged.doc;\n        })\n    );\n}\n\nexport const RxDBLocalDocumentsPlugin: RxPlugin = {\n    name: 'local-documents',\n    rxdb: true,\n    prototypes: {\n        RxCollection: (proto: any) => {\n            proto.insertLocal = insertLocal;\n            proto.upsertLocal = upsertLocal;\n            proto.getLocal = getLocal;\n            proto.getLocal$ = getLocal$;\n        },\n        RxDatabase: (proto: any) => {\n            proto.insertLocal = insertLocal;\n            proto.upsertLocal = upsertLocal;\n            proto.getLocal = getLocal;\n            proto.getLocal$ = getLocal$;\n        }\n    },\n    overwritable: {}\n};\n"]}