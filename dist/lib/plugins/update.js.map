{"version":3,"sources":["../../../src/plugins/update.ts"],"names":[],"mappings":";;;;;;;;;;;;AAKA;;AALA;AACA;AACA;AACA;AACA;AAQO,SAAS,MAAT,CAAkC,SAAlC,EAAkD;AACrD,MAAM,UAAU,GAAG,KAAK,KAAxB;AACA,MAAM,UAAU,GAAG,0BAAS,UAAT,EAAqB,SAArB,CAAnB;AAEA,SAAO,KAAK,SAAL,CAAe,UAAf,EAA2B,UAA3B,CAAP;AACH;;AAEM,SAAS,aAAT,CAEH,SAFG,EAGa;AAChB,SAAO,KAAK,IAAL,GACF,IADE,CACG,UAAA,IAAI,EAAI;AACV,QAAI,CAAC,IAAL,EAAW;AACP,aAAO,IAAP;AACH;;AACD,QAAI,KAAK,CAAC,OAAN,CAAc,IAAd,CAAJ,EAAyB;AACrB,aAAO,OAAO,CAAC,GAAR,CACH,IAAI,CAAC,GAAL,CAAS,UAAA,GAAG;AAAA,eAAI,GAAG,CAAC,MAAJ,CAAW,SAAX,CAAJ;AAAA,OAAZ,CADG,EAEL,IAFK,CAEA;AAAA,eAAM,IAAN;AAAA,OAFA,CAAP;AAGH,KAJD,MAIO;AACH;AACA,aAAO,IAAI,CAAC,MAAL,CAAY,SAAZ,EAAuB,IAAvB,CAA4B;AAAA,eAAM,IAAN;AAAA,OAA5B,CAAP;AACH;AACJ,GAbE,CAAP;AAcH;;AAGM,IAAM,IAAI,GAAG,IAAb;;AACA,IAAM,UAAU,GAAG;AACtB,EAAA,UAAU,EAAE,oBAAC,KAAD,EAAgB;AACxB,IAAA,KAAK,CAAC,MAAN,GAAe,MAAf;AACH,GAHqB;AAItB,EAAA,OAAO,EAAE,iBAAC,KAAD,EAAgB;AACrB,IAAA,KAAK,CAAC,MAAN,GAAe,aAAf;AACH;AANqB,CAAnB;;AASA,IAAM,gBAA0B,GAAG;AACtC,EAAA,IAAI,EAAE,QADgC;AAEtC,EAAA,IAAI,EAAJ,IAFsC;AAGtC,EAAA,UAAU,EAAV;AAHsC,CAAnC","file":"update.js","sourcesContent":["/**\n * this plugin allows delta-updates with mongo-like-syntax\n * It's using modifyjs internally\n * @link https://github.com/lgandecki/modifyjs\n */\nimport modifyjs from 'modifyjs';\nimport type {\n    RxDocument,\n    RxQuery,\n    RxPlugin\n} from '../types';\n\nexport function update(this: RxDocument, updateObj: any) {\n    const oldDocData = this._data;\n    const newDocData = modifyjs(oldDocData, updateObj);\n\n    return this._saveData(newDocData, oldDocData);\n}\n\nexport function RxQueryUpdate(\n    this: RxQuery,\n    updateObj: any\n    ): Promise<any> {\n    return this.exec()\n        .then(docs => {\n            if (!docs) {\n                return null;\n            }\n            if (Array.isArray(docs)) {\n                return Promise.all(\n                    docs.map(doc => doc.update(updateObj))\n                ).then(() => docs);\n            } else {\n                // via findOne()\n                return docs.update(updateObj).then(() => docs);\n            }\n        });\n}\n\n\nexport const rxdb = true;\nexport const prototypes = {\n    RxDocument: (proto: any) => {\n        proto.update = update;\n    },\n    RxQuery: (proto: any) => {\n        proto.update = RxQueryUpdate;\n    }\n};\n\nexport const RxDBUpdatePlugin: RxPlugin = {\n    name: 'update',\n    rxdb,\n    prototypes\n};\n"]}