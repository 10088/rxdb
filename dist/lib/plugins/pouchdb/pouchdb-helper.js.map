{"version":3,"sources":["../../../../src/plugins/pouchdb/pouchdb-helper.ts"],"names":["writeAttachmentsToAttachments","attachments","ret","Promise","all","Object","entries","map","key","obj","type","args","data","asWrite","pouchHash","blobBufferUtil","toString","hash","asString","length","digest","POUCH_HASH_KEY","OPEN_POUCHDB_STORAGE_INSTANCES","Set","POUCHDB_LOCAL_PREFIX","POUCHDB_LOCAL_PREFIX_LENGTH","POUCHDB_DESIGN_PREFIX","POUCHDB_META_FIELDNAME","pouchSwapIdToPrimary","primaryKey","docData","_id","pouchSwapIdToPrimaryString","str","pouchDocumentDataToRxDocumentData","pouchDoc","useDoc","_revisions","_deleted","_attachments","forEach","value","content_type","_meta","rxDocumentDataToPouchDocumentData","doc","pouchSwapPrimaryToId","useValue","stub","idValue","pouchStripLocalFlagFromPrimary","substring","getEventKey","isLocal","primary","revision","prefix","eventKey","pouchChangeRowToChangeEvent","id","revHeight","_rev","operation","previous","pouchChangeRowToChangeStreamEvent","pouchRow","deleted","previousDoc","ev","sequence","seq","primarySwapPouchDbQuerySelector","selector","Array","isArray","item","k","v","startsWith","res","getPouchIndexDesignDocNameByIndex","index","indexName","join","RXDB_POUCH_DELETED_FLAG","localDocumentToPouch","localDocumentFromPouch","slice"],"mappings":"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","sourcesContent":["import type {\n    ChangeStreamEvent,\n    MaybeReadonly,\n    PouchChangeRow,\n    PouchDBInstance,\n    RxAttachmentData,\n    RxAttachmentWriteData,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxLocalDocumentData,\n    WithAttachments\n} from '../../types';\nimport type { RxStorageInstancePouch } from './rx-storage-instance-pouch';\nimport { binaryMd5 } from 'pouchdb-md5';\nimport type {\n    RxStorageKeyObjectInstancePouch\n} from './rx-storage-key-object-instance-pouch';\nimport {\n    blobBufferUtil,\n    flatClone,\n    getHeightOfRevision\n} from '../../util';\nimport { newRxError } from '../../rx-error';\nimport type { ChangeEvent } from 'event-reduce-js';\n\nexport type PouchStorageInternals = {\n    pouch: PouchDBInstance;\n};\n\n/**\n * Used to check in tests if all instances have been cleaned up.\n */\nexport const OPEN_POUCHDB_STORAGE_INSTANCES: Set<RxStorageKeyObjectInstancePouch | RxStorageInstancePouch<any>> = new Set();\n\n/**\n * prefix of local pouchdb documents\n */\nexport const POUCHDB_LOCAL_PREFIX: '_local/' = '_local/';\nexport const POUCHDB_LOCAL_PREFIX_LENGTH = POUCHDB_LOCAL_PREFIX.length;\n\n/**\n * Pouchdb stores indexes as design documents,\n * we have to filter them out and not return the\n * design documents to the outside.\n */\nexport const POUCHDB_DESIGN_PREFIX: '_design/' = '_design/';\n\n\n/**\n * PouchDB does not allow to add custom properties\n * that start with lodash like RxDB's _meta field.\n * So we have to map this field into a non-lodashed field.\n */\nexport const POUCHDB_META_FIELDNAME = 'rxdbMeta';\n\nexport function pouchSwapIdToPrimary<T>(\n    primaryKey: keyof T,\n    docData: any\n): any {\n\n    if (primaryKey === '_id' || docData[primaryKey]) {\n        return docData;\n    }\n    docData = flatClone(docData);\n    docData[primaryKey] = docData._id;\n    delete docData._id;\n\n    return docData;\n}\n\nexport function pouchSwapIdToPrimaryString<T>(primaryKey: keyof T, str: keyof T): keyof T {\n    if (str === '_id') {\n        return primaryKey;\n    } else {\n        return str;\n    }\n}\n\nexport function pouchDocumentDataToRxDocumentData<T>(\n    primaryKey: keyof T,\n    pouchDoc: WithAttachments<T>\n): RxDocumentData<T> {\n    let useDoc: RxDocumentData<T> = pouchSwapIdToPrimary(primaryKey, pouchDoc);\n\n    // always flat clone becaues we mutate the _attachments property.\n    useDoc = flatClone(useDoc);\n    delete (useDoc as any)._revisions;\n\n    // ensure deleted flag is set.\n    useDoc._deleted = !!useDoc._deleted;\n\n    useDoc._attachments = {};\n    if (pouchDoc._attachments) {\n        Object.entries(pouchDoc._attachments).forEach(([key, value]) => {\n            if ((value as any).data) {\n                useDoc._attachments[key] = {\n                    data: (value as any).data,\n                    type: (value as any).type ? (value as any).type : (value as any).content_type\n                } as any;\n            } else {\n                useDoc._attachments[key] = {\n                    digest: value.digest,\n                    // TODO why do we need to access value.type?\n                    type: (value as any).type ? (value as any).type : value.content_type,\n                    length: value.length\n                };\n            }\n        });\n    }\n\n    useDoc._meta = (useDoc as any)[POUCHDB_META_FIELDNAME];\n    delete (useDoc as any)[POUCHDB_META_FIELDNAME];\n\n    return useDoc;\n}\n\nexport function rxDocumentDataToPouchDocumentData<T>(\n    primaryKey: keyof T,\n    doc: RxDocumentData<T> | RxDocumentWriteData<T>\n): WithAttachments<T & { _id: string; }> {\n    let pouchDoc: WithAttachments<T> = pouchSwapPrimaryToId(primaryKey, doc);\n\n    // always flat clone becaues we mutate the _attachments property.\n    pouchDoc = flatClone(pouchDoc);\n\n    pouchDoc._attachments = {};\n    if (doc._attachments) {\n        Object.entries(doc._attachments).forEach(([key, value]) => {\n            const useValue: RxAttachmentWriteData & RxAttachmentData = value as any;\n            if (useValue.data) {\n                (pouchDoc as any)._attachments[key] = {\n                    data: useValue.data,\n                    content_type: useValue.type\n                };\n            } else {\n                (pouchDoc as any)._attachments[key] = {\n                    digest: useValue.digest,\n                    content_type: useValue.type,\n                    length: useValue.length,\n                    stub: true\n                };\n            }\n        });\n    }\n\n    (pouchDoc as any)[POUCHDB_META_FIELDNAME] = (pouchDoc as any)._meta;\n    delete (pouchDoc as any)._meta;\n\n    return pouchDoc as any;\n}\n\n\n/**\n * Swaps the primaryKey of the document\n * to the _id property.\n */\nexport function pouchSwapPrimaryToId<RxDocType>(\n    primaryKey: keyof RxDocType,\n    docData: any\n): RxDocType & { _id: string } {\n    // optimisation shortcut\n    if (primaryKey === '_id') {\n        return docData;\n    }\n\n    const idValue = docData[primaryKey];\n    const ret = flatClone(docData);\n    delete ret[primaryKey];\n    ret._id = idValue;\n    return ret;\n}\n\n/**\n * in:  '_local/foobar'\n * out: 'foobar'\n */\nexport function pouchStripLocalFlagFromPrimary(str: string): string {\n    return str.substring(POUCHDB_LOCAL_PREFIX.length);\n}\n\nexport function getEventKey(\n    isLocal: boolean,\n    primary: string,\n    revision: string\n): string {\n    const prefix = isLocal ? 'local' : 'non-local';\n    const eventKey = prefix + '|' + primary + '|' + revision;\n    return eventKey;\n}\n\nexport function pouchChangeRowToChangeEvent<DocumentData>(\n    primaryKey: keyof DocumentData,\n    pouchDoc: any\n): ChangeEvent<RxDocumentData<DocumentData>> {\n    if (!pouchDoc) {\n        throw newRxError('SNH', { args: { pouchDoc } });\n    }\n    const id = pouchDoc._id;\n\n    const doc = pouchDocumentDataToRxDocumentData<DocumentData>(\n        primaryKey,\n        pouchDoc as any\n    );\n    const revHeight = doc._rev ? getHeightOfRevision(doc._rev) : 1;\n\n    if (pouchDoc._deleted) {\n        return {\n            operation: 'DELETE',\n            id,\n            doc: null,\n            previous: doc\n        };\n    } else if (revHeight === 1) {\n        return {\n            operation: 'INSERT',\n            id,\n            doc,\n            previous: null\n        };\n    } else {\n        return {\n            operation: 'UPDATE',\n            id,\n            doc: doc,\n            previous: 'UNKNOWN'\n        };\n    }\n}\n\nexport function pouchChangeRowToChangeStreamEvent<DocumentData>(\n    primaryKey: keyof DocumentData,\n    pouchRow: PouchChangeRow\n): ChangeStreamEvent<DocumentData> {\n    const doc = pouchRow.doc;\n    if (!doc) {\n        throw newRxError('SNH', { args: { pouchRow } });\n    }\n    const revHeight = getHeightOfRevision(doc._rev);\n\n    if (pouchRow.deleted) {\n        const previousDoc = flatClone(\n            pouchDocumentDataToRxDocumentData(\n                primaryKey,\n                pouchRow.doc as any\n            )\n        );\n        const ev: ChangeStreamEvent<DocumentData> = {\n            sequence: pouchRow.seq,\n            id: pouchRow.id,\n            operation: 'DELETE',\n            doc: null,\n            previous: previousDoc\n        };\n        return ev;\n    } else if (revHeight === 1) {\n        const ev: ChangeStreamEvent<DocumentData> = {\n            sequence: pouchRow.seq,\n            id: pouchRow.id,\n            operation: 'INSERT',\n            doc: pouchDocumentDataToRxDocumentData(\n                primaryKey,\n                pouchRow.doc as any\n            ),\n            previous: null\n        };\n        return ev;\n    } else {\n        const ev: ChangeStreamEvent<DocumentData> = {\n            sequence: pouchRow.seq,\n            id: pouchRow.id,\n            operation: 'UPDATE',\n            doc: pouchDocumentDataToRxDocumentData(\n                primaryKey,\n                pouchRow.doc as any\n            ),\n            previous: 'UNKNOWN'\n        };\n        return ev;\n    }\n}\n\n\n/**\n * Runs a primary swap with transform all custom primaryKey occurences\n * into '_id'\n * @recursive\n */\nexport function primarySwapPouchDbQuerySelector<RxDocType>(selector: any, primaryKey: keyof RxDocType): any {\n    if (primaryKey === '_id') {\n        return selector;\n    }\n    if (Array.isArray(selector)) {\n        return selector.map(item => primarySwapPouchDbQuerySelector(item, primaryKey));\n    } else if (typeof selector === 'object') {\n        const ret: any = {};\n        Object.entries(selector).forEach(([k, v]) => {\n            if (k === primaryKey) {\n                ret._id = v;\n            } else {\n                if (k.startsWith('$')) {\n                    ret[k] = primarySwapPouchDbQuerySelector(v, primaryKey);\n                } else {\n                    ret[k] = v;\n                }\n            }\n        });\n        return ret;\n    } else {\n        return selector;\n    }\n}\n\nexport function pouchHash(data: Buffer | Blob | string): Promise<string> {\n    return new Promise(res => {\n        binaryMd5(data, (digest: string) => {\n            res(digest);\n        });\n    });\n}\n\nexport const POUCH_HASH_KEY = 'md5';\n\nexport async function writeAttachmentsToAttachments(\n    attachments: { [attachmentId: string]: RxAttachmentData | RxAttachmentWriteData; }\n): Promise<{ [attachmentId: string]: RxAttachmentData; }> {\n    if (!attachments) {\n        return {};\n    }\n    const ret: { [attachmentId: string]: RxAttachmentData; } = {};\n    await Promise.all(\n        Object.entries(attachments).map(async ([key, obj]) => {\n            if (!obj.type) {\n                throw newRxError('SNH', { args: { obj } });\n            }\n            if ((obj as RxAttachmentWriteData).data) {\n                const asWrite = (obj as RxAttachmentWriteData);\n                const [hash, asString] = await Promise.all([\n                    pouchHash(asWrite.data),\n                    blobBufferUtil.toString(asWrite.data)\n                ]);\n\n                const length = asString.length;\n                ret[key] = {\n                    digest: POUCH_HASH_KEY + '-' + hash,\n                    length,\n                    type: asWrite.type\n                };\n            } else {\n                ret[key] = obj as RxAttachmentData;\n            }\n        })\n    );\n    return ret;\n}\n\nexport function getPouchIndexDesignDocNameByIndex(\n    index: MaybeReadonly<string[]>\n): string {\n    const indexName = 'idx-rxdb-index-' + index.join(',');\n    return indexName;\n}\n\n/**\n * PouchDB has not way to read deleted local documents\n * out of the database.\n * So instead of deleting them, we set a custom deleted flag.\n */\nexport const RXDB_POUCH_DELETED_FLAG = 'rxdb-pouch-deleted' as const;\n\n\nexport type RxLocalDocumentDataWithCustomDeletedFlag<D> = RxLocalDocumentData<D> & {\n    [k in typeof RXDB_POUCH_DELETED_FLAG]?: boolean;\n};\n\nexport function localDocumentToPouch<D>(\n    docData: RxLocalDocumentData<D>\n): RxLocalDocumentDataWithCustomDeletedFlag<D> {\n    const ret: RxLocalDocumentDataWithCustomDeletedFlag<D> = flatClone(docData);\n\n    // add local prefix\n    ret._id = POUCHDB_LOCAL_PREFIX + ret._id;\n\n    // add custom deleted flag if document is deleted \n    if (docData._deleted) {\n        ret._deleted = false;\n        ret[RXDB_POUCH_DELETED_FLAG] = true;\n    }\n\n    return ret;\n}\n\nexport function localDocumentFromPouch<D>(\n    docData: RxLocalDocumentDataWithCustomDeletedFlag<D>\n): RxLocalDocumentData<D> {\n    const ret: RxLocalDocumentData<D> = flatClone(docData);\n\n    // strip local prefix\n    ret._id = ret._id.slice(POUCHDB_LOCAL_PREFIX_LENGTH);\n\n    if (docData[RXDB_POUCH_DELETED_FLAG]) {\n        ret._deleted = true;\n        delete (ret as any)[RXDB_POUCH_DELETED_FLAG];\n    }\n\n\n    return ret;\n}\n"],"file":"pouchdb-helper.js"}