{"version":3,"file":"validate-z-schema.js","names":["VALIDATOR_CACHE","Map","_getValidator","rxSchema","hash","has","validator","ZSchema","validatorFun","obj","validate","jsonSchema","set","get","validateFullDocumentData","useValidator","errors","getLastErrors","formattedZSchemaErrors","map","title","description","message","newRxError","schema","runAfterSchemaCreated","requestIdleCallbackIfAvailable","bind","RxDBValidateZSchemaPlugin","name","rxdb","prototypes","RxSchema","proto","hooks","createRxSchema","after"],"sources":["../../../src/plugins/validate-z-schema.ts"],"sourcesContent":["/**\n * this plugin validates documents before they can be inserted into the RxCollection.\n * It's using z-schema as jsonschema-validator\n * @link https://github.com/zaggino/z-schema\n */\nimport ZSchema from 'z-schema';\nimport {\n    newRxError\n} from '../rx-error';\nimport {\n    requestIdleCallbackIfAvailable\n} from '../util';\nimport {\n    RxSchema\n} from '../rx-schema';\nimport type { RxPlugin } from '../types';\n\n/**\n * cache the validators by the schema-hash\n * so we can reuse them when multiple collections have the same schema\n */\nconst VALIDATOR_CACHE: Map<string, any> = new Map();\n\n\n/**\n * returns the parsed validator from z-schema\n * @param schemaPath if given, the schema for the sub-path is used\n * @\n */\nfunction _getValidator(\n    rxSchema: RxSchema\n) {\n    const hash = rxSchema.hash;\n    if (!VALIDATOR_CACHE.has(hash)) {\n        const validator = new (ZSchema as any)();\n        const validatorFun = (obj: any) => {\n            validator.validate(obj, rxSchema.jsonSchema);\n            return validator;\n        };\n        VALIDATOR_CACHE.set(hash, validatorFun);\n    }\n    return VALIDATOR_CACHE.get(hash);\n}\n\n/**\n * validates the given object against the schema\n * @param  schemaPath if given, the sub-schema will be validated\n * @throws {RxError} if not valid\n */\nfunction validateFullDocumentData(\n    this: RxSchema,\n    obj: any\n): any {\n    const validator = _getValidator(this);\n    const useValidator = validator(obj);\n    const errors: ZSchema.SchemaErrorDetail[] = useValidator.getLastErrors();\n    if (!errors) return obj;\n    else {\n        const formattedZSchemaErrors = (errors as any).map(({\n            title,\n            description,\n            message\n        }: any) => ({\n            title,\n            description,\n            message\n        }));\n        throw newRxError('VD2', {\n            errors: formattedZSchemaErrors,\n            obj,\n            schema: this.jsonSchema\n        });\n    }\n}\n\nconst runAfterSchemaCreated = (rxSchema: RxSchema) => {\n    // pre-generate the validator-z-schema from the schema\n    requestIdleCallbackIfAvailable(() => _getValidator.bind(rxSchema, rxSchema));\n};\n\nexport const RxDBValidateZSchemaPlugin: RxPlugin = {\n    name: 'validate-z-schema',\n    rxdb: true,\n    prototypes: {\n        /**\n         * set validate-function for the RxSchema.prototype\n         */\n        RxSchema: (proto: any) => {\n            proto._getValidator = _getValidator;\n            proto.validateFullDocumentData = validateFullDocumentData;\n        }\n    },\n    hooks: {\n        createRxSchema: {\n            after: runAfterSchemaCreated\n        }\n    }\n};\n"],"mappings":";;;;;;;;;AAKA;;AACA;;AAGA;;AATA;AACA;AACA;AACA;AACA;;AAaA;AACA;AACA;AACA;AACA,IAAMA,eAAiC,GAAG,IAAIC,GAAJ,EAA1C;AAGA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CACIC,QADJ,EAEE;EACE,IAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;;EACA,IAAI,CAACJ,eAAe,CAACK,GAAhB,CAAoBD,IAApB,CAAL,EAAgC;IAC5B,IAAME,SAAS,GAAG,IAAKC,mBAAL,EAAlB;;IACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAc;MAC/BH,SAAS,CAACI,QAAV,CAAmBD,GAAnB,EAAwBN,QAAQ,CAACQ,UAAjC;MACA,OAAOL,SAAP;IACH,CAHD;;IAIAN,eAAe,CAACY,GAAhB,CAAoBR,IAApB,EAA0BI,YAA1B;EACH;;EACD,OAAOR,eAAe,CAACa,GAAhB,CAAoBT,IAApB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASU,wBAAT,CAEIL,GAFJ,EAGO;EACH,IAAMH,SAAS,GAAGJ,aAAa,CAAC,IAAD,CAA/B;;EACA,IAAMa,YAAY,GAAGT,SAAS,CAACG,GAAD,CAA9B;EACA,IAAMO,MAAmC,GAAGD,YAAY,CAACE,aAAb,EAA5C;EACA,IAAI,CAACD,MAAL,EAAa,OAAOP,GAAP,CAAb,KACK;IACD,IAAMS,sBAAsB,GAAIF,MAAD,CAAgBG,GAAhB,CAAoB;MAAA,IAC/CC,KAD+C,QAC/CA,KAD+C;MAAA,IAE/CC,WAF+C,QAE/CA,WAF+C;MAAA,IAG/CC,OAH+C,QAG/CA,OAH+C;MAAA,OAIvC;QACRF,KAAK,EAALA,KADQ;QAERC,WAAW,EAAXA,WAFQ;QAGRC,OAAO,EAAPA;MAHQ,CAJuC;IAAA,CAApB,CAA/B;IASA,MAAM,IAAAC,mBAAA,EAAW,KAAX,EAAkB;MACpBP,MAAM,EAAEE,sBADY;MAEpBT,GAAG,EAAHA,GAFoB;MAGpBe,MAAM,EAAE,KAAKb;IAHO,CAAlB,CAAN;EAKH;AACJ;;AAED,IAAMc,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACtB,QAAD,EAAwB;EAClD;EACA,IAAAuB,oCAAA,EAA+B;IAAA,OAAMxB,aAAa,CAACyB,IAAd,CAAmBxB,QAAnB,EAA6BA,QAA7B,CAAN;EAAA,CAA/B;AACH,CAHD;;AAKO,IAAMyB,yBAAmC,GAAG;EAC/CC,IAAI,EAAE,mBADyC;EAE/CC,IAAI,EAAE,IAFyC;EAG/CC,UAAU,EAAE;IACR;AACR;AACA;IACQC,QAAQ,EAAE,kBAACC,KAAD,EAAgB;MACtBA,KAAK,CAAC/B,aAAN,GAAsBA,aAAtB;MACA+B,KAAK,CAACnB,wBAAN,GAAiCA,wBAAjC;IACH;EAPO,CAHmC;EAY/CoB,KAAK,EAAE;IACHC,cAAc,EAAE;MACZC,KAAK,EAAEX;IADK;EADb;AAZwC,CAA5C"}