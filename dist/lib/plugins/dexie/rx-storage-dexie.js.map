{"version":3,"file":"rx-storage-dexie.js","names":["RxStorageDexieStatics","hash","data","Promise","res","digest","hashKey","doesBroadcastChangestream","prepareQuery","schema","mutateableQuery","sort","query","pouchQueryPlan","getSortComparator","getQueryMatcher","_schema","mingoQuery","MingoQuery","selector","fun","doc","_deleted","cursor","find","next","RxStorageDexie","settings","name","statics","createStorageInstance","params","getRxStorageDexie","storage"],"sources":["../../../../src/plugins/dexie/rx-storage-dexie.ts"],"sourcesContent":["import type {\n    DeterministicSortComparator,\n    QueryMatcher\n} from 'event-reduce-js';\nimport type {\n    MangoQuery,\n    RxDocumentData,\n    RxJsonSchema,\n    RxStorage,\n    RxStorageInstanceCreationParams,\n    RxStorageStatics\n} from '../../types';\nimport {\n    Query as MingoQuery\n} from 'mingo';\nimport { binaryMd5 } from 'pouchdb-md5';\nimport { getDexieSortComparator } from './dexie-helper';\nimport {\n    DexieSettings,\n    DexieStorageInternals\n} from '../../types/plugins/dexie';\nimport {\n    createDexieStorageInstance,\n    RxStorageInstanceDexie\n} from './rx-storage-instance-dexie';\nimport { getPouchQueryPlan } from './query/dexie-query';\nimport { newRxError } from '../../rx-error';\n\n\nexport const RxStorageDexieStatics: RxStorageStatics = {\n    hash(data: Buffer | Blob | string): Promise<string> {\n        return new Promise(res => {\n            binaryMd5(data, (digest: string) => {\n                res(digest);\n            });\n        });\n    },\n    hashKey: 'md5',\n    doesBroadcastChangestream() {\n        return false;\n    },\n    prepareQuery<RxDocType>(\n        schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        mutateableQuery: MangoQuery<RxDocType>\n    ) {\n\n        if (!mutateableQuery.sort) {\n            throw newRxError('SNH', {\n                query: mutateableQuery\n            });\n        }\n\n        /**\n         * Store the query plan together with the\n         * prepared query to save performance.\n         */\n        (mutateableQuery as any).pouchQueryPlan = getPouchQueryPlan(\n            schema,\n            mutateableQuery\n        );\n\n        return mutateableQuery;\n    },\n\n    getSortComparator<RxDocType>(\n        schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        query: MangoQuery<RxDocType>\n    ): DeterministicSortComparator<RxDocType> {\n        return getDexieSortComparator(schema, query);\n    },\n\n    getQueryMatcher<RxDocType>(\n        _schema: RxJsonSchema<RxDocType>,\n        query: MangoQuery<RxDocType>\n    ): QueryMatcher<RxDocumentData<RxDocType>> {\n        const mingoQuery = new MingoQuery(query.selector ? query.selector : {});\n        const fun: QueryMatcher<RxDocumentData<RxDocType>> = (doc: RxDocumentData<RxDocType>) => {\n            if (doc._deleted) {\n                return false;\n            }\n            const cursor = mingoQuery.find([doc]);\n            const next = cursor.next();\n            if (next) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n        return fun;\n    }\n\n}\n\n\nexport class RxStorageDexie implements RxStorage<DexieStorageInternals, DexieSettings> {\n    public name = 'dexie';\n    public statics = RxStorageDexieStatics;\n\n    constructor(\n        public settings: DexieSettings\n    ) { }\n\n    public createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<RxDocType, DexieSettings>\n    ): Promise<RxStorageInstanceDexie<RxDocType>> {\n        return createDexieStorageInstance(this, params, this.settings);\n    }\n}\n\n\nexport function getRxStorageDexie(\n    settings: DexieSettings = {}\n): RxStorageDexie {\n    const storage = new RxStorageDexie(settings);\n    return storage;\n}\n"],"mappings":";;;;;;;;AAYA;;AAGA;;AACA;;AAKA;;AAIA;;AACA;;AAGO,IAAMA,qBAAuC,GAAG;EACnDC,IADmD,gBAC9CC,IAD8C,EACC;IAChD,OAAO,IAAIC,OAAJ,CAAY,UAAAC,GAAG,EAAI;MACtB,0BAAUF,IAAV,EAAgB,UAACG,MAAD,EAAoB;QAChCD,GAAG,CAACC,MAAD,CAAH;MACH,CAFD;IAGH,CAJM,CAAP;EAKH,CAPkD;EAQnDC,OAAO,EAAE,KAR0C;EASnDC,yBATmD,uCASvB;IACxB,OAAO,KAAP;EACH,CAXkD;EAYnDC,YAZmD,wBAa/CC,MAb+C,EAc/CC,eAd+C,EAejD;IAEE,IAAI,CAACA,eAAe,CAACC,IAArB,EAA2B;MACvB,MAAM,yBAAW,KAAX,EAAkB;QACpBC,KAAK,EAAEF;MADa,CAAlB,CAAN;IAGH;IAED;AACR;AACA;AACA;;;IACSA,eAAD,CAAyBG,cAAzB,GAA0C,mCACtCJ,MADsC,EAEtCC,eAFsC,CAA1C;IAKA,OAAOA,eAAP;EACH,CAjCkD;EAmCnDI,iBAnCmD,6BAoC/CL,MApC+C,EAqC/CG,KArC+C,EAsCT;IACtC,OAAO,yCAAuBH,MAAvB,EAA+BG,KAA/B,CAAP;EACH,CAxCkD;EA0CnDG,eA1CmD,2BA2C/CC,OA3C+C,EA4C/CJ,KA5C+C,EA6CR;IACvC,IAAMK,UAAU,GAAG,IAAIC,YAAJ,CAAeN,KAAK,CAACO,QAAN,GAAiBP,KAAK,CAACO,QAAvB,GAAkC,EAAjD,CAAnB;;IACA,IAAMC,GAA4C,GAAG,SAA/CA,GAA+C,CAACC,GAAD,EAAoC;MACrF,IAAIA,GAAG,CAACC,QAAR,EAAkB;QACd,OAAO,KAAP;MACH;;MACD,IAAMC,MAAM,GAAGN,UAAU,CAACO,IAAX,CAAgB,CAACH,GAAD,CAAhB,CAAf;MACA,IAAMI,IAAI,GAAGF,MAAM,CAACE,IAAP,EAAb;;MACA,IAAIA,IAAJ,EAAU;QACN,OAAO,IAAP;MACH,CAFD,MAEO;QACH,OAAO,KAAP;MACH;IACJ,CAXD;;IAYA,OAAOL,GAAP;EACH;AA5DkD,CAAhD;;;IAiEMM,c;EAIT,wBACWC,QADX,EAEE;IAAA,KALKC,IAKL,GALY,OAKZ;IAAA,KAJKC,OAIL,GAJe7B,qBAIf;IAAA,KADS2B,QACT,GADSA,QACT;EAAG;;;;SAEEG,qB,GAAP,+BACIC,MADJ,EAE8C;IAC1C,OAAO,wDAA2B,IAA3B,EAAiCA,MAAjC,EAAyC,KAAKJ,QAA9C,CAAP;EACH,C;;;;;;;AAIE,SAASK,iBAAT,GAEW;EAAA,IADdL,QACc,uEADY,EACZ;EACd,IAAMM,OAAO,GAAG,IAAIP,cAAJ,CAAmBC,QAAnB,CAAhB;EACA,OAAOM,OAAP;AACH"}