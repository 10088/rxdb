{"version":3,"file":"ajv-validate.js","names":["VALIDATOR_CACHE","Map","ajv","Ajv","_getValidator","rxSchema","hash","has","validator","compile","jsonSchema","set","get","validateFullDocumentData","obj","useValidator","isValid","newRxError","errors","schema","runAfterSchemaCreated","requestIdleCallbackIfAvailable","RxDBAjvValidatePlugin","name","rxdb","prototypes","RxSchema","proto","hooks","createRxSchema","after"],"sources":["../../../src/plugins/ajv-validate.ts"],"sourcesContent":["/**\n * this plugin validates documents before they can be inserted into the RxCollection.\n * It's using ajv as jsonschema-validator\n * @link https://github.com/epoberezkin/ajv\n */\nimport Ajv from 'ajv';\nimport {\n    newRxError\n} from '../rx-error';\nimport {\n    requestIdleCallbackIfAvailable\n} from '../util';\nimport {\n    RxSchema\n} from '../rx-schema';\nimport type { RxPlugin } from '../types';\n\n/**\n * cache the validators by the schema-hash\n * so we can reuse them when multiple collections have the same schema\n */\nconst VALIDATOR_CACHE: Map<string, any> = new Map();\n\n\nconst ajv = new Ajv();\n\n/**\n * returns the parsed validator from ajv\n */\nexport function _getValidator(\n    rxSchema: RxSchema\n): any {\n    const hash = rxSchema.hash;\n    if (!VALIDATOR_CACHE.has(hash)) {\n        const validator = ajv.compile(rxSchema.jsonSchema);\n        VALIDATOR_CACHE.set(hash, validator);\n    }\n    return VALIDATOR_CACHE.get(hash);\n}\n\n/**\n * validates the given object against the schema\n */\nfunction validateFullDocumentData(\n    this: RxSchema,\n    obj: any\n) {\n    const useValidator = _getValidator(this);\n    const isValid = useValidator(obj);\n    if (isValid) {\n        return obj;\n    } else {\n        throw newRxError('VD2', {\n            errors: useValidator.errors,\n            obj,\n            schema: this.jsonSchema\n        });\n    }\n}\n\nconst runAfterSchemaCreated = (rxSchema: RxSchema) => {\n    // pre-generate validator-function from the schema\n    requestIdleCallbackIfAvailable(() => _getValidator(rxSchema));\n};\n\n\n\nexport const RxDBAjvValidatePlugin: RxPlugin = {\n    name: 'ajv-validate',\n    rxdb: true,\n    prototypes: {\n        /**\n         * set validate-function for the RxSchema.prototype\n         */\n        RxSchema: (proto) => {\n            proto.validateFullDocumentData = validateFullDocumentData;\n        }\n    },\n    hooks: {\n        createRxSchema: {\n            after: runAfterSchemaCreated\n        }\n    }\n};\n"],"mappings":";;;;;;;;;;AAKA;;AACA;;AAGA;;AATA;AACA;AACA;AACA;AACA;;AAaA;AACA;AACA;AACA;AACA,IAAMA,eAAiC,GAAG,IAAIC,GAAJ,EAA1C;AAGA,IAAMC,GAAG,GAAG,IAAIC,eAAJ,EAAZ;AAEA;AACA;AACA;;AACO,SAASC,aAAT,CACHC,QADG,EAEA;EACH,IAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;;EACA,IAAI,CAACN,eAAe,CAACO,GAAhB,CAAoBD,IAApB,CAAL,EAAgC;IAC5B,IAAME,SAAS,GAAGN,GAAG,CAACO,OAAJ,CAAYJ,QAAQ,CAACK,UAArB,CAAlB;IACAV,eAAe,CAACW,GAAhB,CAAoBL,IAApB,EAA0BE,SAA1B;EACH;;EACD,OAAOR,eAAe,CAACY,GAAhB,CAAoBN,IAApB,CAAP;AACH;AAED;AACA;AACA;;;AACA,SAASO,wBAAT,CAEIC,GAFJ,EAGE;EACE,IAAMC,YAAY,GAAGX,aAAa,CAAC,IAAD,CAAlC;;EACA,IAAMY,OAAO,GAAGD,YAAY,CAACD,GAAD,CAA5B;;EACA,IAAIE,OAAJ,EAAa;IACT,OAAOF,GAAP;EACH,CAFD,MAEO;IACH,MAAM,IAAAG,mBAAA,EAAW,KAAX,EAAkB;MACpBC,MAAM,EAAEH,YAAY,CAACG,MADD;MAEpBJ,GAAG,EAAHA,GAFoB;MAGpBK,MAAM,EAAE,KAAKT;IAHO,CAAlB,CAAN;EAKH;AACJ;;AAED,IAAMU,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACf,QAAD,EAAwB;EAClD;EACA,IAAAgB,oCAAA,EAA+B;IAAA,OAAMjB,aAAa,CAACC,QAAD,CAAnB;EAAA,CAA/B;AACH,CAHD;;AAOO,IAAMiB,qBAA+B,GAAG;EAC3CC,IAAI,EAAE,cADqC;EAE3CC,IAAI,EAAE,IAFqC;EAG3CC,UAAU,EAAE;IACR;AACR;AACA;IACQC,QAAQ,EAAE,kBAACC,KAAD,EAAW;MACjBA,KAAK,CAACd,wBAAN,GAAiCA,wBAAjC;IACH;EANO,CAH+B;EAW3Ce,KAAK,EAAE;IACHC,cAAc,EAAE;MACZC,KAAK,EAAEV;IADK;EADb;AAXoC,CAAxC"}