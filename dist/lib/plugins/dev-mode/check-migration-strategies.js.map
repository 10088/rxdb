{"version":3,"file":"check-migration-strategies.js","names":["checkMigrationStrategies","schema","migrationStrategies","Array","isArray","newRxTypeError","previousVersions","getPreviousVersions","length","Object","keys","newRxError","have","should","map","vNr","v","s","filter","strat","forEach","version","type"],"sources":["../../../../src/plugins/dev-mode/check-migration-strategies.ts"],"sourcesContent":["import type { RxJsonSchema, NumberFunctionMap } from '../../types';\nimport { newRxTypeError, newRxError } from '../../rx-error';\nimport { getPreviousVersions } from '../../rx-schema';\n\n\n/**\n * checks if the migrationStrategies are ok, throws if not\n * @throws {Error|TypeError} if not ok\n */\nexport function checkMigrationStrategies(\n    schema: RxJsonSchema<any>,\n    migrationStrategies: NumberFunctionMap\n): boolean {\n    // migrationStrategies must be object not array\n    if (\n        typeof migrationStrategies !== 'object' ||\n        Array.isArray(migrationStrategies)\n    ) {\n        throw newRxTypeError('COL11', {\n            schema\n        });\n    }\n\n    const previousVersions = getPreviousVersions(schema);\n\n    // for every previousVersion there must be strategy\n    if (\n        previousVersions.length !== Object\n            .keys(migrationStrategies).length\n    ) {\n        throw newRxError('COL12', {\n            have: Object.keys(migrationStrategies),\n            should: previousVersions\n        });\n    }\n\n    // every strategy must have number as property and be a function\n    previousVersions\n        .map(vNr => ({\n            v: vNr,\n            s: migrationStrategies[(vNr + 1)]\n        }))\n        .filter(strat => typeof strat.s !== 'function')\n        .forEach(strat => {\n            throw newRxTypeError('COL13', {\n                version: strat.v,\n                type: typeof strat,\n                schema\n            });\n        });\n\n    return true;\n}\n"],"mappings":";;;;;;;AACA;;AACA;;AAGA;AACA;AACA;AACA;AACO,SAASA,wBAAT,CACHC,MADG,EAEHC,mBAFG,EAGI;EACP;EACA,IACI,OAAOA,mBAAP,KAA+B,QAA/B,IACAC,KAAK,CAACC,OAAN,CAAcF,mBAAd,CAFJ,EAGE;IACE,MAAM,IAAAG,uBAAA,EAAe,OAAf,EAAwB;MAC1BJ,MAAM,EAANA;IAD0B,CAAxB,CAAN;EAGH;;EAED,IAAMK,gBAAgB,GAAG,IAAAC,6BAAA,EAAoBN,MAApB,CAAzB,CAXO,CAaP;;EACA,IACIK,gBAAgB,CAACE,MAAjB,KAA4BC,MAAM,CAC7BC,IADuB,CAClBR,mBADkB,EACGM,MAFnC,EAGE;IACE,MAAM,IAAAG,mBAAA,EAAW,OAAX,EAAoB;MACtBC,IAAI,EAAEH,MAAM,CAACC,IAAP,CAAYR,mBAAZ,CADgB;MAEtBW,MAAM,EAAEP;IAFc,CAApB,CAAN;EAIH,CAtBM,CAwBP;;;EACAA,gBAAgB,CACXQ,GADL,CACS,UAAAC,GAAG;IAAA,OAAK;MACTC,CAAC,EAAED,GADM;MAETE,CAAC,EAAEf,mBAAmB,CAAEa,GAAG,GAAG,CAAR;IAFb,CAAL;EAAA,CADZ,EAKKG,MALL,CAKY,UAAAC,KAAK;IAAA,OAAI,OAAOA,KAAK,CAACF,CAAb,KAAmB,UAAvB;EAAA,CALjB,EAMKG,OANL,CAMa,UAAAD,KAAK,EAAI;IACd,MAAM,IAAAd,uBAAA,EAAe,OAAf,EAAwB;MAC1BgB,OAAO,EAAEF,KAAK,CAACH,CADW;MAE1BM,IAAI,EAAE,OAAOH,KAFa;MAG1BlB,MAAM,EAANA;IAH0B,CAAxB,CAAN;EAKH,CAZL;EAcA,OAAO,IAAP;AACH"}