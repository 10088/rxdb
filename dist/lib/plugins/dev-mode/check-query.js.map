{"version":3,"file":"check-query.js","names":["checkQuery","args","isPlainObject","Object","prototype","toString","call","queryObj","op","collection","name","validKeys","keys","forEach","key","includes","checkMangoQuery","schema","rxQuery","jsonSchema","massagedSelector","mangoQuery","selector","schemaTopLevelFields","properties","filter","fieldOrOperator","startsWith","field","query","schemaIndexes","indexes","index","isInSchema","find","schemaIndex"],"sources":["../../../../src/plugins/dev-mode/check-query.ts"],"sourcesContent":["import type {\n    RxPluginPreCreateRxQueryArgs,\n    MangoQuery,\n    RxPluginPrePrepareQueryArgs\n} from '../../types';\nimport deepEqual from 'fast-deep-equal';\nimport { newRxError, newRxTypeError } from '../../rx-error';\nimport {\n    massageSelector\n} from 'pouchdb-selector-core';\n\n/**\n * accidentially passing a non-valid object into the query params\n * is very hard to debug especially when queries are observed\n * This is why we do some checks here in dev-mode\n */\nexport function checkQuery(args: RxPluginPreCreateRxQueryArgs) {\n    const isPlainObject = Object.prototype.toString.call(args.queryObj) === '[object Object]';\n    if (!isPlainObject) {\n        throw newRxTypeError('QU11', {\n            op: args.op,\n            collection: args.collection.name,\n            queryObj: args.queryObj\n        });\n    }\n\n    const validKeys: (keyof MangoQuery)[] = [\n        'selector',\n        'limit',\n        'skip',\n        'sort',\n        'index'\n    ];\n    Object.keys(args.queryObj).forEach(key => {\n        if (!(validKeys as string[]).includes(key)) {\n            throw newRxTypeError('QU11', {\n                op: args.op,\n                collection: args.collection.name,\n                queryObj: args.queryObj,\n                key,\n                args: {\n                    validKeys\n                }\n            });\n        }\n    });\n}\n\n\nexport function checkMangoQuery(args: RxPluginPrePrepareQueryArgs) {\n    const schema = args.rxQuery.collection.schema.jsonSchema;\n\n    /**\n     * Ensure that all top level fields are included in the schema.\n     * TODO this check can be augmented to also check sub-fields.\n     */\n    const massagedSelector = massageSelector(args.mangoQuery.selector);\n    const schemaTopLevelFields = Object.keys(schema.properties);\n    Object.keys(massagedSelector)\n        // do not check operators\n        .filter(fieldOrOperator => !fieldOrOperator.startsWith('$'))\n        // skip this check on non-top-level fields\n        .filter(field => !field.includes('.'))\n        .forEach(field => {\n            if (!schemaTopLevelFields.includes(field)) {\n                throw newRxError('QU13', {\n                    schema,\n                    field,\n                    query: args.mangoQuery,\n                });\n            }\n        });\n\n\n    /**\n     * ensure if custom index is set,\n     * it is also defined in the schema\n     */\n    const schemaIndexes = schema.indexes ? schema.indexes : [];\n    const index = args.mangoQuery.index;\n    if (index) {\n        const isInSchema = schemaIndexes.find(schemaIndex => deepEqual(schemaIndex, index));\n        if (!isInSchema) {\n            throw newRxError(\n                'QU12',\n                {\n                    collection: args.rxQuery.collection.name,\n                    query: args.mangoQuery,\n                    schema\n                }\n            );\n        }\n    }\n}\n"],"mappings":"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"}