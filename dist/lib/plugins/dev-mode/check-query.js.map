{"version":3,"file":"check-query.js","names":["checkQuery","args","isPlainObject","Object","prototype","toString","call","queryObj","newRxTypeError","op","collection","name","validKeys","keys","forEach","key","includes","checkMangoQuery","schema","rxQuery","jsonSchema","massagedSelector","massageSelector","mangoQuery","selector","schemaTopLevelFields","properties","filter","fieldOrOperator","startsWith","field","newRxError","query","schemaIndexes","indexes","index","isInSchema","find","schemaIndex","deepEqual"],"sources":["../../../../src/plugins/dev-mode/check-query.ts"],"sourcesContent":["import type {\n    RxPluginPreCreateRxQueryArgs,\n    MangoQuery,\n    RxPluginPrePrepareQueryArgs\n} from '../../types';\nimport deepEqual from 'fast-deep-equal';\nimport { newRxError, newRxTypeError } from '../../rx-error';\nimport {\n    massageSelector\n} from 'pouchdb-selector-core';\n\n/**\n * accidentially passing a non-valid object into the query params\n * is very hard to debug especially when queries are observed\n * This is why we do some checks here in dev-mode\n */\nexport function checkQuery(args: RxPluginPreCreateRxQueryArgs) {\n    const isPlainObject = Object.prototype.toString.call(args.queryObj) === '[object Object]';\n    if (!isPlainObject) {\n        throw newRxTypeError('QU11', {\n            op: args.op,\n            collection: args.collection.name,\n            queryObj: args.queryObj\n        });\n    }\n\n    const validKeys: (keyof MangoQuery)[] = [\n        'selector',\n        'limit',\n        'skip',\n        'sort',\n        'index'\n    ];\n    Object.keys(args.queryObj).forEach(key => {\n        if (!(validKeys as string[]).includes(key)) {\n            throw newRxTypeError('QU11', {\n                op: args.op,\n                collection: args.collection.name,\n                queryObj: args.queryObj,\n                key,\n                args: {\n                    validKeys\n                }\n            });\n        }\n    });\n}\n\n\nexport function checkMangoQuery(args: RxPluginPrePrepareQueryArgs) {\n    const schema = args.rxQuery.collection.schema.jsonSchema;\n\n    /**\n     * Ensure that all top level fields are included in the schema.\n     * TODO this check can be augmented to also check sub-fields.\n     */\n    const massagedSelector = massageSelector(args.mangoQuery.selector);\n    const schemaTopLevelFields = Object.keys(schema.properties);\n    Object.keys(massagedSelector)\n        // do not check operators\n        .filter(fieldOrOperator => !fieldOrOperator.startsWith('$'))\n        // skip this check on non-top-level fields\n        .filter(field => !field.includes('.'))\n        .forEach(field => {\n            if (!schemaTopLevelFields.includes(field)) {\n                throw newRxError('QU13', {\n                    schema,\n                    field,\n                    query: args.mangoQuery,\n                });\n            }\n        });\n\n\n    /**\n     * ensure if custom index is set,\n     * it is also defined in the schema\n     */\n    const schemaIndexes = schema.indexes ? schema.indexes : [];\n    const index = args.mangoQuery.index;\n    if (index) {\n        const isInSchema = schemaIndexes.find(schemaIndex => deepEqual(schemaIndex, index));\n        if (!isInSchema) {\n            throw newRxError(\n                'QU12',\n                {\n                    collection: args.rxQuery.collection.name,\n                    query: args.mangoQuery,\n                    schema\n                }\n            );\n        }\n    }\n}\n"],"mappings":"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"}