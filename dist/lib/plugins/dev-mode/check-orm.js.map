{"version":3,"file":"check-orm.js","names":["checkOrmMethods","statics","Object","entries","forEach","k","v","newRxTypeError","name","startsWith","type","rxCollectionProperties","includes","rxDocumentProperties","newRxError","checkOrmDocumentMethods","schema","methods","topLevelFields","keys","properties","filter","funName"],"sources":["../../../../src/plugins/dev-mode/check-orm.ts"],"sourcesContent":["import {\n    newRxError,\n    newRxTypeError\n} from '../../rx-error';\nimport type { KeyFunctionMap, RxJsonSchema } from '../../types';\nimport { rxCollectionProperties, rxDocumentProperties } from './entity-properties';\n\n/**\n * checks if the given static methods are allowed\n * @throws if not allowed\n */\nexport function checkOrmMethods(statics?: KeyFunctionMap) {\n    if (!statics) {\n        return;\n    }\n    Object\n        .entries(statics)\n        .forEach(([k, v]) => {\n            if (typeof k !== 'string') {\n                throw newRxTypeError('COL14', {\n                    name: k\n                });\n            }\n\n            if (k.startsWith('_')) {\n                throw newRxTypeError('COL15', {\n                    name: k\n                });\n            }\n\n            if (typeof v !== 'function') {\n                throw newRxTypeError('COL16', {\n                    name: k,\n                    type: typeof k\n                });\n            }\n\n            if (\n                rxCollectionProperties().includes(k) ||\n                rxDocumentProperties().includes(k)\n            ) {\n                throw newRxError('COL17', {\n                    name: k\n                });\n            }\n        });\n}\n\n\nexport function checkOrmDocumentMethods<RxDocType>(\n    schema: RxJsonSchema<RxDocType>,\n    methods?: any,\n) {\n    const topLevelFields = Object.keys(schema.properties) as (keyof RxDocType)[];\n    if (!methods) {\n        return;\n    }\n    Object.keys(methods)\n        .filter(funName => topLevelFields.includes(funName as any))\n        .forEach(funName => {\n            throw newRxError('COL18', {\n                funName\n            });\n        });\n}\n"],"mappings":";;;;;;;;AAAA;;AAKA;;AAEA;AACA;AACA;AACA;AACO,SAASA,eAAT,CAAyBC,OAAzB,EAAmD;EACtD,IAAI,CAACA,OAAL,EAAc;IACV;EACH;;EACDC,MAAM,CACDC,OADL,CACaF,OADb,EAEKG,OAFL,CAEa,gBAAY;IAAA,IAAVC,CAAU;IAAA,IAAPC,CAAO;;IACjB,IAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2B;MACvB,MAAM,IAAAE,uBAAA,EAAe,OAAf,EAAwB;QAC1BC,IAAI,EAAEH;MADoB,CAAxB,CAAN;IAGH;;IAED,IAAIA,CAAC,CAACI,UAAF,CAAa,GAAb,CAAJ,EAAuB;MACnB,MAAM,IAAAF,uBAAA,EAAe,OAAf,EAAwB;QAC1BC,IAAI,EAAEH;MADoB,CAAxB,CAAN;IAGH;;IAED,IAAI,OAAOC,CAAP,KAAa,UAAjB,EAA6B;MACzB,MAAM,IAAAC,uBAAA,EAAe,OAAf,EAAwB;QAC1BC,IAAI,EAAEH,CADoB;QAE1BK,IAAI,EAAE,OAAOL;MAFa,CAAxB,CAAN;IAIH;;IAED,IACI,IAAAM,wCAAA,IAAyBC,QAAzB,CAAkCP,CAAlC,KACA,IAAAQ,sCAAA,IAAuBD,QAAvB,CAAgCP,CAAhC,CAFJ,EAGE;MACE,MAAM,IAAAS,mBAAA,EAAW,OAAX,EAAoB;QACtBN,IAAI,EAAEH;MADgB,CAApB,CAAN;IAGH;EACJ,CA9BL;AA+BH;;AAGM,SAASU,uBAAT,CACHC,MADG,EAEHC,OAFG,EAGL;EACE,IAAMC,cAAc,GAAGhB,MAAM,CAACiB,IAAP,CAAYH,MAAM,CAACI,UAAnB,CAAvB;;EACA,IAAI,CAACH,OAAL,EAAc;IACV;EACH;;EACDf,MAAM,CAACiB,IAAP,CAAYF,OAAZ,EACKI,MADL,CACY,UAAAC,OAAO;IAAA,OAAIJ,cAAc,CAACN,QAAf,CAAwBU,OAAxB,CAAJ;EAAA,CADnB,EAEKlB,OAFL,CAEa,UAAAkB,OAAO,EAAI;IAChB,MAAM,IAAAR,mBAAA,EAAW,OAAX,EAAoB;MACtBQ,OAAO,EAAPA;IADsB,CAApB,CAAN;EAGH,CANL;AAOH"}